<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Bang&#39;s Blog</title>
  
  
  <link href="https://bangwu2001.github.io/atom.xml" rel="self"/>
  
  <link href="https://bangwu2001.github.io/"/>
  <updated>2025-05-25T02:34:02.544Z</updated>
  <id>https://bangwu2001.github.io/</id>
  
  <author>
    <name>Bang</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>minio</title>
    <link href="https://bangwu2001.github.io/2025/05/25/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9B%B8%E5%85%B3/%E6%A1%86%E6%9E%B6%E8%AF%AD%E8%A8%80%E7%9B%B8%E5%85%B3/%E9%9B%B6%E6%95%A3%E7%9F%A5%E8%AF%86/minIo/minIo/"/>
    <id>https://bangwu2001.github.io/2025/05/25/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9B%B8%E5%85%B3/%E6%A1%86%E6%9E%B6%E8%AF%AD%E8%A8%80%E7%9B%B8%E5%85%B3/%E9%9B%B6%E6%95%A3%E7%9F%A5%E8%AF%86/minIo/minIo/</id>
    <published>2025-05-25T02:52:00.000Z</published>
    <updated>2025-05-25T02:34:02.544Z</updated>
    
    <content type="html"><![CDATA[<h1 id="MinIo"><a href="#MinIo" class="headerlink" title="MinIo"></a>MinIo</h1><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><h3 id="对象存储方式对比"><a href="#对象存储方式对比" class="headerlink" title="对象存储方式对比"></a>对象存储方式对比</h3><div class="table-container"><table><thead><tr><th style="text-align:center">存储方式</th><th>优点</th><th style="text-align:center">缺点</th></tr></thead><tbody><tr><td style="text-align:center">服务器磁盘</td><td>开发便捷、成本低</td><td style="text-align:center">可扩展性差</td></tr><tr><td style="text-align:center">分布式文件系统</td><td>容易实现扩容（增加存储节点）</td><td style="text-align:center">管理复杂度高</td></tr><tr><td style="text-align:center">第三方存储</td><td>功能强大，免维护</td><td style="text-align:center">收费</td></tr></tbody></table></div><h3 id="分布式文件系统"><a href="#分布式文件系统" class="headerlink" title="分布式文件系统"></a>分布式文件系统</h3><p>目前主流的分布式文件系统有<code>FastDFS</code>和<code>MinIo</code></p><h4 id="FastDFS"><a href="#FastDFS" class="headerlink" title="FastDFS"></a>FastDFS</h4><p><strong>优点</strong></p><ul><li>主备服务、高可用</li><li>支持主从文件，支持自定义扩展名</li><li>支持动态扩容</li></ul><p><strong>缺点</strong></p><ul><li>没有完备的官方文档，近几年文档未更新</li><li>环境搭建比较麻烦</li></ul><h4 id="MinIo-1"><a href="#MinIo-1" class="headerlink" title="MinIo"></a>MinIo</h4><p><strong>优点</strong></p><ul><li>性能高，准硬件条件下，能够达到55GB/s的读，35GB/s的写速率</li><li>部署自带管理界面</li><li>MinIo.Inc运营的开源项目，社区活跃度高</li><li>提供了所有主流开发语言的SDK</li></ul><p><strong>缺点</strong></p><ul><li>不支持动态增加节点</li></ul><h3 id="MinIo概述"><a href="#MinIo概述" class="headerlink" title="MinIo概述"></a>MinIo概述</h3><ul><li><p>MinIO基于Apache License v2.0开源协议的对象存储服务，可以做为云存储的解决方案用来保存海量的图片，视频，文档。由于采用Golang实现，服务端可以工作在Windows,Linux, OS X和FreeBSD上。配置简单，基本是复制可执行程序，单行命令可以运行起来。</p></li><li><p>MinIO兼容亚马逊S3云存储服务接口，非常适合于存储大容量非结构化的数据，例如图片、视频、日志文件、备份数据和容器/虚拟机镜像等，而一个对象文件可以是任意大小，从几kb到最大5T不等。</p></li></ul><p><a href="https://minio.org.cn/docs/minio/container/index.html">MinIo官方文档</a>，可以在<code>docker</code>、<code>linux/mac</code>以及<code>windows</code>等不同环境中进行安装部署</p><h2 id="Minio启动"><a href="#Minio启动" class="headerlink" title="Minio启动"></a>Minio启动</h2><h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><p>采用<code>doker</code>环境安装</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p ~/minio/data</span><br><span class="line"></span><br><span class="line">docker run \</span><br><span class="line">   -p 9000:9000 \</span><br><span class="line">   -p 9001:9001 \</span><br><span class="line">   --name minio \</span><br><span class="line">   -d --restart=always \  #后台运行，开机自启</span><br><span class="line">   -v ~/minio/data:/data \</span><br><span class="line">   -e &quot;MINIO_ROOT_USER=root&quot; \  #用户名</span><br><span class="line">   -e &quot;MINIO_ROOT_PASSWORD=root123456&quot; \ #密码</span><br><span class="line">   quay.io/minio/minio server /data --console-address &quot;:9001&quot;</span><br></pre></td></tr></table></figure><p>访问<code>http://ip地址:9001</code>可以进入管理界面</p><p><img src="/2025/05/25/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9B%B8%E5%85%B3/%E6%A1%86%E6%9E%B6%E8%AF%AD%E8%A8%80%E7%9B%B8%E5%85%B3/%E9%9B%B6%E6%95%A3%E7%9F%A5%E8%AF%86/minIo/minIo/image-20250524105324177.png" alt="image-20250524105324177" style="zoom:67%;"></p><p>登录进入后的页面</p><p><img src="/2025/05/25/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9B%B8%E5%85%B3/%E6%A1%86%E6%9E%B6%E8%AF%AD%E8%A8%80%E7%9B%B8%E5%85%B3/%E9%9B%B6%E6%95%A3%E7%9F%A5%E8%AF%86/minIo/minIo/image-20250524105418145.png" alt="image-20250524105418145" style="zoom:67%;"></p><h4 id="MinIo基本概念"><a href="#MinIo基本概念" class="headerlink" title="MinIo基本概念"></a>MinIo基本概念</h4><ul><li><code>bucket</code>：类比于文件系统的目录</li><li><code>Object</code>：类比文件系统的文件</li><li><code>keys</code>：类比文件名</li></ul><h4 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h4><p>创建名为<code>public-res</code>的bucket，然后手动上传文件<code>liu.jpg</code></p><p><img src="/2025/05/25/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9B%B8%E5%85%B3/%E6%A1%86%E6%9E%B6%E8%AF%AD%E8%A8%80%E7%9B%B8%E5%85%B3/%E9%9B%B6%E6%95%A3%E7%9F%A5%E8%AF%86/minIo/minIo/image-20250524145105526.png" alt="image-20250524145105526"></p><p>然后直接访问<code>http://ip地址:9000/public-res/liu.jpg</code>即可在线查看该文件</p><p><img src="/2025/05/25/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9B%B8%E5%85%B3/%E6%A1%86%E6%9E%B6%E8%AF%AD%E8%A8%80%E7%9B%B8%E5%85%B3/%E9%9B%B6%E6%95%A3%E7%9F%A5%E8%AF%86/minIo/minIo/image-20250524145210438.png" alt="image-20250524145210438"></p><h2 id="入门案例"><a href="#入门案例" class="headerlink" title="入门案例"></a>入门案例</h2><p>利用<code>MinIo Java SDK</code>实现静态资源文件上传</p><p>官方文档：<a href="https://min.io/docs/minio/linux/developers/java/API.html#uploadObject">MinIo SDK For Java Docs</a></p><p>Github项目示例：<a href="https://github.com/minio/minio-java">MinIo-Java Github Project</a></p><p><strong>导入依赖</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.minio<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>minio<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>7.1.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>文件上传代码</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testUploadFile</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//1.建立客户端</span></span><br><span class="line">            <span class="type">MinioClient</span> <span class="variable">minioClient</span> <span class="operator">=</span> MinioClient.builder()</span><br><span class="line">                    .endpoint(<span class="string">&quot;http://192.168.134.129:9000&quot;</span>)</span><br><span class="line">                    .credentials(<span class="string">&quot;root&quot;</span>, <span class="string">&quot;root123456&quot;</span>)</span><br><span class="line">                    .build();</span><br><span class="line">            <span class="comment">//2.判断对应的Bucket是否存在</span></span><br><span class="line">            <span class="type">boolean</span> <span class="variable">bucketExists</span> <span class="operator">=</span> minioClient.bucketExists(BucketExistsArgs.builder()</span><br><span class="line">                    .bucket(<span class="string">&quot;public-res&quot;</span>).build());</span><br><span class="line">            <span class="comment">//如果不存在，创建对应的文件夹</span></span><br><span class="line">            <span class="keyword">if</span>(!bucketExists)&#123;</span><br><span class="line">                minioClient.makeBucket(MakeBucketArgs.builder()</span><br><span class="line">                        .bucket(<span class="string">&quot;public-res&quot;</span>)</span><br><span class="line">                        .build());</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;bucket public-res already exists&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//上传文件</span></span><br><span class="line">            <span class="type">FileInputStream</span> <span class="variable">inputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileInputStream</span>(<span class="string">&quot;./ceshi.txt&quot;</span>);</span><br><span class="line">            <span class="comment">//指定文件的一些信息</span></span><br><span class="line">            Map&lt;String,String&gt; metaData = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">            metaData.put(<span class="string">&quot;Content-Encoding&quot;</span>, <span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line"></span><br><span class="line">            minioClient.putObject(PutObjectArgs.builder()</span><br><span class="line">                    .bucket(<span class="string">&quot;public-res&quot;</span>)<span class="comment">//指定上传到哪一个文件夹</span></span><br><span class="line">                    .contentType(<span class="string">&quot;text/html&quot;</span>)<span class="comment">//文件类型</span></span><br><span class="line">                    .object(<span class="string">&quot;first2.html&quot;</span>)<span class="comment">//上传之后的文件名</span></span><br><span class="line">                    .stream(inputStream,inputStream.available(),-<span class="number">1</span>)<span class="comment">//文件流</span></span><br><span class="line">                    .userMetadata(metaData)<span class="comment">//编码格式为utf-8，否则中文乱码</span></span><br><span class="line">                    .build());</span><br><span class="line">            System.out.println(<span class="string">&quot;file test.html is successfully uploaded&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>后续可以直接通过链接<code>http://ip地址:9000/bucket名称/文件名</code>来访问对应文件</p><h2 id="封装starter"><a href="#封装starter" class="headerlink" title="封装starter"></a>封装<code>starter</code></h2><p>利用<code>springboot</code>将<code>minio</code>相关操作封装成<code>starter</code>，便于其他服务调用</p><h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p>封装的<code>Api</code>接口主要包括:</p><ul><li>上传文件</li><li>下载文件</li><li>删除文件</li></ul><p><code>minio</code>在操作过程中，需要的参数：</p><ul><li>Endpoint：minio服务地址</li><li>Access Key：用户名</li><li>Secret Key：用户密码</li><li>bucket：操作的文件夹名</li></ul><p>为便于后续使用和扩展，将这几个参数以<code>springboot properties</code>的形式呈现，使用时则可以直接在配置文件<code>application.properties</code>中进行配置即可</p><p>利用<code>springboot</code>自动装配的特性，将对应的实体类全类名写入<code>META-INF/spring.factories</code></p><h3 id="代码编写"><a href="#代码编写" class="headerlink" title="代码编写"></a>代码编写</h3><p>新建项目<code>minio-starter</code></p><h4 id="依赖导入"><a href="#依赖导入" class="headerlink" title="依赖导入"></a>依赖导入</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--sprinboot自动装配相关--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-autoconfigure<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-configuration-processor<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- minio--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.minio<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>minio<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>8.5.17<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--springboot test--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="properties实体类"><a href="#properties实体类" class="headerlink" title="properties实体类"></a>properties实体类</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@ConfigurationProperties(prefix = &quot;minio&quot;)</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MinIoConfigProperties</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> String endpoint;</span><br><span class="line">    <span class="keyword">public</span> String accessKey;</span><br><span class="line">    <span class="keyword">public</span> String secretKey;</span><br><span class="line">    <span class="keyword">public</span> String bucket;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="配置类—实例化MinIoClient"><a href="#配置类—实例化MinIoClient" class="headerlink" title="配置类—实例化MinIoClient"></a>配置类—实例化MinIoClient</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="meta">@EnableConfigurationProperties(&#123;MinIoConfigProperties.class&#125;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MiniIoConfig</span> &#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> MinIoConfigProperties minIoConfigProperties;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> MinioClient <span class="title function_">minioClient</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> MinioClient.builder()</span><br><span class="line">                .endpoint(minIoConfigProperties.endpoint)</span><br><span class="line">                .credentials(minIoConfigProperties.accessKey, minIoConfigProperties.secretKey)</span><br><span class="line">                .build();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="相关操作的接口类"><a href="#相关操作的接口类" class="headerlink" title="相关操作的接口类"></a>相关操作的接口类</h4><p><code>FileOperationService</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">FileOperationService</span> &#123;</span><br><span class="line">    <span class="comment">//1.判断bucket是否存在</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">bucketIsExist</span><span class="params">()</span>;</span><br><span class="line">    <span class="comment">//2.上传文件</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">uploadFile</span><span class="params">(String fileName, InputStream inputStream)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>FileOperationServiceImpl</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@EnableConfigurationProperties(&#123;MinIoConfigProperties.class&#125;)</span></span><br><span class="line"><span class="meta">@Import(&#123;MiniIoConfig.class&#125;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">FileOperationServiceImpl</span> <span class="keyword">implements</span> <span class="title class_">FileOperationService</span>&#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> MinIoConfigProperties minIoConfigProperties;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> MinioClient minioClient;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">bucketIsExist</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> minioClient.bucketExists(BucketExistsArgs</span><br><span class="line">                    .builder()</span><br><span class="line">                    .bucket(minIoConfigProperties.bucket)</span><br><span class="line">                    .build());</span><br><span class="line">        &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">uploadFile</span><span class="params">(String fileName, InputStream inputStream)</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="type">PutObjectArgs</span> <span class="variable">objectArgs</span> <span class="operator">=</span> PutObjectArgs.builder()</span><br><span class="line">                    .stream(inputStream, inputStream.available(), -<span class="number">1</span>)</span><br><span class="line">                    .object(fileName)</span><br><span class="line">                    .bucket(minIoConfigProperties.bucket)</span><br><span class="line">                    .build();</span><br><span class="line">            minioClient.putObject(objectArgs);</span><br><span class="line">            <span class="comment">//文件路径</span></span><br><span class="line">            <span class="keyword">return</span> minIoConfigProperties.endpoint+<span class="string">&quot;/&quot;</span>+minIoConfigProperties.bucket</span><br><span class="line">                    +<span class="string">&quot;/&quot;</span>+fileName;</span><br><span class="line">        &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="对外加入自动配置"><a href="#对外加入自动配置" class="headerlink" title="对外加入自动配置"></a>对外加入自动配置</h4><p>在<code>resources</code>目录下新建文件<code>META-INF/spring.factories</code>，添加如下内容</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">org.springframework.boot.autoconfigure.EnableAutoConfiguration=com.bang.service.FileOperationServiceImpl</span><br></pre></td></tr></table></figure><h4 id="其他项目引用minio-starter"><a href="#其他项目引用minio-starter" class="headerlink" title="其他项目引用minio-starter"></a>其他项目引用<code>minio-starter</code></h4><h5 id="导入依赖"><a href="#导入依赖" class="headerlink" title="导入依赖"></a>导入依赖</h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.bang<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>minio-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="添加配置"><a href="#添加配置" class="headerlink" title="添加配置"></a>添加配置</h5><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">minio:</span></span><br><span class="line">  <span class="attr">endpoint:</span> <span class="string">http://192.168.134.129:9000</span></span><br><span class="line">  <span class="attr">accessKey:</span> <span class="string">root</span></span><br><span class="line">  <span class="attr">secretKey:</span> <span class="string">root123456</span></span><br><span class="line">  <span class="attr">bucket:</span> <span class="string">public-res</span></span><br></pre></td></tr></table></figure><h5 id="编写测试代码"><a href="#编写测试代码" class="headerlink" title="编写测试代码"></a>编写测试代码</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="meta">@RunWith(SpringJUnit4ClassRunner.class)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestMinioStarter</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> FileOperationService fileOperationService;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testExist</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">boolean</span> <span class="variable">isExist</span> <span class="operator">=</span> fileOperationService.bucketIsExist();</span><br><span class="line">        System.out.println(<span class="string">&quot;bucket exits:&quot;</span>+isExist);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">uploadFile</span><span class="params">()</span> <span class="keyword">throws</span> FileNotFoundException &#123;</span><br><span class="line">        <span class="type">FileInputStream</span> <span class="variable">inputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileInputStream</span>(<span class="string">&quot;./girl.jpg&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">fileUrl</span> <span class="operator">=</span> fileOperationService.uploadFile(<span class="string">&quot;girl.jpg&quot;</span>, inputStream);</span><br><span class="line">        System.out.println(fileUrl);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;MinIo&quot;&gt;&lt;a href=&quot;#MinIo&quot; class=&quot;headerlink&quot; title=&quot;MinIo&quot;&gt;&lt;/a&gt;MinIo&lt;/h1&gt;&lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简</summary>
      
    
    
    
    <category term="java杂项" scheme="https://bangwu2001.github.io/categories/java%E6%9D%82%E9%A1%B9/"/>
    
    
    <category term="java" scheme="https://bangwu2001.github.io/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>freemarker</title>
    <link href="https://bangwu2001.github.io/2025/05/24/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9B%B8%E5%85%B3/%E6%A1%86%E6%9E%B6%E8%AF%AD%E8%A8%80%E7%9B%B8%E5%85%B3/%E9%9B%B6%E6%95%A3%E7%9F%A5%E8%AF%86/%E9%9D%99%E6%80%81%E6%A8%A1%E6%9D%BFfreemarker/freemarker/"/>
    <id>https://bangwu2001.github.io/2025/05/24/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9B%B8%E5%85%B3/%E6%A1%86%E6%9E%B6%E8%AF%AD%E8%A8%80%E7%9B%B8%E5%85%B3/%E9%9B%B6%E6%95%A3%E7%9F%A5%E8%AF%86/%E9%9D%99%E6%80%81%E6%A8%A1%E6%9D%BFfreemarker/freemarker/</id>
    <published>2025-05-24T04:52:00.000Z</published>
    <updated>2025-05-23T17:24:12.596Z</updated>
    
    <content type="html"><![CDATA[<h1 id="freemarker"><a href="#freemarker" class="headerlink" title="freemarker"></a>freemarker</h1><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p><code>FreeMarker</code>是一款模板引擎，即能够基于模板和要改变的数据，来生成输出文本（比如html网页、电子邮件、配置文件、源代码等）的通用工具。</p><p><img src="/2025/05/24/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9B%B8%E5%85%B3/%E6%A1%86%E6%9E%B6%E8%AF%AD%E8%A8%80%E7%9B%B8%E5%85%B3/%E9%9B%B6%E6%95%A3%E7%9F%A5%E8%AF%86/%E9%9D%99%E6%80%81%E6%A8%A1%E6%9D%BFfreemarker/freemarker/image-20250522223558537.png" alt="image-20250522223558537"></p><h2 id="入门案例"><a href="#入门案例" class="headerlink" title="入门案例"></a>入门案例</h2><p><code>springboot</code>整合<code>freemarker</code>，生成的静态文件作为<code>mvc</code>视图返回</p><h3 id="导入依赖"><a href="#导入依赖" class="headerlink" title="导入依赖"></a>导入依赖</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.3.9.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-freemarker<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.3.9.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.3.9.RELEAS<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- lombok --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.18.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- apache 对 java io 的封装工具库 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.commons<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-io<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.3.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="设置配置文件"><a href="#设置配置文件" class="headerlink" title="设置配置文件"></a>设置配置文件</h3><p><code>application.yml</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">freeMarker-demo</span></span><br><span class="line">  <span class="attr">freemarker:</span></span><br><span class="line">    <span class="attr">cache:</span> <span class="literal">false</span>  <span class="comment">#关闭模板缓存，方便测试</span></span><br><span class="line">    <span class="attr">settings:</span></span><br><span class="line">      <span class="attr">template_update_delay:</span> <span class="number">0</span> <span class="comment">#检查模板更新延迟时间，设置为0表示立即检查，如果时间大于0会有缓存不方便进行模板测试</span></span><br><span class="line">    <span class="attr">suffix:</span> <span class="string">.ftl</span>               <span class="comment">#指定Freemarker模板文件的后缀名</span></span><br><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">9000</span></span><br></pre></td></tr></table></figure><h3 id="创建模板文件"><a href="#创建模板文件" class="headerlink" title="创建模板文件"></a>创建模板文件</h3><p>在<code>resources</code>下创建<code>templates</code>，此目录为<code>freemarker</code>的默认模板存放目录</p><p>在<code>templates</code>文件夹下创建模板文件<code>f1.ftl</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;utf-8&quot;&gt;</span><br><span class="line">    &lt;title&gt;Hello World!&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;b&gt;普通文本 String 展示：&lt;/b&gt;&lt;br&gt;&lt;br&gt;</span><br><span class="line">Hello $&#123;name&#125; &lt;br&gt;</span><br><span class="line">&lt;hr&gt;</span><br><span class="line">&lt;b&gt;对象Student中的数据展示：&lt;/b&gt;&lt;br/&gt;</span><br><span class="line">姓名：$&#123;stu.name&#125;&lt;br/&gt;</span><br><span class="line">年龄：$&#123;stu.age&#125;</span><br><span class="line">&lt;hr&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h3 id="创建模板类"><a href="#创建模板类" class="headerlink" title="创建模板类"></a>创建模板类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Student</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String name;<span class="comment">//姓名</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> age;<span class="comment">//年龄</span></span><br><span class="line">    <span class="keyword">private</span> Date birthday;<span class="comment">//生日</span></span><br><span class="line">    <span class="keyword">private</span> Float money;<span class="comment">//钱包</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="编写controller层代码"><a href="#编写controller层代码" class="headerlink" title="编写controller层代码"></a>编写controller层代码</h3><p>将<code>freeMarker</code>生成的静态文件作为视图返回</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">FreeMarkerController</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/fHello&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">fHello</span><span class="params">(Model model)</span>&#123;</span><br><span class="line">        model.addAttribute(<span class="string">&quot;name&quot;</span>,<span class="string">&quot;李白&quot;</span>);</span><br><span class="line">        <span class="type">Student</span> <span class="variable">stu</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>();</span><br><span class="line">        stu.setName(<span class="string">&quot;张飞&quot;</span>);</span><br><span class="line">        stu.setAge(<span class="number">28</span>);</span><br><span class="line">        model.addAttribute(<span class="string">&quot;stu&quot;</span>,stu);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;f1&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="访问页面"><a href="#访问页面" class="headerlink" title="访问页面"></a>访问页面</h3><p>访问<code>http://localhost:9000/fHello</code></p><p><img src="/2025/05/24/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9B%B8%E5%85%B3/%E6%A1%86%E6%9E%B6%E8%AF%AD%E8%A8%80%E7%9B%B8%E5%85%B3/%E9%9B%B6%E6%95%A3%E7%9F%A5%E8%AF%86/%E9%9D%99%E6%80%81%E6%A8%A1%E6%9D%BFfreemarker/freemarker/image-20250522230657087.png" alt="image-20250522230657087"></p><h3 id="原理分析"><a href="#原理分析" class="headerlink" title="原理分析"></a>原理分析</h3><p><img src="/2025/05/24/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9B%B8%E5%85%B3/%E6%A1%86%E6%9E%B6%E8%AF%AD%E8%A8%80%E7%9B%B8%E5%85%B3/%E9%9B%B6%E6%95%A3%E7%9F%A5%E8%AF%86/%E9%9D%99%E6%80%81%E6%A8%A1%E6%9D%BFfreemarker/freemarker/image-20250522231733356.png" alt="image-20250522231733356"></p><p><img src="/2025/05/24/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9B%B8%E5%85%B3/%E6%A1%86%E6%9E%B6%E8%AF%AD%E8%A8%80%E7%9B%B8%E5%85%B3/%E9%9B%B6%E6%95%A3%E7%9F%A5%E8%AF%86/%E9%9D%99%E6%80%81%E6%A8%A1%E6%9D%BFfreemarker/freemarker/image-20250522231807925.png" alt="image-20250522231807925"></p><p><img src="/2025/05/24/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9B%B8%E5%85%B3/%E6%A1%86%E6%9E%B6%E8%AF%AD%E8%A8%80%E7%9B%B8%E5%85%B3/%E9%9B%B6%E6%95%A3%E7%9F%A5%E8%AF%86/%E9%9D%99%E6%80%81%E6%A8%A1%E6%9D%BFfreemarker/freemarker/image-20250522231830581.png" alt="image-20250522231830581"></p><p><img src="/2025/05/24/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9B%B8%E5%85%B3/%E6%A1%86%E6%9E%B6%E8%AF%AD%E8%A8%80%E7%9B%B8%E5%85%B3/%E9%9B%B6%E6%95%A3%E7%9F%A5%E8%AF%86/%E9%9D%99%E6%80%81%E6%A8%A1%E6%9D%BFfreemarker/freemarker/image-20250522231908485.png" alt="image-20250522231908485"></p><p>可以通过在<code>application.yml</code>中更改默认文件夹和文件后缀名</p><h2 id="freeMarker的指令和语法"><a href="#freeMarker的指令和语法" class="headerlink" title="freeMarker的指令和语法"></a>freeMarker的指令和语法</h2><h3 id="基础语法"><a href="#基础语法" class="headerlink" title="基础语法"></a>基础语法</h3><h4 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h4><p><code>&lt;#-- --&gt;</code>，介于其之间的内容会被<code>freemarker</code>忽略</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;#-- 注释部分 --&gt;</span><br></pre></td></tr></table></figure><h4 id="插值"><a href="#插值" class="headerlink" title="插值"></a>插值</h4><p><code>$&#123;&#125;</code>部分的内容，<code>freemarker</code>会用真实值去替换</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Hello $&#123;name&#125;</span><br></pre></td></tr></table></figure><h4 id="FTL指令"><a href="#FTL指令" class="headerlink" title="FTL指令"></a>FTL指令</h4><p>和<code>html</code>中的标签类似，名字前加#以示区分，<code>freemarker</code>会解析标签中的表达式或逻辑</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;#指令名&gt;FTL指令&lt;/#指令名&gt;</span><br></pre></td></tr></table></figure><h4 id="文本"><a href="#文本" class="headerlink" title="文本"></a>文本</h4><p>直接写的内容，是表示仅文本信息，这些内容不会被<code>freemarker</code>解析，而是直接将内容输出</p><h3 id="常用指令"><a href="#常用指令" class="headerlink" title="常用指令"></a>常用指令</h3><h4 id="集合指令—List"><a href="#集合指令—List" class="headerlink" title="集合指令—List"></a>集合指令—List</h4><p><code>&lt;#list&gt;&lt;/#list&gt;</code></p><h5 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h5><h6 id="Java代码"><a href="#Java代码" class="headerlink" title="Java代码"></a>Java代码</h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@GetMapping(&quot;/fList&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">fList</span><span class="params">(Model model)</span>&#123;</span><br><span class="line">        List&lt;Student&gt; list = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        list.add(<span class="keyword">new</span> <span class="title class_">Student</span>(<span class="string">&quot;李白&quot;</span>,<span class="number">28</span>,<span class="keyword">new</span> <span class="title class_">Date</span>(),<span class="number">27.92f</span>));</span><br><span class="line">        list.add(<span class="keyword">new</span> <span class="title class_">Student</span>(<span class="string">&quot;曹操&quot;</span>,<span class="number">68</span>,<span class="keyword">new</span> <span class="title class_">Date</span>(),<span class="number">2007.92f</span>));</span><br><span class="line">        model.addAttribute(<span class="string">&quot;stus&quot;</span>,list);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;list&quot;</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h5 id="模板内容"><a href="#模板内容" class="headerlink" title="模板内容"></a>模板内容</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;h2&gt;学生信息列表&lt;/h2&gt;</span><br><span class="line">&lt;table&gt;</span><br><span class="line">    &lt;tr&gt;</span><br><span class="line">        &lt;th&gt;序号&lt;/th&gt;</span><br><span class="line">        &lt;th&gt;姓名&lt;/th&gt;</span><br><span class="line">        &lt;th&gt;年龄&lt;/th&gt;</span><br><span class="line">        &lt;th&gt;生日&lt;/th&gt;</span><br><span class="line">        &lt;th&gt;钱包&lt;/th&gt;</span><br><span class="line">    &lt;/tr&gt;</span><br><span class="line">    &lt;#list stus as stu&gt; &lt;#--stu为stus里面的每一个元素 --&gt;</span><br><span class="line">        &lt;tr&gt;</span><br><span class="line">            &lt;td&gt;$&#123;stu_index+1&#125;&lt;/td&gt; &lt;#-- stu_index表示当前元素索引 --&gt;</span><br><span class="line">            &lt;td&gt;$&#123;stu.name&#125;&lt;/td&gt;</span><br><span class="line">            &lt;td&gt;$&#123;stu.age&#125;&lt;/td&gt;</span><br><span class="line">            &lt;td&gt;$&#123;stu.birthday?datetime&#125;&lt;/td&gt; &lt;!-- 日期类型数据必须指定数据类型--&gt;</span><br><span class="line">            &lt;td&gt;$&#123;stu.money&#125;&lt;/td&gt;</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">    &lt;/#list&gt;</span><br><span class="line">&lt;/table&gt;</span><br></pre></td></tr></table></figure><h4 id="哈希数据—map"><a href="#哈希数据—map" class="headerlink" title="哈希数据—map"></a>哈希数据—map</h4><h5 id="如何获取map里面元素的值"><a href="#如何获取map里面元素的值" class="headerlink" title="如何获取map里面元素的值"></a>如何获取map里面元素的值</h5><ul><li>方式一：<code>map[keyname].properties</code></li><li>方式二：<code>map.keyname.properties</code></li></ul><p><strong>实例</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@GetMapping(&quot;/fMap&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">fMap</span><span class="params">(Model model)</span>&#123;</span><br><span class="line">        Map&lt;String,Student&gt; map = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        <span class="type">Student</span> <span class="variable">stu1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>(<span class="string">&quot;李白&quot;</span>,<span class="number">28</span>,<span class="keyword">new</span> <span class="title class_">Date</span>(),<span class="number">27.92f</span>);</span><br><span class="line">        <span class="type">Student</span> <span class="variable">stu2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>(<span class="string">&quot;曹操&quot;</span>,<span class="number">68</span>,<span class="keyword">new</span> <span class="title class_">Date</span>(),<span class="number">2007.92f</span>);</span><br><span class="line">        map.put(<span class="string">&quot;stu1&quot;</span>,stu1);</span><br><span class="line">        map.put(<span class="string">&quot;stu2&quot;</span>,stu2);</span><br><span class="line">        model.addAttribute(<span class="string">&quot;stusMap&quot;</span>,map);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;map&quot;</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;h2&gt;集合元素&lt;/h2&gt;</span><br><span class="line">&lt;hr/&gt;</span><br><span class="line">&lt;h4&gt;学生1的信息&lt;/h4&gt;</span><br><span class="line">&lt;p&gt;name:$&#123;stusMap.stu1.name&#125;&lt;/p&gt;</span><br><span class="line">&lt;p&gt;age:$&#123;stusMap.stu1.age&#125;&lt;/p&gt;</span><br><span class="line">&lt;p&gt;birthday:$&#123;stusMap.stu1.birthday?datetime&#125;&lt;/p&gt;</span><br><span class="line">&lt;p&gt;money:$&#123;stusMap.stu1.money&#125;&lt;/p&gt;</span><br><span class="line"></span><br><span class="line">&lt;h4&gt;学生2的信息&lt;/h4&gt;</span><br><span class="line">&lt;p&gt;name:$&#123;stusMap[&quot;stu2&quot;].name&#125;&lt;/p&gt;</span><br><span class="line">&lt;p&gt;age:$&#123;stusMap[&quot;stu2&quot;].age&#125;&lt;/p&gt;</span><br><span class="line">&lt;p&gt;birthday:$&#123;stusMap[&quot;stu2&quot;].birthday?datetime&#125;&lt;/p&gt;</span><br><span class="line">&lt;p&gt;money:$&#123;stusMap[&quot;stu2&quot;].money&#125;&lt;/p&gt;</span><br></pre></td></tr></table></figure><h5 id="遍历map"><a href="#遍历map" class="headerlink" title="遍历map"></a>遍历map</h5><ul><li><code>&lt;#list&gt;map?keys as key&lt;/#list&gt;</code></li></ul><p><code>map?keys</code>获取<code>map</code>所有的键列表</p><p><strong>实例</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@GetMapping(&quot;/fMapLsit&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">fMapList</span><span class="params">(Model model)</span>&#123;</span><br><span class="line">        Map&lt;String,Student&gt; map = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        <span class="type">Student</span> <span class="variable">stu1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>(<span class="string">&quot;李白&quot;</span>,<span class="number">28</span>,<span class="keyword">new</span> <span class="title class_">Date</span>(),<span class="number">27.92f</span>);</span><br><span class="line">        <span class="type">Student</span> <span class="variable">stu2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>(<span class="string">&quot;曹操&quot;</span>,<span class="number">68</span>,<span class="keyword">new</span> <span class="title class_">Date</span>(),<span class="number">2007.92f</span>);</span><br><span class="line">        map.put(<span class="string">&quot;stu1&quot;</span>,stu1);</span><br><span class="line">        map.put(<span class="string">&quot;stu2&quot;</span>,stu2);</span><br><span class="line">        model.addAttribute(<span class="string">&quot;stusMap&quot;</span>,map);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;mapList&quot;</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;h2&gt;集合元素&lt;/h2&gt;</span><br><span class="line">&lt;hr/&gt;</span><br><span class="line"></span><br><span class="line">&lt;#list stusMap?keys as key&gt;</span><br><span class="line">    &lt;h4&gt;学生$&#123;key_index+1&#125;的信息&lt;/h4&gt;</span><br><span class="line">    &lt;p&gt;name:$&#123;stusMap[key].name&#125;&lt;/p&gt;</span><br><span class="line">    &lt;p&gt;age:$&#123;stusMap[key].age&#125;&lt;/p&gt;</span><br><span class="line">    &lt;p&gt;birthday:$&#123;stusMap[key].birthday?datetime&#125;&lt;/p&gt;</span><br><span class="line">    &lt;p&gt;money:$&#123;stusMap[key].money&#125;&lt;/p&gt;</span><br><span class="line">&lt;/#list&gt;</span><br></pre></td></tr></table></figure><h4 id="if指令"><a href="#if指令" class="headerlink" title="if指令"></a>if指令</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;#if 条件语句&gt;</span><br><span class="line"></span><br><span class="line">&lt;#else&gt;</span><br><span class="line"></span><br><span class="line">&lt;#if&gt;</span><br></pre></td></tr></table></figure><p><strong>实例</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&lt;h2&gt;集合元素&lt;/h2&gt;</span><br><span class="line">&lt;hr/&gt;</span><br><span class="line"></span><br><span class="line">&lt;#list stusMap?keys as key&gt;</span><br><span class="line">    &lt;#if stusMap[key].age gte 40&gt; &lt;#-- 年龄大于40的用红色表示 --&gt;</span><br><span class="line">        &lt;div style=&quot;color: red&quot;&gt;</span><br><span class="line">            &lt;h4&gt;学生$&#123;key_index+1&#125;的信息&lt;/h4&gt;</span><br><span class="line">            &lt;p&gt;name:$&#123;stusMap[key].name&#125;&lt;/p&gt;</span><br><span class="line">            &lt;p&gt;age:$&#123;stusMap[key].age&#125;&lt;/p&gt;</span><br><span class="line">            &lt;p&gt;birthday:$&#123;stusMap[key].birthday?datetime&#125;&lt;/p&gt;</span><br><span class="line">            &lt;p&gt;money:$&#123;stusMap[key].money&#125;&lt;/p&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;#else&gt;</span><br><span class="line">        &lt;div&gt;</span><br><span class="line">            &lt;h4&gt;学生$&#123;key_index+1&#125;的信息&lt;/h4&gt;</span><br><span class="line">            &lt;p&gt;name:$&#123;stusMap[key].name&#125;&lt;/p&gt;</span><br><span class="line">            &lt;p&gt;age:$&#123;stusMap[key].age&#125;&lt;/p&gt;</span><br><span class="line">            &lt;p&gt;birthday:$&#123;stusMap[key].birthday?datetime&#125;&lt;/p&gt;</span><br><span class="line">            &lt;p&gt;money:$&#123;stusMap[key].money&#125;&lt;/p&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;/#if&gt;</span><br><span class="line"></span><br><span class="line">&lt;/#list&gt;</span><br></pre></td></tr></table></figure><h3 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h3><h4 id="算数运算符"><a href="#算数运算符" class="headerlink" title="算数运算符"></a>算数运算符</h4><ul><li>加法： <code>+</code></li><li>减法： <code>-</code></li><li>乘法： <code>*</code></li><li>除法： <code>/</code></li><li>求模 (求余)： <code>%</code></li></ul><p><strong>注意：</strong></p><p>除了 + 运算以外，其他的运算只能和 number 数字类型的计算</p><h4 id="比较运算符"><a href="#比较运算符" class="headerlink" title="比较运算符"></a>比较运算符</h4><ul><li><strong><code>=</code></strong>或者<strong><code>==</code></strong>:判断两个值是否相等. </li><li><strong><code>!=</code></strong>:判断两个值是否不等. </li><li><strong><code>&gt;</code></strong>或者<strong><code>gt</code></strong>:判断左边值是否大于右边值 </li><li><strong><code>&gt;=</code></strong>或者<strong><code>gte</code></strong>:判断左边值是否大于等于右边值 </li><li><strong><code>&lt;</code></strong>或者<strong><code>lt</code></strong>:判断左边值是否小于右边值 </li><li><strong><code>&lt;=</code></strong>或者<strong><code>lte</code></strong>:判断左边值是否小于等于右边值 </li></ul><p><strong>注意：</strong></p><ul><li><strong><code>=</code></strong>和<strong><code>!=</code></strong>可以用于字符串、数值和日期来比较是否相等</li><li><strong><code>=</code></strong>和<strong><code>!=</code></strong>两边必须是相同类型的值,否则会产生错误</li><li>字符串 <strong><code>&quot;x&quot;</code></strong> 、<strong><code>&quot;x &quot;</code></strong> 、<strong><code>&quot;X&quot;</code></strong>比较是不等的.因为FreeMarker是精确比较</li><li>其它的运行符可以作用于数字和日期,但不能作用于字符串</li><li>使用<strong><code>gt</code></strong>等字母运算符代替<strong><code>&gt;</code></strong>会有更好的效果,因为 FreeMarker会把<strong><code>&gt;</code></strong>解释成FTL标签的结束字符</li><li>可以使用括号来避免这种情况,如:<strong><code>&lt;#if (x&gt;y)&gt;</code></strong></li></ul><h4 id="逻辑运算符"><a href="#逻辑运算符" class="headerlink" title="逻辑运算符"></a>逻辑运算符</h4><ul><li>逻辑与:&amp;&amp; </li><li>逻辑或:|| </li><li>逻辑非:! </li></ul><p><strong>注意：</strong></p><p>逻辑运算符只能作用于布尔值,否则将产生错误 </p><h3 id="空值处理"><a href="#空值处理" class="headerlink" title="空值处理"></a>空值处理</h3><h4 id="判断某变量是否存在使用-？？"><a href="#判断某变量是否存在使用-？？" class="headerlink" title="判断某变量是否存在使用 ？？"></a>判断某变量是否存在使用 ？？</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&lt;h2&gt;集合元素&lt;/h2&gt;</span><br><span class="line">&lt;hr/&gt;</span><br><span class="line"></span><br><span class="line">&lt;#if stusMap??&gt; &lt;#--判断stusMap是否存在--&gt;</span><br><span class="line">    &lt;#list stusMap?keys as key&gt;</span><br><span class="line">        &lt;#if (stusMap[key].age &gt;= 40)&gt;</span><br><span class="line">            &lt;div style=&quot;color: red&quot;&gt;</span><br><span class="line">                &lt;h4&gt;学生$&#123;key_index+1&#125;的信息&lt;/h4&gt;</span><br><span class="line">                &lt;p&gt;name:$&#123;stusMap[key].name&#125;&lt;/p&gt;</span><br><span class="line">                &lt;p&gt;age:$&#123;stusMap[key].age&#125;&lt;/p&gt;</span><br><span class="line">                &lt;p&gt;birthday:$&#123;stusMap[key].birthday?datetime&#125;&lt;/p&gt;</span><br><span class="line">                &lt;p&gt;money:$&#123;stusMap[key].money&#125;&lt;/p&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">        &lt;#else&gt;</span><br><span class="line">            &lt;div&gt;</span><br><span class="line">                &lt;h4&gt;学生$&#123;key_index+1&#125;的信息&lt;/h4&gt;</span><br><span class="line">                &lt;p&gt;name:$&#123;stusMap[key].name&#125;&lt;/p&gt;</span><br><span class="line">                &lt;p&gt;age:$&#123;stusMap[key].age&#125;&lt;/p&gt;</span><br><span class="line">                &lt;p&gt;birthday:$&#123;stusMap[key].birthday?datetime&#125;&lt;/p&gt;</span><br><span class="line">                &lt;p&gt;money:$&#123;stusMap[key].money&#125;&lt;/p&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">        &lt;/#if&gt;</span><br><span class="line"></span><br><span class="line">    &lt;/#list&gt;</span><br><span class="line">&lt;/#if&gt;</span><br></pre></td></tr></table></figure><h4 id="缺失变量默认值使用"><a href="#缺失变量默认值使用" class="headerlink" title="缺失变量默认值使用 !"></a>缺失变量默认值使用 !</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;utf-8&quot;&gt;</span><br><span class="line">    &lt;title&gt;Hello World!&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;#-- 注释部分 --&gt;</span><br><span class="line">&lt;b&gt;普通文本 String 展示：&lt;/b&gt;&lt;br&gt;&lt;br&gt;</span><br><span class="line">Hello $&#123;name!&#x27;王虎&#x27;&#125; &lt;br&gt; &lt;#--当变量name不存在时，默认替换为王虎--&gt;</span><br><span class="line">&lt;hr&gt;</span><br><span class="line">&lt;b&gt;对象Student中的数据展示：&lt;/b&gt;&lt;br/&gt;</span><br><span class="line">姓名：$&#123;stu.name&#125;&lt;br/&gt;</span><br><span class="line">年龄：$&#123;stu.age&#125;</span><br><span class="line">&lt;hr&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h3 id="内建函数"><a href="#内建函数" class="headerlink" title="内建函数"></a>内建函数</h3><p>内建函数语法格式： <strong><code>变量+?+函数名称</code></strong>  </p><h4 id="获取某个集合的大小"><a href="#获取某个集合的大小" class="headerlink" title="获取某个集合的大小"></a>获取某个集合的大小</h4><p><code>$&#123;集合名?size&#125;</code></p><h4 id="日期相关"><a href="#日期相关" class="headerlink" title="日期相关"></a>日期相关</h4><p>显示年月日: <strong><code>$&#123;today?date&#125;</code></strong><br>显示时分秒：<strong><code>$&#123;today?time&#125;</code></strong><br>显示日期+时间：<strong><code>$&#123;today?datetime&#125;</code></strong><br>自定义格式化：  <strong><code>$&#123;today?string(&quot;yyyy年MM月&quot;)&#125;</code></strong></p><h4 id="内建函数c"><a href="#内建函数c" class="headerlink" title="内建函数c"></a>内建函数<code>c</code></h4><p>model.addAttribute(“point”, 102920122);</p><p>point是数字型，使用${point}会显示这个数字的值，每三位使用逗号分隔。</p><p>如果不想显示为每三位分隔的数字，可以使用c函数将数字型转成字符串输出</p><p><strong><code>$&#123;point?c&#125;</code></strong></p><h4 id="将json字符串转成对象"><a href="#将json字符串转成对象" class="headerlink" title="将json字符串转成对象"></a>将json字符串转成对象</h4><p><code>text?eval</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;#-- assign的作用是创建一个新的变量 --&gt;</span><br><span class="line">&lt;#assign text=&quot;&#123;&#x27;bank&#x27;:&#x27;工商银行&#x27;,&#x27;account&#x27;:&#x27;10101920201920212&#x27;&#125;&quot; /&gt;</span><br><span class="line">&lt;#assign data=text?eval /&gt;</span><br><span class="line">开户行：$&#123;data.bank&#125;  账号：$&#123;data.account&#125;</span><br></pre></td></tr></table></figure><h2 id="freeMaker静态文件生成"><a href="#freeMaker静态文件生成" class="headerlink" title="freeMaker静态文件生成"></a>freeMaker静态文件生成</h2><p>在<code>mvc</code>中支持将<code>freemarker</code>静态文件作为视图返回前端，但是在一些场景中，需要将生成的静态文件输出存储在本地</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.bang;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.bang.entity.Student;</span><br><span class="line"><span class="keyword">import</span> freemarker.template.Configuration;</span><br><span class="line"><span class="keyword">import</span> freemarker.template.Template;</span><br><span class="line"><span class="keyword">import</span> freemarker.template.TemplateException;</span><br><span class="line"><span class="keyword">import</span> org.junit.jupiter.api.Test;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.test.context.SpringBootTest;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.FileWriter;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">import</span> java.util.Objects;</span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestFreeMarker</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> Configuration configuration;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testGenerateFile</span><span class="params">()</span> <span class="keyword">throws</span> IOException, TemplateException &#123;</span><br><span class="line">        <span class="comment">//1.加载静态模板文件</span></span><br><span class="line">        <span class="type">Template</span> <span class="variable">template</span> <span class="operator">=</span> configuration.getTemplate(<span class="string">&quot;mapList.ftl&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//2.准备数据</span></span><br><span class="line">        Map&lt;String, Student&gt; map = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        <span class="type">Student</span> <span class="variable">stu1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>(<span class="string">&quot;李白&quot;</span>,<span class="number">28</span>,<span class="keyword">new</span> <span class="title class_">Date</span>(),<span class="number">27.92f</span>);</span><br><span class="line">        <span class="type">Student</span> <span class="variable">stu2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>(<span class="string">&quot;曹操&quot;</span>,<span class="number">68</span>,<span class="keyword">new</span> <span class="title class_">Date</span>(),<span class="number">2007.92f</span>);</span><br><span class="line">        map.put(<span class="string">&quot;stu1&quot;</span>,stu1);</span><br><span class="line">        map.put(<span class="string">&quot;stu2&quot;</span>,stu2);</span><br><span class="line"></span><br><span class="line">        Map&lt;String, Object&gt; params = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        params.put(<span class="string">&quot;stusMap&quot;</span>,map);</span><br><span class="line">        <span class="comment">//3.添加数据模型，输出静态文件</span></span><br><span class="line">        <span class="comment">//第一个参数 数据模型，数据模型以HashMap的形式传入</span></span><br><span class="line">        <span class="comment">//第二个参数  输出流</span></span><br><span class="line">        template.process(params, <span class="keyword">new</span> <span class="title class_">FileWriter</span>(<span class="string">&quot;./test.html&quot;</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;freemarker&quot;&gt;&lt;a href=&quot;#freemarker&quot; class=&quot;headerlink&quot; title=&quot;freemarker&quot;&gt;&lt;/a&gt;freemarker&lt;/h1&gt;&lt;h2 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerli</summary>
      
    
    
    
    <category term="java杂项" scheme="https://bangwu2001.github.io/categories/java%E6%9D%82%E9%A1%B9/"/>
    
    
    <category term="java" scheme="https://bangwu2001.github.io/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>vue3入门</title>
    <link href="https://bangwu2001.github.io/2025/05/03/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9B%B8%E5%85%B3/%E6%A1%86%E6%9E%B6%E8%AF%AD%E8%A8%80%E7%9B%B8%E5%85%B3/%E5%89%8D%E7%AB%AF/vue/01%20vue3%E5%85%A5%E9%97%A8/vue3%E5%85%A5%E9%97%A8/"/>
    <id>https://bangwu2001.github.io/2025/05/03/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9B%B8%E5%85%B3/%E6%A1%86%E6%9E%B6%E8%AF%AD%E8%A8%80%E7%9B%B8%E5%85%B3/%E5%89%8D%E7%AB%AF/vue/01%20vue3%E5%85%A5%E9%97%A8/vue3%E5%85%A5%E9%97%A8/</id>
    <published>2025-05-03T01:48:42.000Z</published>
    <updated>2025-05-03T01:45:34.318Z</updated>
    
    <content type="html"><![CDATA[<h1 id="vue3入门"><a href="#vue3入门" class="headerlink" title="vue3入门"></a>vue3入门</h1><h2 id="vue3介绍"><a href="#vue3介绍" class="headerlink" title="vue3介绍"></a>vue3介绍</h2><p><a href="https://cn.vuejs.org/guide/quick-start.html">vue3官方文档</a></p><p>与<code>vue2</code>相比，<code>vue3</code>的优势：</p><ul><li>实现同样功能，所需的代码量变少了</li><li>分散式维护转为集中式维护</li></ul><h2 id="create-vue"><a href="#create-vue" class="headerlink" title="create-vue"></a>create-vue</h2><p><code>create-vue</code>是一个基于 Vite 的 Vue 3 项目脚手架工具，由 Vue.js 核心团队成员和社区贡献者开发。它旨在提供更快的开发体验和更现代化的项目结构。<code>create-vue</code> 专注于 Vue 3，并且与 Vite 集成，提供了更快速的热重载和构建性能。</p><h3 id="使用create-vue创建项目"><a href="#使用create-vue创建项目" class="headerlink" title="使用create-vue创建项目"></a>使用create-vue创建项目</h3><p><strong>前提条件</strong></p><p>已经安装16.0或者更高版本的<code>NodeJs</code></p><p><strong>创建一个vue应用</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm init vue@latest</span><br></pre></td></tr></table></figure><p>这一指令会自动安装并执行<code>create-vue</code>，让后根据命令行提示输入项目名、各种配置即可</p><p><img src="/2025/05/03/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9B%B8%E5%85%B3/%E6%A1%86%E6%9E%B6%E8%AF%AD%E8%A8%80%E7%9B%B8%E5%85%B3/%E5%89%8D%E7%AB%AF/vue/01%20vue3%E5%85%A5%E9%97%A8/vue3%E5%85%A5%E9%97%A8/image-20250429103649760.png" alt="image-20250429103649760"></p><p><strong>启动项目</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">切换到项目目录</span></span><br><span class="line">cd 项目名</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">安装依赖</span></span><br><span class="line">npm install</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">启动项目</span></span><br><span class="line">npm run dev</span><br></pre></td></tr></table></figure><h2 id="vue3项目目录和关键文件"><a href="#vue3项目目录和关键文件" class="headerlink" title="vue3项目目录和关键文件"></a>vue3项目目录和关键文件</h2><p><img src="/2025/05/03/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9B%B8%E5%85%B3/%E6%A1%86%E6%9E%B6%E8%AF%AD%E8%A8%80%E7%9B%B8%E5%85%B3/%E5%89%8D%E7%AB%AF/vue/01%20vue3%E5%85%A5%E9%97%A8/vue3%E5%85%A5%E9%97%A8/image-20250429144951787.png" alt="image-20250429144951787"></p><p><strong>关键文件</strong></p><ul><li><code>vite.config.js</code>：项目的配置文件，基于<code>vite</code>的配置</li><li><code>package.json</code>：项目包文件，核心依赖项变成了<code>Vuex3.x</code>和<code>vite</code></li><li><code>main.js</code>：入口文件，利用<code>createApp</code>函数创建应用实例</li><li><code>app.vue</code>：根组件，<code>script-template-style</code>，其余<code>vue2</code>相比的变化：<ul><li>脚本<code>script</code>和模板<code>template</code>顺序调整</li><li>模板<code>template</code>不再要求唯一根元素</li><li>脚本<code>script</code>添加<code>setup</code>标识支持组合式<code>API</code></li></ul></li><li><code>index.html</code>：单页入口，提供id为<code>app</code>的挂载点</li></ul><h2 id="组合式API—setup"><a href="#组合式API—setup" class="headerlink" title="组合式API—setup"></a>组合式API—setup</h2><h3 id="setup函数的写法"><a href="#setup函数的写法" class="headerlink" title="setup函数的写法"></a>setup函数的写法</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">export default &#123;</span><br><span class="line">  setup()&#123;</span><br><span class="line">    console.log(&quot;setup&quot;)</span><br><span class="line">  &#125;,</span><br><span class="line">  beforeCreate()&#123;</span><br><span class="line">    console.log(&quot;beforeCreate&quot;)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>setup</code>函数先于<code>beforeCreate</code>函数执行</p><p><img src="/2025/05/03/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9B%B8%E5%85%B3/%E6%A1%86%E6%9E%B6%E8%AF%AD%E8%A8%80%E7%9B%B8%E5%85%B3/%E5%89%8D%E7%AB%AF/vue/01%20vue3%E5%85%A5%E9%97%A8/vue3%E5%85%A5%E9%97%A8/image-20250429145813399.png" alt="image-20250429145813399"></p><p><code>setup</code>里面可以定义数据和函数，需要以对象方式用<code>return</code>进行返回，但是这样写法就比较复杂，所以<code>vue3</code>提供了语法糖的形式</p><p><strong>原始复杂写法</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;&#123;&#123; message &#125;&#125;&lt;/div&gt;&lt;br/&gt;</span><br><span class="line">  &lt;button @click=&quot;logMessage&quot;&gt;logMessage&lt;/button&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  setup()&#123;</span><br><span class="line">    const message = &quot;this is vue3 message&quot;</span><br><span class="line">    const logMessage = ()=&gt;console.log(&quot;logMessage&quot;)</span><br><span class="line">    return &#123;</span><br><span class="line">      message,</span><br><span class="line">      logMessage</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line"></span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p><strong>语法糖写法</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;&#123;&#123; message &#125;&#125;&lt;/div&gt;&lt;br/&gt;</span><br><span class="line">  &lt;button @click=&quot;logMessage&quot;&gt;logMessage&lt;/button&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">  const message = &quot;this is vue3 message&quot;</span><br><span class="line">  const logMessage = ()=&gt;console.log(&quot;logMessage&quot;)</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line"></span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p>通过<code>&lt;script setup&gt;&lt;/script&gt;</code>语法糖的封装可以更简单的使用组合式API</p><h2 id="组合式API—reactive和ref函数"><a href="#组合式API—reactive和ref函数" class="headerlink" title="组合式API—reactive和ref函数"></a>组合式API—reactive和ref函数</h2><h3 id="reactive"><a href="#reactive" class="headerlink" title="reactive"></a>reactive</h3><p><code>reactive</code>接受对象类型数据的参数传入并返回一个响应式的对象</p><p><strong>核心步骤</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line">//导入</span><br><span class="line">    import &#123; reactive &#125; from &#x27;vue&#x27;</span><br><span class="line">    //执行函数 传入对象参数 返回响应对象</span><br><span class="line">    const state = reactive(对象类型数据)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><strong>实例</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line"> import &#123; reactive &#125; from &#x27;vue&#x27;;</span><br><span class="line"> const data = reactive(&#123;&quot;count&quot;:0&#125;)</span><br><span class="line"> const addCount = ()=&gt;data.count+=1</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;button @click=&quot;addCount&quot;&gt;&#123;&#123; data.count &#125;&#125;&lt;/button&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h3 id="ref"><a href="#ref" class="headerlink" title="ref"></a>ref</h3><p><code>ref</code>函数接收简单类型或者对象类型的数据，传入并返回一个响应式的对象</p><p><strong>核心步骤</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line">//导入</span><br><span class="line">    import &#123; ref &#125; from &#x27;vue&#x27;</span><br><span class="line">    //执行函数 传入参数 返回响应式数据</span><br><span class="line">    const state = ref(简单类型或者复杂类型数据)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><strong>实例</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line"> import &#123; ref &#125; from &#x27;vue&#x27;;</span><br><span class="line"> const data = ref(&#123;&quot;count&quot;:0&#125;)</span><br><span class="line"> const addCount = ()=&gt;data.value.count+=1</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;button @click=&quot;addCount&quot;&gt;&#123;&#123; data.count &#125;&#125;&lt;/button&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line"></span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p><strong>注意：</strong>脚本区域修改<code>ref</code>产生的响应式对象数据，必须通过<code>.value</code>属性</p><h2 id="computed计算属性函数"><a href="#computed计算属性函数" class="headerlink" title="computed计算属性函数"></a>computed计算属性函数</h2><p><code>vue3</code>中的计算属性的基本思想和<code>vue2</code>的完全一致，组合式API下的计算属性只是修改了写法</p><p><strong>核心步骤</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line">//1.导入</span><br><span class="line">    import &#123; computed &#125; from &#x27;vue&#x27;</span><br><span class="line">    //2.执行函数</span><br><span class="line">    const computedState = computed(()=&gt;&#123;</span><br><span class="line">        return 基于响应式数据做计算之后的值</span><br><span class="line">    &#125;)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><strong>实例</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line">  import &#123; ref &#125; from &#x27;vue&#x27;</span><br><span class="line">  import &#123; computed &#125; from &#x27;vue&#x27;;</span><br><span class="line">  const list = ref([1,2,3,4,5,6,7,8,9,10])</span><br><span class="line">  const filterList = computed(()=&gt;&#123;</span><br><span class="line">    return list.value.filter((n)=&gt;n%2==0)</span><br><span class="line">  &#125;)</span><br><span class="line"></span><br><span class="line">  //校验list值发生变化之后,计算属性值是否会相应变化</span><br><span class="line">  setTimeout(()=&gt;list.value.push(10,12),1000)</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;过滤之前:&#123;&#123; list &#125;&#125;&lt;/div&gt;&lt;br/&gt;</span><br><span class="line">  &lt;div&gt;过滤之后:&#123;&#123; filterList &#125;&#125;&lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure><h2 id="watch函数"><a href="#watch函数" class="headerlink" title="watch函数"></a>watch函数</h2><p><code>watch</code>函数是监听一个或者多个数据的变化，数据变化时执行回调函数</p><p>两个额外的参数：</p><ul><li><code>immediate</code>：立即执行</li><li><code>deep</code>：深度监听</li></ul><h3 id="监听单个数据"><a href="#监听单个数据" class="headerlink" title="监听单个数据"></a>监听单个数据</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line">//导入</span><br><span class="line">import &#123; watch,ref &#125; from &#x27;vue&#x27;</span><br><span class="line">    const count = ref(0)</span><br><span class="line">    //调用watch监听变化</span><br><span class="line">    watch(count,(newValue,oldValue)=&gt;&#123;</span><br><span class="line">        console.log(`count的值发生了变化,原来的值$&#123;oldValue&#125;,现在的值为$&#123;newValue&#125;`)</span><br><span class="line">    &#125;)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="监听多个数据"><a href="#监听多个数据" class="headerlink" title="监听多个数据"></a>监听多个数据</h3><p>同时监听多个响应式数据的变化，不管哪个数据变化都需要执行回调</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123; ref,watch &#125; from &#x27;vue&#x27;</span><br><span class="line">    const count = ref(0)</span><br><span class="line">    const name = ref(&quot;zs&quot;)</span><br><span class="line">    //监听多个数据源</span><br><span class="line">    watch([count,name],([newCount,newName],[oldCount,oldName])=&gt;&#123;</span><br><span class="line">        console.log(`count或者name的值发生了变化,原来的值为:[$&#123;oldCount&#125;,$&#123;oldName&#125;],现在的值为:[$&#123;newCount&#125;,$&#123;newName&#125;]`)</span><br><span class="line">    &#125;)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="immediate"><a href="#immediate" class="headerlink" title="immediate"></a>immediate</h3><p>在监听器创建时，立即触发回调，响应式数据变化之后继续执行回调</p><p>适用场景：比如下来列表，还有选择时，即会触发对应操作，比如向后端发送请求</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line">  import &#123; ref,watch &#125; from &#x27;vue&#x27;</span><br><span class="line">  const count = ref(0)</span><br><span class="line">  const name = ref(&#x27;zs&#x27;)</span><br><span class="line">  watch([count,name],([newCount,newName],[oldCount,oldName])=&gt;&#123;</span><br><span class="line">    console.log(`count或者name的值发生了变化,原来的值:[$&#123;oldCount&#125;,$&#123;oldName&#125;],现在的值:[$&#123;newCount&#125;,$&#123;newName&#125;]`)</span><br><span class="line">  &#125;,&#123;immediate:true&#125;)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="deep"><a href="#deep" class="headerlink" title="deep"></a>deep</h3><p>通过<code>watch</code>监听的<code>ref</code>对象默认都是浅层监听的，直接修改嵌套的对象属性不会触发回调执行，需要开启<code>deep</code>选项</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line">  import &#123; ref,watch &#125; from &#x27;vue&#x27;</span><br><span class="line">  const people = ref(&#123;</span><br><span class="line">    name:&quot;zs&quot;,</span><br><span class="line">    age:27</span><br><span class="line">  &#125;)</span><br><span class="line">  watch(people,(newValue,oldValue)=&gt;&#123;</span><br><span class="line">    console.log(`people的值发生了变化,变化之前的值:$&#123;oldValue&#125;,变化之后的值:$&#123;newValue&#125;`)</span><br><span class="line">  &#125;,&#123;deep:true&#125;)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="精确监听"><a href="#精确监听" class="headerlink" title="精确监听"></a>精确监听</h3><p>开启<code>deep</code>之后，对象中任意属性变化，都会触发</p><p>如何在不开启<code>deep</code>前提下，监听对象的某个属性的变化？</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line">  import &#123; ref,watch &#125; from &#x27;vue&#x27;</span><br><span class="line">  const people = ref(&#123;</span><br><span class="line">    name:&quot;zs&quot;,</span><br><span class="line">    age:27</span><br><span class="line">  &#125;)</span><br><span class="line">  //第一个参数为需要监听的特定属性</span><br><span class="line">  watch(</span><br><span class="line">    ()=&gt;people.value.age,</span><br><span class="line">    (newValue,oldValue)=&gt;console.log(`age的值发生了变化,原来的值为$&#123;oldValue&#125;,现在的值为:$&#123;newValue&#125;`)</span><br><span class="line">  )</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="生命周期函数"><a href="#生命周期函数" class="headerlink" title="生命周期函数"></a>生命周期函数</h2><h3 id="vue3的生命周期API-选项式-vs-组合式"><a href="#vue3的生命周期API-选项式-vs-组合式" class="headerlink" title="vue3的生命周期API 选项式  vs 组合式"></a>vue3的生命周期API 选项式  vs 组合式</h3><p><img src="/2025/05/03/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9B%B8%E5%85%B3/%E6%A1%86%E6%9E%B6%E8%AF%AD%E8%A8%80%E7%9B%B8%E5%85%B3/%E5%89%8D%E7%AB%AF/vue/01%20vue3%E5%85%A5%E9%97%A8/vue3%E5%85%A5%E9%97%A8/image-20250430094811223.png" alt="image-20250430094811223"></p><p><strong>语法</strong></p><ul><li>导入对应的生命周期函数</li><li>执行生命周期函数  传入对应的回调逻辑</li></ul><p>生命周期函数是可以执行多次的，多次执行时传入的回调会在时机成熟时依次执行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line">  import &#123; onMounted &#125; from &#x27;vue&#x27;;</span><br><span class="line">  onMounted(()=&gt;&#123;</span><br><span class="line">    console.log(&quot;onMounted1&quot;)</span><br><span class="line">  &#125;)</span><br><span class="line">  onMounted(()=&gt;&#123;</span><br><span class="line">    console.log(&quot;onMounted2&quot;)</span><br><span class="line">  &#125;)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="组合式API—父子通信"><a href="#组合式API—父子通信" class="headerlink" title="组合式API—父子通信"></a>组合式API—父子通信</h2><h3 id="父传子"><a href="#父传子" class="headerlink" title="父传子"></a>父传子</h3><p><strong>基本思想</strong></p><ol><li>父组件中给子组件绑定属性</li><li>子组件内部通过<code>defineProps</code>接收</li></ol><p>父组件<code>App.vue</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line">  import SonPage from &#x27;./components/SonPage.vue&#x27;;</span><br><span class="line">  import &#123; ref &#125; from &#x27;vue&#x27;</span><br><span class="line">  const count = ref(666)</span><br><span class="line">  setTimeout(()=&gt;&#123;</span><br><span class="line">    count.value+=1</span><br><span class="line">  &#125;,1000)</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;h2&gt;父组件&lt;/h2&gt;&lt;br&gt;</span><br><span class="line"> &lt;!-- 父组件给子组件绑定属性 --&gt;</span><br><span class="line">  &lt;SonPage :count=&quot;count&quot; message=&quot;父组件传来的数据&quot;&gt;&lt;/SonPage&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure><p>子组件<code>Son.vue</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line">  const props = defineProps(&#123;</span><br><span class="line">    message:String, //指定数据类型,</span><br><span class="line">    count:Number</span><br><span class="line">  &#125;)</span><br><span class="line">  console.log(props)</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;h2&gt;子组件&lt;/h2&gt;</span><br><span class="line">    &lt;p&gt;&#123;&#123; message &#125;&#125;-- &#123;&#123; count &#125;&#125;&lt;/p&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure><h3 id="子传父"><a href="#子传父" class="headerlink" title="子传父"></a>子传父</h3><p> <strong>基本思想</strong></p><ol><li>父组件给子组件标签通过<code>@</code>绑定事件</li><li>子组件内部通过<code>emit</code>方法触发事件</li></ol><p>父组件<code>App.vue</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line">import SonPage from &#x27;./components/SonPage.vue&#x27;;</span><br><span class="line">const logMessage = (message)=&gt;&#123;</span><br><span class="line">  console.log(message)</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;SonPage @send-message=&quot;logMessage&quot;&gt;&lt;/SonPage&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure><p>子组件<code>SonPage.vue</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line">//通过defineEmits宏函数生成emit方法</span><br><span class="line">//参数为数组，可以一次性传入当前组件所有自定义的事件</span><br><span class="line">const emit = defineEmits([&quot;send-message&quot;])</span><br><span class="line">//emit方法触发对应的事件</span><br><span class="line">const sendMessage = ()=&gt;&#123;</span><br><span class="line">  emit(&quot;send-message&quot;,&quot;从子组件传来的数据&quot;)</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;button @click=&quot;sendMessage&quot;&gt;子传父&lt;/button&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure><h2 id="组合式API—模板引用"><a href="#组合式API—模板引用" class="headerlink" title="组合式API—模板引用"></a>组合式API—模板引用</h2><p>通过<code>ref</code>标识获取真实的<code>dom</code>对象或者组件实例对象</p><p><strong>语法</strong></p><ol><li>调用<code>ref</code>函数生成一个<code>ref</code>对象</li><li>通过<code>ref</code>表示绑定<code>ref</code>对象到标签</li><li>在组件挂载完毕之后通过<code>ref对象.value</code>获取对应的<code>dom</code>对象</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line">  import &#123; ref,onMounted &#125; from &#x27;vue&#x27;</span><br><span class="line">  const divRef = ref(null)</span><br><span class="line">  //组件挂载完毕之后才能获取对应的dom</span><br><span class="line">  onMounted(()=&gt;&#123;</span><br><span class="line">    console.log(divRef.value.innerText)</span><br><span class="line">  &#125;)</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div ref=&quot;divRef&quot;&gt;ref绑定的元素&lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure><h3 id="子组件的模板引用"><a href="#子组件的模板引用" class="headerlink" title="子组件的模板引用"></a>子组件的模板引用</h3><p>默认情况下在<code>&lt;script setup&gt;</code>语法糖下组件内部的属性和方法是不开放给父组件访问的，可以通过<code>defineExpose</code>编译宏指定哪些属性和方法是允许访问的</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">defineExpose(&#123;</span><br><span class="line">属性名/方法名</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p><strong>实例</strong></p><p>父组件<code>App.vue</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line">  import &#123; ref,onMounted &#125; from &#x27;vue&#x27;</span><br><span class="line">  import SonPage from &#x27;./components/SonPage.vue&#x27;</span><br><span class="line">  const sonRef = ref(null)</span><br><span class="line">  //组件挂载完毕之后才能获取对应的dom</span><br><span class="line">  onMounted(()=&gt;&#123;</span><br><span class="line">    console.log(sonRef.value)</span><br><span class="line">    console.log(sonRef.value.name)</span><br><span class="line">    sonRef.value.logMsg()</span><br><span class="line">  &#125;)</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;SonPage ref=&quot;sonRef&quot;&gt;子组件&lt;/SonPage&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure><p>子组件<code>SonPage.vue</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line">  import &#123; ref &#125; from &#x27;vue&#x27;;</span><br><span class="line">  const name = ref(&quot;zs&quot;)</span><br><span class="line">  const logMsg = ()=&gt;&#123;</span><br><span class="line">    console.log(&quot;logMsg&quot;)</span><br><span class="line">  &#125;</span><br><span class="line">  //通过defineExpose编译宏指定允许访问的属性和方法</span><br><span class="line">  defineExpose(&#123;</span><br><span class="line">    name,</span><br><span class="line">    logMsg</span><br><span class="line">  &#125;)</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;template&gt;</span><br><span class="line">  </span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure><h2 id="组合式API—provide和inject"><a href="#组合式API—provide和inject" class="headerlink" title="组合式API—provide和inject"></a>组合式API—provide和inject</h2><p><strong>作用和应用场景：</strong>顶层组件向任意的底层组件传递数据和方法，实现跨层组件通信</p><h3 id="传递普通数据"><a href="#传递普通数据" class="headerlink" title="传递普通数据"></a>传递普通数据</h3><p><strong>核心步骤：</strong></p><p>1.顶层组件通过<code>provide</code>函数提供数据</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">provide(&#x27;key&#x27;,顶层组件中的数据);//第一个参数为标识，第二个参数为对应的值</span><br></pre></td></tr></table></figure><p>2.底层组件通过<code>inject</code>函数获取数据</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">//通过标识获取对应数据</span><br><span class="line">const data = inject(&#x27;key&#x27;)</span><br></pre></td></tr></table></figure><h3 id="传递响应式数据"><a href="#传递响应式数据" class="headerlink" title="传递响应式数据"></a>传递响应式数据</h3><p>1.顶层组件通过<code>provide</code>函数提供数据</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">provide(&#x27;key&#x27;,ref对象);//第一个参数为标识，第二个参数为对应的ref对象</span><br></pre></td></tr></table></figure><p>2.底层组件通过<code>inject</code>函数获取数据</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">//通过标识获取对应数据</span><br><span class="line">const data = inject(&#x27;key&#x27;)</span><br></pre></td></tr></table></figure><h3 id="跨层传递方法"><a href="#跨层传递方法" class="headerlink" title="跨层传递方法"></a>跨层传递方法</h3><p>由于数据是单向传递，底层组件无法直接修改顶层组件传递的数据，但是顶层组件可以向底层组件传递方法，底层组件调用方法来修改顶层组件中的数据</p><p>开发时遵循的原则：<strong>谁的数据谁复杂修改</strong></p><p>1.顶层组件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">provide(&#x27;key名称&#x27;,方法名)</span><br></pre></td></tr></table></figure><p>2.底层组件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">inject(&#x27;key名称&#x27;)</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;vue3入门&quot;&gt;&lt;a href=&quot;#vue3入门&quot; class=&quot;headerlink&quot; title=&quot;vue3入门&quot;&gt;&lt;/a&gt;vue3入门&lt;/h1&gt;&lt;h2 id=&quot;vue3介绍&quot;&gt;&lt;a href=&quot;#vue3介绍&quot; class=&quot;headerlink&quot; titl</summary>
      
    
    
    
    <category term="vue" scheme="https://bangwu2001.github.io/categories/vue/"/>
    
    
    <category term="前端" scheme="https://bangwu2001.github.io/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>vuex</title>
    <link href="https://bangwu2001.github.io/2025/05/03/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9B%B8%E5%85%B3/%E6%A1%86%E6%9E%B6%E8%AF%AD%E8%A8%80%E7%9B%B8%E5%85%B3/%E5%89%8D%E7%AB%AF/vue/07%20vuex/vuex/"/>
    <id>https://bangwu2001.github.io/2025/05/03/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9B%B8%E5%85%B3/%E6%A1%86%E6%9E%B6%E8%AF%AD%E8%A8%80%E7%9B%B8%E5%85%B3/%E5%89%8D%E7%AB%AF/vue/07%20vuex/vuex/</id>
    <published>2025-05-03T01:48:42.000Z</published>
    <updated>2025-05-03T01:35:47.035Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Vuex"><a href="#Vuex" class="headerlink" title="Vuex"></a>Vuex</h1><h2 id="vuex概述"><a href="#vuex概述" class="headerlink" title="vuex概述"></a>vuex概述</h2><p><a href="https://vuex.vuejs.org/zh/">vuex</a>是一个<code>vue</code>的状态管理工具，所谓的状态就是数据，它可以帮助我们管理<code>vue</code>通用的数据（多组件共享的数据）</p><p><strong>vuex的常用场景</strong></p><ul><li>某个数据在多个组件来使用，比如个人信息</li><li>多个组件共同维护一份数据，比如购物车数据</li></ul><p><strong>vuex的优势</strong></p><ul><li>数据集中化管理，共同维护一份数据</li><li>数据响应式变化</li><li>操作简洁，vuex提供了一些辅助函数</li></ul><h2 id="vuex使用步骤"><a href="#vuex使用步骤" class="headerlink" title="vuex使用步骤"></a>vuex使用步骤</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">graph LR</span><br><span class="line">安装vuex--&gt;新建vuex模块文件--&gt;创建仓库--&gt;在main.js中导入挂载</span><br></pre></td></tr></table></figure><p><strong>安装vuex</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i vuex@3</span><br></pre></td></tr></table></figure><p><strong>新建vuex模块文件</strong></p><p>新建<code>src/store/index.js</code>专门存放<code>vuex</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">import Vue from &#x27;vue&#x27;</span><br><span class="line">import Vuex from &#x27;vuex&#x27;</span><br><span class="line"></span><br><span class="line">// 插件安装</span><br><span class="line">Vue.use(Vuex)</span><br><span class="line"></span><br><span class="line">// 创建仓库</span><br><span class="line">const store = new Vuex.Store()</span><br><span class="line"></span><br><span class="line">// 导出</span><br><span class="line">export default store</span><br></pre></td></tr></table></figure><p><strong>创建仓库</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Vue.use(Vuex)</span><br><span class="line">new Vuex.Store()</span><br></pre></td></tr></table></figure><p><strong>main.js导入挂载</strong></p><p>在<code>main.js</code>中导入仓库，挂载到<code>Vue</code>实例上</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">import Vue from &#x27;vue&#x27;</span><br><span class="line">import App from &#x27;./App.vue&#x27;</span><br><span class="line">import store from &#x27;@/store/index&#x27;</span><br><span class="line"></span><br><span class="line">Vue.config.productionTip = false</span><br><span class="line"></span><br><span class="line">new Vue(&#123;</span><br><span class="line">  render: h =&gt; h(App),</span><br><span class="line">  store</span><br><span class="line">&#125;).$mount(&#x27;#app&#x27;)</span><br></pre></td></tr></table></figure><p><strong>获取仓库</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">//其他组件中均可获取仓库对象</span><br><span class="line">this.$store</span><br></pre></td></tr></table></figure><p><strong>注意：</strong>后续可以在利用<code>vueCli</code>创建项目时，勾选<code>vuex</code>选项，其会自动完成上述步骤</p><h2 id="state"><a href="#state" class="headerlink" title="state"></a>state</h2><h3 id="提供数据"><a href="#提供数据" class="headerlink" title="提供数据"></a>提供数据</h3><p><code>State</code>提供唯一的公共数据源，所有共享的数据都要统一放到<code>Store</code>中的<code>State</code>中存储，在<code>State</code>对象中可以添加我们要共享的数据</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">cosnt store = new Vuex.Store(&#123;</span><br><span class="line">//state中是所有组件共享的数据</span><br><span class="line">state:&#123;</span><br><span class="line">数据名:数据值</span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="获取数据"><a href="#获取数据" class="headerlink" title="获取数据"></a>获取数据</h3><h4 id="方案一：通过store直接访问"><a href="#方案一：通过store直接访问" class="headerlink" title="方案一：通过store直接访问"></a>方案一：通过store直接访问</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">//模板中获取数据</span><br><span class="line">&#123;&#123; $store.state.数据名 &#125;&#125;</span><br><span class="line">//组件逻辑中</span><br><span class="line">this.$store.state.数据名</span><br><span class="line">//JS模块中</span><br><span class="line">store.state.数据名</span><br></pre></td></tr></table></figure><h4 id="方案二：通过辅助函数"><a href="#方案二：通过辅助函数" class="headerlink" title="方案二：通过辅助函数"></a>方案二：通过辅助函数</h4><p>利用<code>mapState</code>辅助函数，帮助我们把<code>store</code>中的数据自动映射到组件的计算属性中</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">graph LR</span><br><span class="line">导入mapState--&gt;数组方式引入state--&gt;展开运算符映射</span><br></pre></td></tr></table></figure><p><strong>导入mapState</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">import&#123; mapState &#125; from &#x27;Vuex&#x27;</span><br></pre></td></tr></table></figure><p><strong>数组方式引入state</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mapState([&#x27;数据名&#x27;])</span><br></pre></td></tr></table></figure><p><strong>展开运算符映射</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">computed:&#123;</span><br><span class="line">...mapState([&quot;数据名&quot;])//mapState([&quot;数据名&quot;])是一个对象,...表示将对象展开</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>其他组件访问数据</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123; 数据名 &#125;&#125;</span><br></pre></td></tr></table></figure><h2 id="mutations"><a href="#mutations" class="headerlink" title="mutations"></a>mutations</h2><h3 id="mutations基本用法"><a href="#mutations基本用法" class="headerlink" title="mutations基本用法"></a>mutations基本用法</h3><p><code>vuex</code>同样遵循单向数据流，组件中不能直接修改仓库中的数据，因为一旦项目规模比较大，后续数据发生变化，无法清晰确定是哪个组件操作引起的数据变化</p><p><code>state</code>数据的修改只能通过<code>mutations</code>的操作流程来进行</p><p><strong>语法</strong></p><ul><li>定义<code>mutations</code>对象，对象中存放修改<code>state</code>的方法</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">const store = new Vuex.Store(&#123;</span><br><span class="line">state:&#123;</span><br><span class="line">数据名:数据值</span><br><span class="line">&#125;,</span><br><span class="line">mutations:&#123;</span><br><span class="line">修改数据的逻辑函数，函数的第一个参数是当前store的state属性</span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><ul><li>组件中提交调用<code>mutations</code></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">this.$store.commit(&quot;修改逻辑函数名&quot;)</span><br></pre></td></tr></table></figure><h3 id="mutations传参"><a href="#mutations传参" class="headerlink" title="mutations传参"></a>mutations传参</h3><p>提交<code>mutations</code>时是可以传递参数的<code>this.$store.commit(&quot;逻辑函数名&quot;,参数)</code></p><p><strong>注意：</strong><code>mutations</code>参数有且只能有一个，如果需要多个参数，则包装成一个对象进行传递</p><h3 id="辅助函数mapMutations"><a href="#辅助函数mapMutations" class="headerlink" title="辅助函数mapMutations"></a>辅助函数mapMutations</h3><p><code>mapMutations</code>是把位于<code>mutations</code>中的方法提取出来，映射到组件<code>methods</code>中</p><p><strong>语法</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">import &#123;mapMutations&#125; from &#x27;vuex&#x27;</span><br><span class="line"></span><br><span class="line">methods:&#123;</span><br><span class="line">...mapMutations([&quot;逻辑函数名&quot;])</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在使用的地方直接使用:<code>&#123;&#123; 逻辑函数名 &#125;&#125;</code></p><h2 id="actions"><a href="#actions" class="headerlink" title="actions"></a>actions</h2><p><code>actions</code>用于处理异步操作，比如指定一秒钟之后，修改某个数据的值，而<code>mutations</code>必须是同步的</p><p><strong>实例：</strong>一秒钟之后，修改<code>state</code>的<code>count</code>为666</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">//提供action方法</span><br><span class="line">actions:&#123;</span><br><span class="line">setAsyncCount(contex,num)&#123;</span><br><span class="line">setTimeOut(()=&gt;&#123;//这里用setTimeOut模拟异步，实际场景中一般是发送请求</span><br><span class="line">contex.commit(&quot;changeCount&quot;,num)</span><br><span class="line">&#125;,1000)</span><br><span class="line">&#125;</span><br><span class="line">&#125;,</span><br><span class="line">mutations:&#123;</span><br><span class="line">changeCount(state,newCount)&#123;</span><br><span class="line">state.count = newCount</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>组件页面中的调用</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">this.$store.dispatch(&#x27;setAsyncCount&#x27;,666)</span><br></pre></td></tr></table></figure><h3 id="辅助函数mapActions"><a href="#辅助函数mapActions" class="headerlink" title="辅助函数mapActions"></a>辅助函数mapActions</h3><p>辅助函数<code>mapActions</code>是把位于<code>actions</code>中的方法提取出来，映射到<code>methods</code>中</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">methods:&#123;</span><br><span class="line">...mapActions([&quot;函数名&quot;])</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="getters"><a href="#getters" class="headerlink" title="getters"></a>getters</h2><h3 id="定义getters"><a href="#定义getters" class="headerlink" title="定义getters"></a>定义getters</h3><p>除了<code>state</code>之外，有时我们需要从<code>state</code>中派生出一些状态，这些状态是依赖<code>state</code>的，此时就会用到<code>getters</code></p><p><strong>实例：</strong>state中定义了一个list，是1-10的数组，现在需求为在组件中，显示所有大于5的数据</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">state:&#123;</span><br><span class="line">list:[1,2,3,4,5,6,7,8,9,10]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">getters:&#123;</span><br><span class="line">//getters函数第一个参数是state，所有的getters函数都必须要有返回值</span><br><span class="line">filterList(state)&#123;</span><br><span class="line">return state.list.filter((num)=&gt;num&gt;5)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="访问getters"><a href="#访问getters" class="headerlink" title="访问getters"></a><strong>访问getters</strong></h3><h4 id="方法1：通过store访问getters"><a href="#方法1：通过store访问getters" class="headerlink" title="方法1：通过store访问getters"></a><strong>方法1：通过store访问getters</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123; $store.getters.filterList &#125;&#125;</span><br></pre></td></tr></table></figure><h4 id="方法2：通过辅助函数mapGetters映射"><a href="#方法2：通过辅助函数mapGetters映射" class="headerlink" title="方法2：通过辅助函数mapGetters映射"></a>方法2：通过辅助函数mapGetters映射</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">computed:&#123;</span><br><span class="line">...mapGetters([&quot;filterList&quot;])</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>获取数据：<code>&#123;&#123; filterList &#125;&#125;</code></p><h2 id="modules"><a href="#modules" class="headerlink" title="modules"></a>modules</h2><h3 id="基本语法"><a href="#基本语法" class="headerlink" title="基本语法"></a>基本语法</h3><p>由于<code>vuex</code>使用单一状态树，应用的所有状态（数据）会集中到一个比较大的对象，当应用变得非常复杂时，<code>store</code>对象就会变得相当臃肿，<code>vuex</code>就会变得越来越难以维护，此时就需要进行模块拆分，根据具体项目的业务，对状态按模块进行划分</p><p><strong>实例语法：将用户信息模块单独划分</strong></p><p>新建文件<code>src/store/module/user.js</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">const state = &#123;</span><br><span class="line">userInfo:&#123;</span><br><span class="line">xxx:xx</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">const mutations = &#123;&#125;</span><br><span class="line">const actions = &#123;&#125;</span><br><span class="line">const getters = &#123;&#125;</span><br><span class="line">export default&#123;</span><br><span class="line">state,</span><br><span class="line">mutations,</span><br><span class="line">actions,</span><br><span class="line">getters</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在<code>src/stote/index.js</code>中导入对应模块</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">import user from &#x27;./moudle/user&#x27;</span><br><span class="line">const store = new Vuex.Store(&#123;</span><br><span class="line">modules:&#123;</span><br><span class="line">user</span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="访问模块中的state"><a href="#访问模块中的state" class="headerlink" title="访问模块中的state"></a>访问模块中的state</h3><p>尽管已经分模块了，但其实子模块的状态，还是会挂到根级别的<code>state</code>中，属性名就是模块名</p><h4 id="方法1：通过store来访问"><a href="#方法1：通过store来访问" class="headerlink" title="方法1：通过store来访问"></a>方法1：通过store来访问</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$store.state.模块名.数据名</span><br></pre></td></tr></table></figure><h4 id="方法2：通过mapState来映射"><a href="#方法2：通过mapState来映射" class="headerlink" title="方法2：通过mapState来映射"></a>方法2：通过mapState来映射</h4><p>子模块的映射需要开启命名空间，即在子模块导出的地方添加一项配置<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">export default&#123;</span><br><span class="line">namespaced: true,</span><br><span class="line">state,</span><br><span class="line">mutations,</span><br><span class="line">actions,</span><br><span class="line">getters</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>子模块的映射语法<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mapState(&quot;模块名&quot;,[&quot;数据名&quot;])</span><br></pre></td></tr></table></figure></p><h3 id="访问模块中的getters"><a href="#访问模块中的getters" class="headerlink" title="访问模块中的getters"></a>访问模块中的getters</h3><h4 id="直接通过模块名访问"><a href="#直接通过模块名访问" class="headerlink" title="直接通过模块名访问"></a>直接通过模块名访问</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$store.getters[&quot;模块名/数据名&quot;]</span><br></pre></td></tr></table></figure><h4 id="通过mapGetters映射"><a href="#通过mapGetters映射" class="headerlink" title="通过mapGetters映射"></a>通过mapGetters映射</h4><p>同样需要开启命名空间</p><p>子模块的映射语法</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mapGetters(&quot;模块名&quot;,[&quot;数据名&quot;])</span><br></pre></td></tr></table></figure><h3 id="调用模块中的mutations"><a href="#调用模块中的mutations" class="headerlink" title="调用模块中的mutations"></a>调用模块中的<code>mutations</code></h3><p><strong>注意：</strong>默认模块中的<code>mutations</code>和<code>actions</code>会被挂载到全局，需要开启命名空间，才会挂载到子模块</p><h4 id="通过store调用子模块mutation"><a href="#通过store调用子模块mutation" class="headerlink" title="通过store调用子模块mutation"></a>通过store调用子模块mutation</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$store.commit(&#x27;模块名/mutation函数名&#x27;,额外参数)</span><br></pre></td></tr></table></figure><h4 id="通过mapMutations进行映射"><a href="#通过mapMutations进行映射" class="headerlink" title="通过mapMutations进行映射"></a>通过mapMutations进行映射</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mapMutations(&quot;模块名&quot;,[&quot;mutation函数名“])</span><br></pre></td></tr></table></figure><h3 id="调用子模块中的action"><a href="#调用子模块中的action" class="headerlink" title="调用子模块中的action"></a>调用子模块中的action</h3><p>同样需要预先开启命名空间</p><h4 id="通过store调用子模块中的action"><a href="#通过store调用子模块中的action" class="headerlink" title="通过store调用子模块中的action"></a>通过store调用子模块中的action</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$store.dispatch(&quot;模块名/action里面的函数名&quot;,额外参数)</span><br></pre></td></tr></table></figure><h4 id="通过mapActions映射"><a href="#通过mapActions映射" class="headerlink" title="通过mapActions映射"></a>通过mapActions映射</h4><p>子模块的映射语法</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mapActions(&quot;模块名&quot;,[&quot;action函数名&quot;])</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Vuex&quot;&gt;&lt;a href=&quot;#Vuex&quot; class=&quot;headerlink&quot; title=&quot;Vuex&quot;&gt;&lt;/a&gt;Vuex&lt;/h1&gt;&lt;h2 id=&quot;vuex概述&quot;&gt;&lt;a href=&quot;#vuex概述&quot; class=&quot;headerlink&quot; title=&quot;vuex概</summary>
      
    
    
    
    <category term="vue" scheme="https://bangwu2001.github.io/categories/vue/"/>
    
    
    <category term="前端" scheme="https://bangwu2001.github.io/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>web项目阿里图标引用</title>
    <link href="https://bangwu2001.github.io/2025/05/03/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9B%B8%E5%85%B3/%E6%A1%86%E6%9E%B6%E8%AF%AD%E8%A8%80%E7%9B%B8%E5%85%B3/%E5%89%8D%E7%AB%AF/vue/%E9%98%BF%E9%87%8C%E5%9B%BE%E6%A0%87%E5%BC%95%E7%94%A8/%E9%98%BF%E9%87%8C%E5%9B%BE%E6%A0%87%E5%BC%95%E7%94%A8/"/>
    <id>https://bangwu2001.github.io/2025/05/03/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9B%B8%E5%85%B3/%E6%A1%86%E6%9E%B6%E8%AF%AD%E8%A8%80%E7%9B%B8%E5%85%B3/%E5%89%8D%E7%AB%AF/vue/%E9%98%BF%E9%87%8C%E5%9B%BE%E6%A0%87%E5%BC%95%E7%94%A8/%E9%98%BF%E9%87%8C%E5%9B%BE%E6%A0%87%E5%BC%95%E7%94%A8/</id>
    <published>2025-05-03T01:48:42.000Z</published>
    <updated>2025-05-03T01:36:36.688Z</updated>
    
    <content type="html"><![CDATA[<h1 id="阿里图标引用"><a href="#阿里图标引用" class="headerlink" title="阿里图标引用"></a>阿里图标引用</h1><p><a href="https://www.iconfont.cn/">阿里矢量图官网</a></p><p><img src="/2025/05/03/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9B%B8%E5%85%B3/%E6%A1%86%E6%9E%B6%E8%AF%AD%E8%A8%80%E7%9B%B8%E5%85%B3/%E5%89%8D%E7%AB%AF/vue/%E9%98%BF%E9%87%8C%E5%9B%BE%E6%A0%87%E5%BC%95%E7%94%A8/%E9%98%BF%E9%87%8C%E5%9B%BE%E6%A0%87%E5%BC%95%E7%94%A8/image-20250503090848342.png" alt="image-20250503090848342" style="zoom: 50%;"></p><p><strong>如何在web项目中应用阿里图标？</strong></p><p><img src="/2025/05/03/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9B%B8%E5%85%B3/%E6%A1%86%E6%9E%B6%E8%AF%AD%E8%A8%80%E7%9B%B8%E5%85%B3/%E5%89%8D%E7%AB%AF/vue/%E9%98%BF%E9%87%8C%E5%9B%BE%E6%A0%87%E5%BC%95%E7%94%A8/%E9%98%BF%E9%87%8C%E5%9B%BE%E6%A0%87%E5%BC%95%E7%94%A8/image-20250503090931429.png" alt="image-20250503090931429" style="zoom:50%;"></p><p><img src="/2025/05/03/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9B%B8%E5%85%B3/%E6%A1%86%E6%9E%B6%E8%AF%AD%E8%A8%80%E7%9B%B8%E5%85%B3/%E5%89%8D%E7%AB%AF/vue/%E9%98%BF%E9%87%8C%E5%9B%BE%E6%A0%87%E5%BC%95%E7%94%A8/%E9%98%BF%E9%87%8C%E5%9B%BE%E6%A0%87%E5%BC%95%E7%94%A8/image-20250503091007393.png" alt="image-20250503091007393" style="zoom:50%;"></p><p>在主页搜索想要的图库，然后将其加入购物车</p><p><img src="/2025/05/03/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9B%B8%E5%85%B3/%E6%A1%86%E6%9E%B6%E8%AF%AD%E8%A8%80%E7%9B%B8%E5%85%B3/%E5%89%8D%E7%AB%AF/vue/%E9%98%BF%E9%87%8C%E5%9B%BE%E6%A0%87%E5%BC%95%E7%94%A8/%E9%98%BF%E9%87%8C%E5%9B%BE%E6%A0%87%E5%BC%95%E7%94%A8/image-20250503091143921.png" alt="image-20250503091143921" style="zoom:50%;"></p><p><img src="/2025/05/03/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9B%B8%E5%85%B3/%E6%A1%86%E6%9E%B6%E8%AF%AD%E8%A8%80%E7%9B%B8%E5%85%B3/%E5%89%8D%E7%AB%AF/vue/%E9%98%BF%E9%87%8C%E5%9B%BE%E6%A0%87%E5%BC%95%E7%94%A8/%E9%98%BF%E9%87%8C%E5%9B%BE%E6%A0%87%E5%BC%95%E7%94%A8/image-20250503091202592.png" alt="image-20250503091202592" style="zoom:50%;"></p><p><img src="/2025/05/03/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9B%B8%E5%85%B3/%E6%A1%86%E6%9E%B6%E8%AF%AD%E8%A8%80%E7%9B%B8%E5%85%B3/%E5%89%8D%E7%AB%AF/vue/%E9%98%BF%E9%87%8C%E5%9B%BE%E6%A0%87%E5%BC%95%E7%94%A8/%E9%98%BF%E9%87%8C%E5%9B%BE%E6%A0%87%E5%BC%95%E7%94%A8/image-20250503091244327.png" alt="image-20250503091244327" style="zoom:50%;"></p><p><img src="/2025/05/03/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9B%B8%E5%85%B3/%E6%A1%86%E6%9E%B6%E8%AF%AD%E8%A8%80%E7%9B%B8%E5%85%B3/%E5%89%8D%E7%AB%AF/vue/%E9%98%BF%E9%87%8C%E5%9B%BE%E6%A0%87%E5%BC%95%E7%94%A8/%E9%98%BF%E9%87%8C%E5%9B%BE%E6%A0%87%E5%BC%95%E7%94%A8/image-20250503091320283.png" alt="image-20250503091320283" style="zoom:50%;"></p><p>在项目的<code>index.html</code>文件中添加如下代码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;//at.alicdn.com/t/c/font_4911750_exqkgo67eb.css&quot;</span>/&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 其中//at.alicdn.com/t/c/font_4911750_exqkgo67eb.css就是上图中复制的代码--&gt;</span></span><br></pre></td></tr></table></figure><p>复制想要图标的代码</p><p><img src="/2025/05/03/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9B%B8%E5%85%B3/%E6%A1%86%E6%9E%B6%E8%AF%AD%E8%A8%80%E7%9B%B8%E5%85%B3/%E5%89%8D%E7%AB%AF/vue/%E9%98%BF%E9%87%8C%E5%9B%BE%E6%A0%87%E5%BC%95%E7%94%A8/%E9%98%BF%E9%87%8C%E5%9B%BE%E6%A0%87%E5%BC%95%E7%94%A8/image-20250503091642585.png" alt="image-20250503091642585" style="zoom:50%;"></p><p>在想要使用图标的位置添加:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;iconfont icon-xxx&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--其中icon-xxx从上图中选择对应图标进行复制代码即可--&gt;</span></span><br></pre></td></tr></table></figure><p>每次新加入图标，需要重新更新代码，在<code>index,html</code>中引入新的<code>css</code></p><p><img src="/2025/05/03/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9B%B8%E5%85%B3/%E6%A1%86%E6%9E%B6%E8%AF%AD%E8%A8%80%E7%9B%B8%E5%85%B3/%E5%89%8D%E7%AB%AF/vue/%E9%98%BF%E9%87%8C%E5%9B%BE%E6%A0%87%E5%BC%95%E7%94%A8/%E9%98%BF%E9%87%8C%E5%9B%BE%E6%A0%87%E5%BC%95%E7%94%A8/image-20250503092618484.png" alt="image-20250503092618484" style="zoom:50%;"></p><p><strong>对于每个图标，可以自己设置命名</strong></p><p><img src="/2025/05/03/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9B%B8%E5%85%B3/%E6%A1%86%E6%9E%B6%E8%AF%AD%E8%A8%80%E7%9B%B8%E5%85%B3/%E5%89%8D%E7%AB%AF/vue/%E9%98%BF%E9%87%8C%E5%9B%BE%E6%A0%87%E5%BC%95%E7%94%A8/%E9%98%BF%E9%87%8C%E5%9B%BE%E6%A0%87%E5%BC%95%E7%94%A8/image-20250503092939054.png" alt="image-20250503092939054" style="zoom: 50%;"></p><p><img src="/2025/05/03/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9B%B8%E5%85%B3/%E6%A1%86%E6%9E%B6%E8%AF%AD%E8%A8%80%E7%9B%B8%E5%85%B3/%E5%89%8D%E7%AB%AF/vue/%E9%98%BF%E9%87%8C%E5%9B%BE%E6%A0%87%E5%BC%95%E7%94%A8/%E9%98%BF%E9%87%8C%E5%9B%BE%E6%A0%87%E5%BC%95%E7%94%A8/image-20250503093002708.png" alt="image-20250503093002708" style="zoom:50%;"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;阿里图标引用&quot;&gt;&lt;a href=&quot;#阿里图标引用&quot; class=&quot;headerlink&quot; title=&quot;阿里图标引用&quot;&gt;&lt;/a&gt;阿里图标引用&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://www.iconfont.cn/&quot;&gt;阿里矢量图官网&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;</summary>
      
    
    
    
    <category term="vue" scheme="https://bangwu2001.github.io/categories/vue/"/>
    
    
    <category term="前端" scheme="https://bangwu2001.github.io/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>vue路由进阶</title>
    <link href="https://bangwu2001.github.io/2025/05/03/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9B%B8%E5%85%B3/%E6%A1%86%E6%9E%B6%E8%AF%AD%E8%A8%80%E7%9B%B8%E5%85%B3/%E5%89%8D%E7%AB%AF/vue/06%20vue%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A806/vue06/"/>
    <id>https://bangwu2001.github.io/2025/05/03/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9B%B8%E5%85%B3/%E6%A1%86%E6%9E%B6%E8%AF%AD%E8%A8%80%E7%9B%B8%E5%85%B3/%E5%89%8D%E7%AB%AF/vue/06%20vue%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A806/vue06/</id>
    <published>2025-05-03T01:48:42.000Z</published>
    <updated>2025-05-03T01:35:34.705Z</updated>
    
    <content type="html"><![CDATA[<h1 id="vue06"><a href="#vue06" class="headerlink" title="vue06"></a>vue06</h1><h2 id="路由进阶"><a href="#路由进阶" class="headerlink" title="路由进阶"></a>路由进阶</h2><h3 id="路由的封装剥离"><a href="#路由的封装剥离" class="headerlink" title="路由的封装剥离"></a>路由的封装剥离</h3><p>如果关于路由的所有配置均写在<code>main.js</code>文件中是不合适的，将路由模块抽离出来，更利于后期的维护</p><p><strong>具体操作</strong></p><p><strong>①抽取路由配置代码</strong></p><p>新建<code>src/router/index.js</code>文件，在其中编写路由配置代码</p><p><strong>②引入</strong></p><p>在<code>main.js</code>文件中，引入路由对象并注入到<code>vue</code>实例</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> router <span class="keyword">from</span> <span class="string">&#x27;./router/index.js&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span><br><span class="line">    <span class="attr">render</span>:<span class="function"><span class="params">h</span>=&gt;</span><span class="title function_">h</span>(<span class="title class_">App</span>),</span><br><span class="line">    router</span><br><span class="line">&#125;).$mount(<span class="string">&quot;#app&quot;</span>)</span><br></pre></td></tr></table></figure><p><strong>实例</strong></p><p><code>router/index.js</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">VueRouter</span> <span class="keyword">from</span> <span class="string">&quot;vue-router&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Vue</span> <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span>;</span><br><span class="line"><span class="title class_">Vue</span>.<span class="title function_">use</span>(<span class="title class_">VueRouter</span>)</span><br><span class="line"><span class="comment">//相对路径：如果层级较深，使用相对路径可能比较复杂</span></span><br><span class="line"><span class="comment">//绝对路径，在vue中，使用@可以指代src的绝对路径</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">FindMusic</span> <span class="keyword">from</span> <span class="string">&#x27;@/views/FindMusic.vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">MyMusic</span> <span class="keyword">from</span> <span class="string">&#x27;../views/MyMusic.vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">MyFriend</span> <span class="keyword">from</span> <span class="string">&#x27;../views/MyFriend.vue&#x27;</span></span><br><span class="line"><span class="keyword">const</span> router = <span class="keyword">new</span> <span class="title class_">VueRouter</span>(</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">routes</span>:[</span><br><span class="line">      &#123;<span class="attr">path</span>:<span class="string">&quot;/find&quot;</span>,<span class="attr">component</span>:<span class="title class_">FindMusic</span>&#125;,</span><br><span class="line">      &#123;<span class="attr">path</span>:<span class="string">&quot;/my&quot;</span>,<span class="attr">component</span>:<span class="title class_">MyMusic</span>&#125;,</span><br><span class="line">      &#123;<span class="attr">path</span>:<span class="string">&quot;/friend&quot;</span>,<span class="attr">component</span>:<span class="title class_">MyFriend</span>&#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">)</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> router</span><br></pre></td></tr></table></figure><p><code>main.js</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">import Vue from &#x27;vue&#x27;</span><br><span class="line">import App from &#x27;./App.vue&#x27;</span><br><span class="line"></span><br><span class="line">Vue.config.productionTip = false</span><br><span class="line"></span><br><span class="line">import router from &quot;./router/index.js&quot;</span><br><span class="line"></span><br><span class="line">new Vue(&#123;</span><br><span class="line">  render: h =&gt; h(App),</span><br><span class="line">  router</span><br><span class="line">&#125;).$mount(&#x27;#app&#x27;)</span><br></pre></td></tr></table></figure><h3 id="声明式导航—导航链接"><a href="#声明式导航—导航链接" class="headerlink" title="声明式导航—导航链接"></a>声明式导航—导航链接</h3><p><code>vue-router</code>提供了一个全局组件<code>router-link</code>，可以取代<code>a</code>标签，其与<code>a</code>标签相比的优势：</p><ul><li>能跳转，配置<code>to</code>属性指定路径，本质还是<code>a</code>标签，且路径前无需加<code>#</code></li><li>能高亮，默认会提供高亮类名，可以之际设置高亮样式</li></ul><p><img src="/2025/05/03/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9B%B8%E5%85%B3/%E6%A1%86%E6%9E%B6%E8%AF%AD%E8%A8%80%E7%9B%B8%E5%85%B3/%E5%89%8D%E7%AB%AF/vue/06%20vue%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A806/vue06/image-20250427210601567.png" alt="image-20250427210601567"></p><p>当前点击的<code>tab</code>，其会默认添加两个类名<code>router-link-exact-active</code>和<code>router-link-active</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;div class=&quot;tab-container&quot;&gt;</span><br><span class="line">      &lt;!-- &lt;div class=&quot;tab active&quot;&gt;&lt;a href=&quot;#/find&quot;&gt;发现音乐&lt;/a&gt;&lt;/div&gt;</span><br><span class="line">      &lt;div class=&quot;tab&quot;&gt;&lt;a href=&quot;#/my&quot;&gt;我的音乐&lt;/a&gt;&lt;/div&gt;</span><br><span class="line">      &lt;div class=&quot;tab&quot;&gt;&lt;a href=&quot;#/friend&quot;&gt;朋友&lt;/a&gt;&lt;/div&gt; --&gt;</span><br><span class="line">      &lt;div class=&quot;tab active&quot;&gt;</span><br><span class="line">        &lt;router-link to=&quot;/find&quot;&gt;发现音乐&lt;/router-link&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">      &lt;div class=&quot;tab&quot;&gt;&lt;router-link to=&quot;/my&quot;&gt;我的音乐&lt;/router-link&gt;&lt;/div&gt;</span><br><span class="line">      &lt;div class=&quot;tab&quot;&gt;&lt;router-link to=&quot;/friend&quot;&gt;我的朋友&lt;/router-link&gt;&lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div class=&quot;tab-content&quot;&gt;</span><br><span class="line">      &lt;router-view&gt;&lt;/router-view&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line">.tab-container &#123;</span><br><span class="line">  display: flex;</span><br><span class="line">  background-color: #333;</span><br><span class="line">  width: 60%;</span><br><span class="line">  margin: 30px auto;</span><br><span class="line">&#125;</span><br><span class="line">.tab &#123;</span><br><span class="line">  flex: 1;</span><br><span class="line">  padding: 10px;</span><br><span class="line">  text-align: center;</span><br><span class="line">  color: white;</span><br><span class="line">  cursor: pointer;</span><br><span class="line">&#125;</span><br><span class="line">.active &#123;</span><br><span class="line">  background-color: #444;</span><br><span class="line">&#125;</span><br><span class="line">a &#123;</span><br><span class="line">  all: unset;</span><br><span class="line">&#125;</span><br><span class="line">.tab-content &#123;</span><br><span class="line">  width: 60%;</span><br><span class="line">  font-size: 50px;</span><br><span class="line">  font-weight: 700;</span><br><span class="line">  color: red;</span><br><span class="line">  margin: 20px auto;</span><br><span class="line">  text-align: center;</span><br><span class="line">&#125;</span><br><span class="line">.router-link-active &#123;</span><br><span class="line">  background-color: rebeccapurple;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h4 id="声明式导航—两个类名"><a href="#声明式导航—两个类名" class="headerlink" title="声明式导航—两个类名"></a>声明式导航—两个类名</h4><p><code>router-link</code>会自动给当前导航元素添加两个高亮类名<code>router-link-exact-active</code>和<code>router-link-active</code>，那么这两个类名有什么区别？</p><ul><li><code>router-link-active</code> 模糊匹配，用的比较多<ul><li><code>to=/my</code>可以匹配<code>/my</code>、<code>/my/a</code>、<code>/my/b</code>…</li><li>即如果访问的链接为<code>/my/a</code>，则<code>/my</code>对应的导航栏也会高亮</li></ul></li><li><code>router-link-exact-active</code> 精确匹配<ul><li><code>to=/my</code>仅仅可以匹配<code>/my</code></li></ul></li></ul><p><strong>自定义高亮类名</strong></p><p><code>router-link</code>自动添加的两个高亮类名比较长，如果我们希望能够定义类名怎么办？</p><p>可以在创建路由对象时，重新指定这两个类名的名称</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">const router = new VueRouter(&#123;</span><br><span class="line">routes:[],</span><br><span class="line">linkActiveClass:&quot;类名&quot;,</span><br><span class="line">linkExactActiveClass:&quot;类名&quot;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h4 id="声明式导航—跳转传参"><a href="#声明式导航—跳转传参" class="headerlink" title="声明式导航—跳转传参"></a>声明式导航—跳转传参</h4><p>在跳转路由时，进行传值</p><h5 id="查询参数传参"><a href="#查询参数传参" class="headerlink" title="查询参数传参"></a>查询参数传参</h5><p><strong>语法格式</strong></p><p><code>to=&quot;/path?参数名1=值1&amp;参数名2=值2&quot;</code></p><p><strong>对应页面组件接收传递过来的值</strong></p><p><code>$route.query.参数名</code></p><p><strong>实例</strong></p><p><code>src/router/index.js</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">VueRouter</span> <span class="keyword">from</span> <span class="string">&quot;vue-router&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Vue</span> <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="title class_">Vue</span>.<span class="title function_">use</span>(<span class="title class_">VueRouter</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">SearchPage</span> <span class="keyword">from</span> <span class="string">&quot;@/views/SearchPage.vue&quot;</span>;</span><br><span class="line"><span class="keyword">const</span> router = <span class="keyword">new</span> <span class="title class_">VueRouter</span>(&#123;</span><br><span class="line">  <span class="attr">routes</span>: [</span><br><span class="line">    &#123; <span class="attr">path</span>: <span class="string">&quot;/search&quot;</span>, <span class="attr">component</span>: <span class="title class_">SearchPage</span> &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> router</span><br></pre></td></tr></table></figure><p><code>main.js</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">Vue</span> <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">App</span> <span class="keyword">from</span> <span class="string">&#x27;./App.vue&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="title class_">Vue</span>.<span class="property">config</span>.<span class="property">productionTip</span> = <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> router <span class="keyword">from</span> <span class="string">&#x27;@/router/index.js&#x27;</span></span><br><span class="line"><span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span><br><span class="line">  <span class="attr">render</span>: <span class="function"><span class="params">h</span> =&gt;</span> <span class="title function_">h</span>(<span class="title class_">App</span>),</span><br><span class="line">  router</span><br><span class="line">&#125;).$mount(<span class="string">&#x27;#app&#x27;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><code>App.vue</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;div class=&quot;header&quot;&gt;</span><br><span class="line">      &lt;div class=&quot;logo&quot;&gt;</span><br><span class="line">        &lt;img src=&quot;./assets/logohm.png&quot; alt=&quot;Logo&quot; width=&quot;50&quot; height=&quot;50&quot; /&gt;</span><br><span class="line">        &lt;span&gt;黑马程序员&lt;/span&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div class=&quot;search-bar&quot;&gt;</span><br><span class="line">      &lt;input type=&quot;text&quot; placeholder=&quot;请输入搜索内容&quot; /&gt;</span><br><span class="line">      &lt;input type=&quot;submit&quot; value=&quot;搜索一下&quot; /&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div class=&quot;hot-search&quot;&gt;</span><br><span class="line">      热门搜索：</span><br><span class="line">      &lt;router-link to=&quot;/search?words=黑马程序员&quot;&gt;黑马程序员&lt;/router-link&gt;</span><br><span class="line">      &lt;router-link to=&quot;/search?words=前端培训&quot;&gt;前端培训&lt;/router-link&gt;</span><br><span class="line">      &lt;router-link to=&quot;/search?words=如何成为前端大牛&quot;</span><br><span class="line">        &gt;如何成为前端大牛&lt;/router-link</span><br><span class="line">      &gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div class=&quot;content&quot;&gt;</span><br><span class="line">      &lt;router-view&gt;&lt;/router-view&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line">body &#123;</span><br><span class="line">  font-family: Arial, sans-serif;</span><br><span class="line">  width: 60%;</span><br><span class="line">  margin: 10px auto;</span><br><span class="line">&#125;</span><br><span class="line">.header &#123;</span><br><span class="line">  text-align: center;</span><br><span class="line">  margin-top: 20px;</span><br><span class="line">&#125;</span><br><span class="line">.logo &#123;</span><br><span class="line">  display: inline-block;</span><br><span class="line">  font-size: 24px;</span><br><span class="line">  font-weight: bold;</span><br><span class="line">  color: #333;</span><br><span class="line">&#125;</span><br><span class="line">.search-bar &#123;</span><br><span class="line">  text-align: center;</span><br><span class="line">  margin: 20px 0;</span><br><span class="line">&#125;</span><br><span class="line">.search-bar input[type=&quot;text&quot;] &#123;</span><br><span class="line">  width: 60%;</span><br><span class="line">  padding: 10px;</span><br><span class="line">  font-size: 16px;</span><br><span class="line">&#125;</span><br><span class="line">.search-bar input[type=&quot;submit&quot;] &#123;</span><br><span class="line">  padding: 10px 20px;</span><br><span class="line">  font-size: 16px;</span><br><span class="line">  background-color: #d9534f;</span><br><span class="line">  color: white;</span><br><span class="line">  border: none;</span><br><span class="line">  cursor: pointer;</span><br><span class="line">&#125;</span><br><span class="line">.hot-search &#123;</span><br><span class="line">  text-align: center;</span><br><span class="line">  margin-bottom: 20px;</span><br><span class="line">&#125;</span><br><span class="line">.hot-search a &#123;</span><br><span class="line">  margin: 0 5px;</span><br><span class="line">  color: #d9534f;</span><br><span class="line">  text-decoration: none;</span><br><span class="line">  border: 1px solid #d9534f;</span><br><span class="line">  padding: 5px 10px;</span><br><span class="line">  border-radius: 5px;</span><br><span class="line">&#125;</span><br><span class="line">.content &#123;</span><br><span class="line">  margin: 30px auto;</span><br><span class="line">  width: 40%;</span><br><span class="line">  text-align: center;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p><code>SearchPage.vue</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;h2&gt;当前为所有总页面&lt;/h2&gt;</span><br><span class="line">    &lt;p&gt;搜索的关键字:&#123;&#123; $route.query.words &#125;&#125;&lt;/p&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h5 id="动态路由传参"><a href="#动态路由传参" class="headerlink" title="动态路由传参"></a>动态路由传参</h5><p><strong>配置动态路由</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">const router = new VueRouter(&#123;</span><br><span class="line">routes:[</span><br><span class="line">&#123;path:&quot;/xxx/:参数名&quot;&#125;</span><br><span class="line">]</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p><strong>配置导航链接</strong></p><p><code>to=&quot;/path/参数值&quot;</code></p><p><strong>对应页面组件接收传递过来的值</strong></p><p><code>$route.params.参数名</code></p><p>注意：<code>path:&quot;/xxx/:参数名&quot;</code>这种路由配置必须要传递对应的参数，如果不传参数，无法匹配，如果希望不传参数也能匹配，则可以加个可选符<code>?</code>，<code>path:/xxx/:参数名?</code></p><p><strong>实例</strong></p><p><code>src/router/index.js</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">VueRouter</span> <span class="keyword">from</span> <span class="string">&quot;vue-router&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Vue</span> <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="title class_">Vue</span>.<span class="title function_">use</span>(<span class="title class_">VueRouter</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">SearchPage</span> <span class="keyword">from</span> <span class="string">&quot;@/views/SearchPage.vue&quot;</span>;</span><br><span class="line"><span class="keyword">const</span> router = <span class="keyword">new</span> <span class="title class_">VueRouter</span>(&#123;</span><br><span class="line">  <span class="attr">routes</span>: [</span><br><span class="line">    &#123; <span class="attr">path</span>: <span class="string">&quot;/search/:words&quot;</span>, <span class="attr">component</span>: <span class="title class_">SearchPage</span> &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> router</span><br></pre></td></tr></table></figure><p><code>main.js</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">import Vue from &#x27;vue&#x27;</span><br><span class="line">import App from &#x27;./App.vue&#x27;</span><br><span class="line"></span><br><span class="line">Vue.config.productionTip = false</span><br><span class="line"></span><br><span class="line">import router from &#x27;@/router/index.js&#x27;</span><br><span class="line">new Vue(&#123;</span><br><span class="line">  render: h =&gt; h(App),</span><br><span class="line">  router</span><br><span class="line">&#125;).$mount(&#x27;#app&#x27;)</span><br></pre></td></tr></table></figure><p><code>App.vue</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;div class=&quot;header&quot;&gt;</span><br><span class="line">      &lt;div class=&quot;logo&quot;&gt;</span><br><span class="line">        &lt;img src=&quot;./assets/logohm.png&quot; alt=&quot;Logo&quot; width=&quot;50&quot; height=&quot;50&quot; /&gt;</span><br><span class="line">        &lt;span&gt;黑马程序员&lt;/span&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div class=&quot;search-bar&quot;&gt;</span><br><span class="line">      &lt;input type=&quot;text&quot; placeholder=&quot;请输入搜索内容&quot; /&gt;</span><br><span class="line">      &lt;input type=&quot;submit&quot; value=&quot;搜索一下&quot; /&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div class=&quot;hot-search&quot;&gt;</span><br><span class="line">      热门搜索：</span><br><span class="line">      &lt;router-link to=&quot;/search/黑马程序员&quot;&gt;黑马程序员&lt;/router-link&gt;</span><br><span class="line">      &lt;router-link to=&quot;/search/前端培训&quot;&gt;前端培训&lt;/router-link&gt;</span><br><span class="line">      &lt;router-link to=&quot;/search/如何成为前端大牛&quot;&gt;如何成为前端大牛&lt;/router-link&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div class=&quot;content&quot;&gt;</span><br><span class="line">      &lt;router-view&gt;&lt;/router-view&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line">body &#123;</span><br><span class="line">  font-family: Arial, sans-serif;</span><br><span class="line">  width: 60%;</span><br><span class="line">  margin: 10px auto;</span><br><span class="line">&#125;</span><br><span class="line">.header &#123;</span><br><span class="line">  text-align: center;</span><br><span class="line">  margin-top: 20px;</span><br><span class="line">&#125;</span><br><span class="line">.logo &#123;</span><br><span class="line">  display: inline-block;</span><br><span class="line">  font-size: 24px;</span><br><span class="line">  font-weight: bold;</span><br><span class="line">  color: #333;</span><br><span class="line">&#125;</span><br><span class="line">.search-bar &#123;</span><br><span class="line">  text-align: center;</span><br><span class="line">  margin: 20px 0;</span><br><span class="line">&#125;</span><br><span class="line">.search-bar input[type=&quot;text&quot;] &#123;</span><br><span class="line">  width: 60%;</span><br><span class="line">  padding: 10px;</span><br><span class="line">  font-size: 16px;</span><br><span class="line">&#125;</span><br><span class="line">.search-bar input[type=&quot;submit&quot;] &#123;</span><br><span class="line">  padding: 10px 20px;</span><br><span class="line">  font-size: 16px;</span><br><span class="line">  background-color: #d9534f;</span><br><span class="line">  color: white;</span><br><span class="line">  border: none;</span><br><span class="line">  cursor: pointer;</span><br><span class="line">&#125;</span><br><span class="line">.hot-search &#123;</span><br><span class="line">  text-align: center;</span><br><span class="line">  margin-bottom: 20px;</span><br><span class="line">&#125;</span><br><span class="line">.hot-search a &#123;</span><br><span class="line">  margin: 0 5px;</span><br><span class="line">  color: #d9534f;</span><br><span class="line">  text-decoration: none;</span><br><span class="line">  border: 1px solid #d9534f;</span><br><span class="line">  padding: 5px 10px;</span><br><span class="line">  border-radius: 5px;</span><br><span class="line">&#125;</span><br><span class="line">.content &#123;</span><br><span class="line">  margin: 30px auto;</span><br><span class="line">  width: 40%;</span><br><span class="line">  text-align: center;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p><code>SearchPage.vue</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;h2&gt;当前为所有总页面&lt;/h2&gt;</span><br><span class="line">    &lt;p&gt;搜索的关键字:&#123;&#123; $route.params.words &#125;&#125;&lt;/p&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h5 id="查询参数传参-vs-动态路由传参"><a href="#查询参数传参-vs-动态路由传参" class="headerlink" title="查询参数传参 vs 动态路由传参"></a>查询参数传参 vs 动态路由传参</h5><ul><li>查询参数传参比较适合传多个参数</li><li>动态路由传参优雅简洁，适合传单个参数</li></ul><h3 id="路由重定向"><a href="#路由重定向" class="headerlink" title="路由重定向"></a>路由重定向</h3><p>重定向：匹配到某一个路径之后，强制跳转到另一个路径</p><p>语法：<code>&#123;path:匹配路径,redirect:重定向到的路径&#125;</code></p><h3 id="Vue路由—404"><a href="#Vue路由—404" class="headerlink" title="Vue路由—404"></a>Vue路由—404</h3><p>当路径找不到匹配时，给一个提示页面</p><p>语法：配在路由最后，<code>&#123;path:&quot;*&quot;（任意路径）&#125;</code>,前面不匹配就命中最后这个</p><h3 id="Vue路由—模式设置"><a href="#Vue路由—模式设置" class="headerlink" title="Vue路由—模式设置"></a>Vue路由—模式设置</h3><p>背景：路由的路径看起来不自然，有<code>#</code>，能否切换成真正的路径形式</p><ul><li>hash路由(Vue默认)，例如<code>http://localhost:8080/#/home</code></li><li>history路由(常用),例如<code>http:localhost:8080/home</code></li></ul><p>语法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">const router = new VueRouter(&#123;</span><br><span class="line">routes,</span><br><span class="line">mode:&quot;history&quot;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="编程式导航"><a href="#编程式导航" class="headerlink" title="编程式导航"></a>编程式导航</h3><h4 id="基本跳转"><a href="#基本跳转" class="headerlink" title="基本跳转"></a>基本跳转</h4><p>点击按钮如何实现页面的跳转，比如场景：输入关键词，点击搜索按钮；点击登录按钮</p><p>编程式导航：用JS代码来进行跳转</p><p>常见两种实现方式：</p><ul><li>path路径跳转</li><li>name命名路由跳转</li></ul><h5 id="path路径跳转"><a href="#path路径跳转" class="headerlink" title="path路径跳转"></a>path路径跳转</h5><p><strong>语法</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">this.$router.push(&quot;路由路径&quot;)</span><br><span class="line">或者完整写法</span><br><span class="line">this.$router.push(&#123;</span><br><span class="line">path:&quot;路由路径&quot;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p><strong>实例</strong></p><p><code>App.vue</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;div class=&quot;header&quot;&gt;</span><br><span class="line">      &lt;div class=&quot;logo&quot;&gt;</span><br><span class="line">        &lt;img src=&quot;./assets/logohm.png&quot; alt=&quot;Logo&quot; width=&quot;50&quot; height=&quot;50&quot; /&gt;</span><br><span class="line">        &lt;span&gt;黑马程序员&lt;/span&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div class=&quot;search-bar&quot;&gt;</span><br><span class="line">      &lt;input type=&quot;text&quot; placeholder=&quot;请输入搜索内容&quot; v-model=&quot;queryWord&quot; /&gt;</span><br><span class="line">      &lt;input type=&quot;submit&quot; value=&quot;搜索一下&quot; @click=&quot;search&quot; /&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div class=&quot;hot-search&quot;&gt;</span><br><span class="line">      热门搜索：</span><br><span class="line">      &lt;router-link to=&quot;/search/黑马程序员&quot;&gt;黑马程序员&lt;/router-link&gt;</span><br><span class="line">      &lt;router-link to=&quot;/search/前端培训&quot;&gt;前端培训&lt;/router-link&gt;</span><br><span class="line">      &lt;router-link to=&quot;/search/如何成为前端大牛&quot;&gt;如何成为前端大牛&lt;/router-link&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div class=&quot;content&quot;&gt;</span><br><span class="line">      &lt;router-view&gt;&lt;/router-view&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      queryWord: &quot;&quot;,</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    search() &#123;</span><br><span class="line">      this.$router.push(`/search/$&#123;this.queryWord&#125;`);</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line">body &#123;</span><br><span class="line">  font-family: Arial, sans-serif;</span><br><span class="line">  width: 60%;</span><br><span class="line">  margin: 10px auto;</span><br><span class="line">&#125;</span><br><span class="line">.header &#123;</span><br><span class="line">  text-align: center;</span><br><span class="line">  margin-top: 20px;</span><br><span class="line">&#125;</span><br><span class="line">.logo &#123;</span><br><span class="line">  display: inline-block;</span><br><span class="line">  font-size: 24px;</span><br><span class="line">  font-weight: bold;</span><br><span class="line">  color: #333;</span><br><span class="line">&#125;</span><br><span class="line">.search-bar &#123;</span><br><span class="line">  text-align: center;</span><br><span class="line">  margin: 20px 0;</span><br><span class="line">&#125;</span><br><span class="line">.search-bar input[type=&quot;text&quot;] &#123;</span><br><span class="line">  width: 60%;</span><br><span class="line">  padding: 10px;</span><br><span class="line">  font-size: 16px;</span><br><span class="line">&#125;</span><br><span class="line">.search-bar input[type=&quot;submit&quot;] &#123;</span><br><span class="line">  padding: 10px 20px;</span><br><span class="line">  font-size: 16px;</span><br><span class="line">  background-color: #d9534f;</span><br><span class="line">  color: white;</span><br><span class="line">  border: none;</span><br><span class="line">  cursor: pointer;</span><br><span class="line">&#125;</span><br><span class="line">.hot-search &#123;</span><br><span class="line">  text-align: center;</span><br><span class="line">  margin-bottom: 20px;</span><br><span class="line">&#125;</span><br><span class="line">.hot-search a &#123;</span><br><span class="line">  margin: 0 5px;</span><br><span class="line">  color: #d9534f;</span><br><span class="line">  text-decoration: none;</span><br><span class="line">  border: 1px solid #d9534f;</span><br><span class="line">  padding: 5px 10px;</span><br><span class="line">  border-radius: 5px;</span><br><span class="line">&#125;</span><br><span class="line">.content &#123;</span><br><span class="line">  margin: 30px auto;</span><br><span class="line">  width: 40%;</span><br><span class="line">  text-align: center;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h5 id="name命名路由跳转"><a href="#name命名路由跳转" class="headerlink" title="name命名路由跳转"></a>name命名路由跳转</h5><p>该方式适用于path路径长的场景</p><p><strong>语法</strong></p><ul><li>配置路由时，给路由添加名字</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;name:&quot;路由名&quot;,path:&quot;路径&quot;,component:&quot;对应的组件名称&quot;&#125;</span><br></pre></td></tr></table></figure><ul><li>路由跳转</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">this.$router.push(&#123;</span><br><span class="line">name:路由名</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h4 id="编程式导航—路由传参"><a href="#编程式导航—路由传参" class="headerlink" title="编程式导航—路由传参"></a>编程式导航—路由传参</h4><p>背景：点击搜索按钮，跳转时传参如何实现？</p><h5 id="path路径跳转传参"><a href="#path路径跳转传参" class="headerlink" title="path路径跳转传参"></a>path路径跳转传参</h5><h6 id="查询参数传参-1"><a href="#查询参数传参-1" class="headerlink" title="查询参数传参"></a>查询参数传参</h6><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">this.$router.push(&quot;路径?参数名1=参数值1&amp;参数名2=参数值2&quot;)</span><br><span class="line">或者完整的写法</span><br><span class="line">this.$router.push(&#123;</span><br><span class="line">path:&quot;路径&quot;,</span><br><span class="line">query:&#123;</span><br><span class="line">参数名1:参数值1,</span><br><span class="line">参数名2:参数值2</span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>对应页面接收参数：<code>$route.query.参数名</code></p><h6 id="动态路由传参-1"><a href="#动态路由传参-1" class="headerlink" title="动态路由传参"></a>动态路由传参</h6><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">this.$router.push(&quot;/路径/参数值&quot;)</span><br><span class="line">或者完整写法</span><br><span class="line">this.$router.push(&quot;/路径/参数值&quot;)</span><br></pre></td></tr></table></figure><p>对应页面接收参数：<code>$route.params.参数名</code></p><h5 id="name命名路由跳转传参"><a href="#name命名路由跳转传参" class="headerlink" title="name命名路由跳转传参"></a>name命名路由跳转传参</h5><h6 id="查询参数传参-2"><a href="#查询参数传参-2" class="headerlink" title="查询参数传参"></a>查询参数传参</h6><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">this.$router.push(&#123;</span><br><span class="line">name:&quot;路由名字&quot;,</span><br><span class="line">query:&#123;</span><br><span class="line">参数名1:&quot;参数值1&quot;,</span><br><span class="line">参数名2:&quot;参数值2&quot;</span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p><strong>动态路由传参</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">this.$router.push(&#123;</span><br><span class="line">name:&quot;路由名字&quot;,</span><br><span class="line">params:&#123;</span><br><span class="line">参数名:&quot;参数值&quot;</span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="嵌套路由"><a href="#嵌套路由" class="headerlink" title="嵌套路由"></a>嵌套路由</h3><p>在一级路由里面嵌套二级路由</p><p><strong>语法</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">const router = new VueRouter(&#123;</span><br><span class="line">routes:[</span><br><span class="line">&#123;</span><br><span class="line">path:&quot;一级路由路径&quot;,</span><br><span class="line">component:对应的组件,</span><br><span class="line">children:[//在children中配置二级路由</span><br><span class="line">&#123;path:二级路由路径,component:对应的组件&#125;</span><br><span class="line">]</span><br><span class="line">&#125;</span><br><span class="line">]</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>注意：为了能够展示二级路由页面，在一级路由页面中也要配置路由出口<code>&lt;router-view&gt;&lt;/router-view&gt;</code></p><h3 id="组件缓存-keep-alive"><a href="#组件缓存-keep-alive" class="headerlink" title="组件缓存 keep-alive"></a>组件缓存 keep-alive</h3><p>在列表页，点击一个进入对应详情页，点击返回，混动条自动切换到了最开头的位置，原来点击的位置看不到了，这样用户体验不好</p><p><strong>背景：</strong>从面经点到详情页，又点返回，数据重新加载了，但是希望能够回到原来的位置</p><p><strong>原因：</strong>路由跳转之后，组件被销毁了，返回回来的组件又被重建了，所以数据重新被加载了</p><p><strong>解决方案：</strong>利用keep-alive将组件缓存下来</p><h4 id="keep-alive"><a href="#keep-alive" class="headerlink" title="keep-alive"></a>keep-alive</h4><p><code>keep-alive</code>是<code>Vue</code>内置组件，当它包裹动态组件时，会缓存不活动的组件实例，而不是销毁它们</p><p><code>keep-alive</code>时一个抽象组件，它自身不会渲染成一个<code>DOM</code>元素，也不会出现在父组件链中</p><p><strong>keep-alive优势</strong></p><ul><li>在组件切换过程中，把切换出去的组件保留在内存中，防止重复渲染dom</li><li>减少加载时间以及性能消耗，提高用户体验性</li></ul><p><strong>语法</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;keep-alive&gt;</span><br><span class="line">&lt;router-view&gt;&lt;/router-view&gt;</span><br><span class="line">&lt;/keep-alive&gt;</span><br></pre></td></tr></table></figure><p><code>keep-alive</code>默认会缓存所有的组件，但是可以通过配置属性值来对其进行控制</p><p><strong>keep-alive三个属性</strong></p><ul><li>include：组件名数组，只有匹配的组件才会被缓存</li><li>exclude：组件名数组，任何匹配的组件都不会被缓存</li><li>max：最多可以缓存多少组件实例</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;keep-alive :include=&quot;[&#x27;组件名&#x27;]&quot;&gt;</span><br><span class="line">&lt;router-view&gt;&lt;/router-view&gt;</span><br><span class="line">&lt;/keep-alive&gt;</span><br></pre></td></tr></table></figure><p><strong>补充</strong></p><p><code>keep-alive</code>缓存的组件会增加两个生命周期钩子函数</p><ul><li><code>actived</code>：激活时，组件被看到时会被触发</li><li><code>deactived</code>：失活时，离开页面组件看不见时触发</li></ul><p>因为组件一旦被缓存，就不会执行组件的<code>created</code>、<code>mounted</code>和<code>destroyed</code>函数</p><h2 id="常规项目实现基本步骤"><a href="#常规项目实现基本步骤" class="headerlink" title="常规项目实现基本步骤"></a>常规项目实现基本步骤</h2><ol><li>配置路由</li><li>实现具体页面的功能</li></ol><h2 id="自定义创建项目"><a href="#自定义创建项目" class="headerlink" title="自定义创建项目"></a>自定义创建项目</h2><p>基于<code>VueCli</code>自定义创建项目架子，前面使用路由时，需要手动导包、注册、创建路由实例、注入vue对象，步骤比较繁琐</p><p>本节介绍如何自定义创建项目架子</p><p><strong>步骤</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">graph LR</span><br><span class="line">安装脚手架--&gt;创建项目--&gt;选择自定义--&gt;Babel/Router/CSS/Linter</span><br></pre></td></tr></table></figure><p><img src="/2025/05/03/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9B%B8%E5%85%B3/%E6%A1%86%E6%9E%B6%E8%AF%AD%E8%A8%80%E7%9B%B8%E5%85%B3/%E5%89%8D%E7%AB%AF/vue/06%20vue%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A806/vue06/image-20250428151254362.png" alt="image-20250428151254362"></p><p><img src="/2025/05/03/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9B%B8%E5%85%B3/%E6%A1%86%E6%9E%B6%E8%AF%AD%E8%A8%80%E7%9B%B8%E5%85%B3/%E5%89%8D%E7%AB%AF/vue/06%20vue%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A806/vue06/image-20250428151341820.png" alt="image-20250428151341820"></p><p><img src="/2025/05/03/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9B%B8%E5%85%B3/%E6%A1%86%E6%9E%B6%E8%AF%AD%E8%A8%80%E7%9B%B8%E5%85%B3/%E5%89%8D%E7%AB%AF/vue/06%20vue%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A806/vue06/image-20250428151408157.png" alt="image-20250428151408157"></p><p><img src="/2025/05/03/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9B%B8%E5%85%B3/%E6%A1%86%E6%9E%B6%E8%AF%AD%E8%A8%80%E7%9B%B8%E5%85%B3/%E5%89%8D%E7%AB%AF/vue/06%20vue%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A806/vue06/image-20250428151450757.png" alt="image-20250428151450757"></p><p><img src="/2025/05/03/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9B%B8%E5%85%B3/%E6%A1%86%E6%9E%B6%E8%AF%AD%E8%A8%80%E7%9B%B8%E5%85%B3/%E5%89%8D%E7%AB%AF/vue/06%20vue%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A806/vue06/image-20250428151548918.png" alt="image-20250428151548918"></p><p><img src="/2025/05/03/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9B%B8%E5%85%B3/%E6%A1%86%E6%9E%B6%E8%AF%AD%E8%A8%80%E7%9B%B8%E5%85%B3/%E5%89%8D%E7%AB%AF/vue/06%20vue%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A806/vue06/image-20250428151657264.png" alt="image-20250428151657264"></p><p><img src="/2025/05/03/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9B%B8%E5%85%B3/%E6%A1%86%E6%9E%B6%E8%AF%AD%E8%A8%80%E7%9B%B8%E5%85%B3/%E5%89%8D%E7%AB%AF/vue/06%20vue%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A806/vue06/image-20250428151852692.png" alt="image-20250428151852692"></p><p><img src="/2025/05/03/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9B%B8%E5%85%B3/%E6%A1%86%E6%9E%B6%E8%AF%AD%E8%A8%80%E7%9B%B8%E5%85%B3/%E5%89%8D%E7%AB%AF/vue/06%20vue%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A806/vue06/image-20250428151951984.png" alt="image-20250428151951984"></p><h2 id="ESlint代码规范"><a href="#ESlint代码规范" class="headerlink" title="ESlint代码规范"></a>ESlint代码规范</h2><h3 id="代码规范"><a href="#代码规范" class="headerlink" title="代码规范"></a>代码规范</h3><p>代码规范即一套写代码的约定规则，例如赋值符号的左右是否需要空格，一句话结束是否需要加<code>;</code></p><p>Vue代码常用的规范：<a href="https://standardjs.com/rules-zhcn">JavaScript Standard Style规范</a></p><h3 id="代码规范错误"><a href="#代码规范错误" class="headerlink" title="代码规范错误"></a>代码规范错误</h3><p>如果编写的代码不符合standard的要求，<code>ESlint</code>会进行错误提示</p><p><img src="/2025/05/03/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9B%B8%E5%85%B3/%E6%A1%86%E6%9E%B6%E8%AF%AD%E8%A8%80%E7%9B%B8%E5%85%B3/%E5%89%8D%E7%AB%AF/vue/06%20vue%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A806/vue06/image-20250428153308392.png" alt="image-20250428153308392"></p><h3 id="解决代码规范错误"><a href="#解决代码规范错误" class="headerlink" title="解决代码规范错误"></a>解决代码规范错误</h3><h4 id="手动修正"><a href="#手动修正" class="headerlink" title="手动修正"></a>手动修正</h4><p>根据错误提示一项一项手动去修改纠正</p><p>如果不认识命令行中的语法报错的含义，可以根据错误代码去 <a href="zh-hans.eslint.org/docs/latest/rules/">ESlint规则表</a>查找具体含义</p><h4 id="自动修正"><a href="#自动修正" class="headerlink" title="自动修正"></a>自动修正</h4><p>基于<code>vscode</code>插件<code>ESLint</code>高亮错误，并通过配置自动帮助我们修复错误</p><p><img src="/2025/05/03/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9B%B8%E5%85%B3/%E6%A1%86%E6%9E%B6%E8%AF%AD%E8%A8%80%E7%9B%B8%E5%85%B3/%E5%89%8D%E7%AB%AF/vue/06%20vue%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A806/vue06/image-20250428154251183.png" alt="image-20250428154251183" style="zoom: 67%;"></p><p>添加配置，使得文件保存时，<code>ESlint</code>自动帮我们修复错误</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//当保存时，eslint自动帮助我们修复错误</span></span><br><span class="line"><span class="attr">&quot;editor.codeActionsOnSave&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;source.fixAll&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line"><span class="comment">//保存代码，不自动格式化</span></span><br><span class="line"><span class="attr">&quot;editor.formatOnSave&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span></span><br></pre></td></tr></table></figure><p><img src="/2025/05/03/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9B%B8%E5%85%B3/%E6%A1%86%E6%9E%B6%E8%AF%AD%E8%A8%80%E7%9B%B8%E5%85%B3/%E5%89%8D%E7%AB%AF/vue/06%20vue%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A806/vue06/image-20250428154925327.png" alt="image-20250428154925327"></p><p><img src="/2025/05/03/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9B%B8%E5%85%B3/%E6%A1%86%E6%9E%B6%E8%AF%AD%E8%A8%80%E7%9B%B8%E5%85%B3/%E5%89%8D%E7%AB%AF/vue/06%20vue%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A806/vue06/image-20250428154958948.png" alt="image-20250428154958948" style="zoom: 67%;"></p><p><img src="/2025/05/03/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9B%B8%E5%85%B3/%E6%A1%86%E6%9E%B6%E8%AF%AD%E8%A8%80%E7%9B%B8%E5%85%B3/%E5%89%8D%E7%AB%AF/vue/06%20vue%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A806/vue06/image-20250428155047315.png" alt="image-20250428155047315" style="zoom:67%;"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;vue06&quot;&gt;&lt;a href=&quot;#vue06&quot; class=&quot;headerlink&quot; title=&quot;vue06&quot;&gt;&lt;/a&gt;vue06&lt;/h1&gt;&lt;h2 id=&quot;路由进阶&quot;&gt;&lt;a href=&quot;#路由进阶&quot; class=&quot;headerlink&quot; title=&quot;路由进阶&quot;</summary>
      
    
    
    
    <category term="vue" scheme="https://bangwu2001.github.io/categories/vue/"/>
    
    
    <category term="前端" scheme="https://bangwu2001.github.io/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>Pinia</title>
    <link href="https://bangwu2001.github.io/2025/05/03/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9B%B8%E5%85%B3/%E6%A1%86%E6%9E%B6%E8%AF%AD%E8%A8%80%E7%9B%B8%E5%85%B3/%E5%89%8D%E7%AB%AF/vue/Pinia/Pinia/"/>
    <id>https://bangwu2001.github.io/2025/05/03/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9B%B8%E5%85%B3/%E6%A1%86%E6%9E%B6%E8%AF%AD%E8%A8%80%E7%9B%B8%E5%85%B3/%E5%89%8D%E7%AB%AF/vue/Pinia/Pinia/</id>
    <published>2025-05-03T01:48:42.000Z</published>
    <updated>2025-05-03T01:36:19.434Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Pinia"><a href="#Pinia" class="headerlink" title="Pinia"></a>Pinia</h1><p><code>Pinia</code>是<code>Vue</code>专属的最新状态管理库，是<code>vuex</code>状态管理工具的替代品</p><p><a href="https://pinia.vuejs.org/zh/introduction.html">Pinia官网</a></p><p><strong>Pinia的特点</strong></p><ul><li>提供更加简单的<code>API</code>，去掉了<code>mutations</code></li><li>提供符合组合式风格的<code>API</code></li><li>去掉了<code>modules</code>的概念，每一个<code>store</code>都是一个独立的模块</li><li>搭配<code>TypeScript</code>一起使用提供可靠的类型推断</li><li>三大核心概念：<code>state</code>、<code>getter</code>、<code>action</code>，<code>action</code>既支持同步，也支持异步</li></ul><p><strong>安装pinia</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install pinia</span><br></pre></td></tr></table></figure><p><strong>具体使用步骤</strong></p><p><a href="https://pinia.vuejs.org/zh/core-concepts/">参考官方文档</a>，了解如何定义<code>store</code>、如何使用<code>store</code>，以及如何从<code>store</code>中进行解构</p><p><strong>实例</strong></p><p>在<code>main.js</code>中创建<code>pinia</code>对象，并绑定到<code>vue</code>实例</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; createPinia &#125; <span class="keyword">from</span> <span class="string">&#x27;pinia&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; createApp &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">App</span> <span class="keyword">from</span> <span class="string">&#x27;./App.vue&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> pinia = <span class="title function_">createPinia</span>()</span><br><span class="line"><span class="title function_">createApp</span>(<span class="title class_">App</span>).<span class="title function_">use</span>(pinia).<span class="title function_">mount</span>(<span class="string">&#x27;#app&#x27;</span>)</span><br></pre></td></tr></table></figure><p>新建<code>src/stores/counte.js</code>，在其中定义<code>store</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; defineStore &#125; <span class="keyword">from</span> <span class="string">&#x27;pinia&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; computed &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; ref &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span>;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> useCounterStore = <span class="title function_">defineStore</span>(<span class="string">&quot;counte&quot;</span>,<span class="function">()=&gt;</span>&#123;</span><br><span class="line">  <span class="comment">//ref()就是state属性</span></span><br><span class="line">  <span class="keyword">const</span> count = <span class="title function_">ref</span>(<span class="number">0</span>)</span><br><span class="line">  <span class="comment">//computed()就是getters</span></span><br><span class="line">  <span class="keyword">const</span> doubleCount = <span class="title function_">computed</span>(<span class="function">()=&gt;</span>count.<span class="property">value</span>*<span class="number">2</span>)</span><br><span class="line">  <span class="comment">//function()就是actions</span></span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">increment</span>(<span class="params"></span>)&#123;</span><br><span class="line">    count.<span class="property">value</span>+=<span class="number">1</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> &#123;count,doubleCount,increment&#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>在<code>App.vue</code>中使用<code>store</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123; useCounterStore &#125; from &#x27;@/stores/counter&#x27;;</span><br><span class="line">import &#123; storeToRefs &#125; from &#x27;pinia&#x27;;</span><br><span class="line">const store = useCounterStore()</span><br><span class="line">//从 store 中提取属性时保持其响应性，需要使用 storeToRefs()</span><br><span class="line">const &#123; count,doubleCount &#125; = storeToRefs(store)</span><br><span class="line">//可以直接从 store 中解构 action，因为它们也被绑定到 store 上</span><br><span class="line">const &#123;increment&#125; = store</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div&gt;count:&#123;&#123; count &#125;&#125;&lt;/div&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">        &lt;button @click=&quot;increment&quot;&gt;count++&lt;/button&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div&gt;&#123;&#123; doubleCount &#125;&#125;&lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Pinia&quot;&gt;&lt;a href=&quot;#Pinia&quot; class=&quot;headerlink&quot; title=&quot;Pinia&quot;&gt;&lt;/a&gt;Pinia&lt;/h1&gt;&lt;p&gt;&lt;code&gt;Pinia&lt;/code&gt;是&lt;code&gt;Vue&lt;/code&gt;专属的最新状态管理库，是&lt;code&gt;vuex&lt;</summary>
      
    
    
    
    <category term="vue" scheme="https://bangwu2001.github.io/categories/vue/"/>
    
    
    <category term="前端" scheme="https://bangwu2001.github.io/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>nvm</title>
    <link href="https://bangwu2001.github.io/2025/05/03/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9B%B8%E5%85%B3/%E6%A1%86%E6%9E%B6%E8%AF%AD%E8%A8%80%E7%9B%B8%E5%85%B3/%E5%89%8D%E7%AB%AF/vue/nvm/nvm/"/>
    <id>https://bangwu2001.github.io/2025/05/03/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9B%B8%E5%85%B3/%E6%A1%86%E6%9E%B6%E8%AF%AD%E8%A8%80%E7%9B%B8%E5%85%B3/%E5%89%8D%E7%AB%AF/vue/nvm/nvm/</id>
    <published>2025-05-03T01:48:42.000Z</published>
    <updated>2025-05-03T01:35:57.773Z</updated>
    
    <content type="html"><![CDATA[<h1 id="nvm"><a href="#nvm" class="headerlink" title="nvm"></a>nvm</h1><p><code>nvm(Node Version Manager)</code>，是一个用于管理多个<code>Node.js</code>版本的命令行工具。它允许用户在同一台机器上安装和切换不同版本的<code>Node.js</code>，非常适合开发者需要在不同的项目中使用不同版本的<code>Node.js</code>环境</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><a href="https://nvm.uihtm.com/doc/download-nvm.html">nvm官网下载地址</a></p><p>下载<code>nvm-setup.zip</code>文件，解压找到<code>nvm-setup.exe</code>文件，然后按照正常软件安装流程进行安装即可</p><p><strong>配置NodeJS</strong></p><p>在<code>nvm</code>安装目录下，找到<code>setting.txt</code>文件，在其中设置<code>node</code>和<code>npm</code>的国内镜像下载地址</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">node<span class="built_in">_</span>mirror: https://npmmirror.com/mirrors/node/</span><br><span class="line">npm<span class="built_in">_</span>mirror: https://npmmirror.com/mirrors/npm/</span><br></pre></td></tr></table></figure><p><img src="/2025/05/03/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9B%B8%E5%85%B3/%E6%A1%86%E6%9E%B6%E8%AF%AD%E8%A8%80%E7%9B%B8%E5%85%B3/%E5%89%8D%E7%AB%AF/vue/nvm/nvm/image-20250429105031355.png" alt="image-20250429105031355"></p><p><strong>校验是否安装成功</strong></p><p><img src="/2025/05/03/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9B%B8%E5%85%B3/%E6%A1%86%E6%9E%B6%E8%AF%AD%E8%A8%80%E7%9B%B8%E5%85%B3/%E5%89%8D%E7%AB%AF/vue/nvm/nvm/image-20250429105107872.png" alt="image-20250429105107872"></p><h2 id="管理NodeJS常用命令"><a href="#管理NodeJS常用命令" class="headerlink" title="管理NodeJS常用命令"></a>管理NodeJS常用命令</h2><p><strong>列出当前已经安装的node版本</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvm ls</span><br></pre></td></tr></table></figure><p><strong>列出可用的node版本</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvm ls available</span><br></pre></td></tr></table></figure><p><strong>安装指定的node版本</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvm install 版本号</span><br></pre></td></tr></table></figure><p><strong>设置使用的node版本</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvm use 版本号</span><br></pre></td></tr></table></figure><p><strong>查看当前node版本</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">node -v</span><br></pre></td></tr></table></figure><p><strong>查看当前npm版本</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm -v</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;nvm&quot;&gt;&lt;a href=&quot;#nvm&quot; class=&quot;headerlink&quot; title=&quot;nvm&quot;&gt;&lt;/a&gt;nvm&lt;/h1&gt;&lt;p&gt;&lt;code&gt;nvm(Node Version Manager)&lt;/code&gt;，是一个用于管理多个&lt;code&gt;Node.js&lt;/cod</summary>
      
    
    
    
    <category term="vue" scheme="https://bangwu2001.github.io/categories/vue/"/>
    
    
    <category term="前端" scheme="https://bangwu2001.github.io/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>vue入门05</title>
    <link href="https://bangwu2001.github.io/2025/04/27/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9B%B8%E5%85%B3/%E6%A1%86%E6%9E%B6%E8%AF%AD%E8%A8%80%E7%9B%B8%E5%85%B3/%E5%89%8D%E7%AB%AF/vue/05%20vue%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A805/vue05/"/>
    <id>https://bangwu2001.github.io/2025/04/27/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9B%B8%E5%85%B3/%E6%A1%86%E6%9E%B6%E8%AF%AD%E8%A8%80%E7%9B%B8%E5%85%B3/%E5%89%8D%E7%AB%AF/vue/05%20vue%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A805/vue05/</id>
    <published>2025-04-27T15:18:42.000Z</published>
    <updated>2025-04-27T15:37:37.416Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Vue05"><a href="#Vue05" class="headerlink" title="Vue05"></a>Vue05</h1><h2 id="自定义指令"><a href="#自定义指令" class="headerlink" title="自定义指令"></a>自定义指令</h2><p><code>v-for</code>、<code>v-model</code>等指令属于内置指令，每个指令都有自己独立的功能。</p><p>开发者自己定义指令，封装一些<code>dom</code>操作，扩展额外的功能</p><h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a><strong>语法</strong></h3><ul><li><p>全局注册，在<code>main.js</code>中编写，在所有组件中均可使用</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Vue.directive(指令名,&#123;</span><br><span class="line">inserted(el)&#123; //inserted指不同的生命周期，当指令绑定的元素被添加到页面的时候触发</span><br><span class="line">//可以对el标签，扩展额外的功能，el就是指令绑定的元素</span><br><span class="line">xxxxx</span><br><span class="line">&#125; </span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li><li><p>局部注册，只能在当前组件中使用</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">directives:&#123;</span><br><span class="line">指令名:&#123;</span><br><span class="line">inserted:(el)&#123;</span><br><span class="line">//可以对el标签，扩展额外的功能</span><br><span class="line">xxxxx</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><p>自定义指令使用：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">直接在对应标签上添加: v-指令名</span><br><span class="line">比如: &lt;input v-指令名 type=&quot;text&quot;/&gt;</span><br></pre></td></tr></table></figure><p><strong>实例</strong></p><p>自定义指令<code>v-focus</code>，使得页面某些元素自动聚焦</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;input type=&quot;text&quot; v-focus&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  directives:&#123;</span><br><span class="line">    focus:&#123;</span><br><span class="line">      inserted(el)&#123;</span><br><span class="line">        el.focus()</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line"></span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h3 id="自定义指令—指令的值"><a href="#自定义指令—指令的值" class="headerlink" title="自定义指令—指令的值"></a>自定义指令—指令的值</h3><p>在绑定指令时，可以通过<code>等号</code>的形式为指令绑定具体的参数值</p><p>可以通过<code>binding.value</code>拿到指令值，指令值修改会触发<code>update</code>函数</p><p><strong>实例</strong></p><p>自定一个指令<code>color</code>，通过传入不同的颜色，给标签设置文字颜色</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;span v-color=&quot;color2&quot;&gt;we are family&lt;/span&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">export default &#123;</span><br><span class="line">  data()&#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      &quot;color1&quot;:&quot;red&quot;,</span><br><span class="line">      &quot;color2&quot;:&quot;blue&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  ,directives:&#123;</span><br><span class="line">    color:&#123;</span><br><span class="line">      inserted(el,binding)&#123;</span><br><span class="line">        el.style.color = binding.value;</span><br><span class="line">      &#125;,update(el,binding)&#123;</span><br><span class="line">        console.log(&quot;指令的值发生了修改&quot;);</span><br><span class="line">        el.style.color = binding.value;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line"></span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h2 id="插槽"><a href="#插槽" class="headerlink" title="插槽"></a>插槽</h2><h3 id="插槽介绍"><a href="#插槽介绍" class="headerlink" title="插槽介绍"></a>插槽介绍</h3><p>插槽能够让组件内部一些结果支持自定义</p><p>背景需求：</p><p>如下图所示，不同的页面显示的对话框，基本是一样的，只是组件的内容部分不一样，这样将对话框封装成一个组件，同时又希望组件内容部分不会写死，使用的时候自定义，就需要用到插槽</p><p><img src="/2025/04/27/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9B%B8%E5%85%B3/%E6%A1%86%E6%9E%B6%E8%AF%AD%E8%A8%80%E7%9B%B8%E5%85%B3/%E5%89%8D%E7%AB%AF/vue/05%20vue%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A805/vue05/image-20250417103121327.png" alt="image-20250417103121327"></p><p>插槽基本语法：</p><ol><li>在组件内将需要定制的结构部分，改用<code>&lt;slot&gt;&lt;/slot&gt;</code>占位</li><li>使用组件时，利用传入的内容替换<code>slot</code></li></ol><p><strong>实例</strong></p><p><code>DialogPage</code>代码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;div class=&quot;modal&quot;&gt;</span><br><span class="line">      &lt;div class=&quot;modal-content&quot;&gt;</span><br><span class="line">        &lt;span class=&quot;close-button&quot;&gt;×&lt;/span&gt;</span><br><span class="line">        &lt;h2&gt;友情提示&lt;/h2&gt;</span><br><span class="line">        &lt;p&gt;&lt;slot&gt;&lt;/slot&gt;&lt;/p&gt;</span><br><span class="line">        &lt;div class=&quot;modal-actions&quot;&gt;</span><br><span class="line">          &lt;button class=&quot;cancel-button&quot;&gt;取消&lt;/button&gt;</span><br><span class="line">          &lt;button class=&quot;confirm-button&quot;&gt;确认&lt;/button&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line">body &#123;</span><br><span class="line">  font-family: Arial, sans-serif;</span><br><span class="line">  background-color: #f0f0f0;</span><br><span class="line">  display: flex;</span><br><span class="line">  justify-content: center;</span><br><span class="line">  align-items: center;</span><br><span class="line">  height: 100vh;</span><br><span class="line">  margin: 0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.modal &#123;</span><br><span class="line">  background-color: white;</span><br><span class="line">  border-radius: 5px;</span><br><span class="line">  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.3);</span><br><span class="line">  width: 300px;</span><br><span class="line">  padding: 20px;</span><br><span class="line">  text-align: center;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.modal-content &#123;</span><br><span class="line">  position: relative;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.close-button &#123;</span><br><span class="line">  position: absolute;</span><br><span class="line">  top: 10px;</span><br><span class="line">  right: 10px;</span><br><span class="line">  font-size: 20px;</span><br><span class="line">  cursor: pointer;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">h2 &#123;</span><br><span class="line">  margin-bottom: 10px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">p &#123;</span><br><span class="line">  margin-bottom: 20px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.modal-actions &#123;</span><br><span class="line">  display: flex;</span><br><span class="line">  justify-content: center;</span><br><span class="line">  gap: 10px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">button &#123;</span><br><span class="line">  padding: 10px 20px;</span><br><span class="line">  border: none;</span><br><span class="line">  border-radius: 5px;</span><br><span class="line">  cursor: pointer;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.cancel-button &#123;</span><br><span class="line">  background-color: #f0f0f0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.confirm-button &#123;</span><br><span class="line">  background-color: #007bff;</span><br><span class="line">  color: white;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p><code>App.vue</code>代码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;DialogPage&gt;你确定要进行删除操作吗?&lt;/DialogPage&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import DialogPage from &#x27;./components/DialogPage.vue&#x27;;</span><br><span class="line"></span><br><span class="line">export default &#123;</span><br><span class="line">  components:&#123;</span><br><span class="line">    DialogPage</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line"></span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h3 id="插槽-默认值"><a href="#插槽-默认值" class="headerlink" title="插槽 - 默认值"></a>插槽 - 默认值</h3><p>在封装组件时，可以为预留的<code>&lt;slot&gt;&lt;/slot&gt;</code>插槽提供默认的内容</p><p>语法：在<code>&lt;slot&gt;&lt;/slot&gt;</code>标签内，防止内容，作为默认显示内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">例如:</span><br><span class="line">&lt;slot&gt;默认内容&lt;/slot&gt;</span><br></pre></td></tr></table></figure><h3 id="插槽-具名插槽"><a href="#插槽-具名插槽" class="headerlink" title="插槽 - 具名插槽"></a>插槽 - 具名插槽</h3><p>当一个组件中存在多处结构都需要外部传入标签，进行定制，而默认插槽只有一个定制位置，这时候就需要用到具名插槽</p><p><strong>具名插槽语法</strong></p><ol><li>多个<code>slot</code>用不同的<code>name</code>属性进行区分</li><li><code>template</code>配合<code>v-slot:名字</code>来分发对应标签</li><li><code>v-slot:插槽名</code>可以简化为<code>#插槽名</code></li></ol><p><strong>代码示例</strong></p><p><code>DialogPage.vue</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;div class=&quot;modal&quot;&gt;</span><br><span class="line">      &lt;div class=&quot;modal-content&quot;&gt;</span><br><span class="line">        &lt;span class=&quot;close-button&quot;&gt;×&lt;/span&gt;</span><br><span class="line">        &lt;h2&gt;&lt;slot name=&quot;header&quot;&gt;友情提示&lt;/slot&gt;&lt;/h2&gt;</span><br><span class="line">        &lt;p&gt;&lt;slot name=&quot;content&quot;&gt;默认显示内容&lt;/slot&gt;&lt;/p&gt;</span><br><span class="line">        &lt;div class=&quot;modal-actions&quot;&gt;</span><br><span class="line">          &lt;button class=&quot;cancel-button&quot;&gt;&lt;slot name=&quot;cancelBtn&quot;&gt;取消&lt;/slot&gt;&lt;/button&gt;</span><br><span class="line">          &lt;button class=&quot;confirm-button&quot;&gt;&lt;slot name=&quot;checkBtn&quot;&gt;确认&lt;/slot&gt;&lt;/button&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line">body &#123;</span><br><span class="line">  font-family: Arial, sans-serif;</span><br><span class="line">  background-color: #f0f0f0;</span><br><span class="line">  display: flex;</span><br><span class="line">  justify-content: center;</span><br><span class="line">  align-items: center;</span><br><span class="line">  height: 100vh;</span><br><span class="line">  margin: 0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.modal &#123;</span><br><span class="line">  background-color: white;</span><br><span class="line">  border-radius: 5px;</span><br><span class="line">  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.3);</span><br><span class="line">  width: 300px;</span><br><span class="line">  padding: 20px;</span><br><span class="line">  text-align: center;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.modal-content &#123;</span><br><span class="line">  position: relative;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.close-button &#123;</span><br><span class="line">  position: absolute;</span><br><span class="line">  top: 10px;</span><br><span class="line">  right: 10px;</span><br><span class="line">  font-size: 20px;</span><br><span class="line">  cursor: pointer;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">h2 &#123;</span><br><span class="line">  margin-bottom: 10px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">p &#123;</span><br><span class="line">  margin-bottom: 20px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.modal-actions &#123;</span><br><span class="line">  display: flex;</span><br><span class="line">  justify-content: center;</span><br><span class="line">  gap: 10px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">button &#123;</span><br><span class="line">  padding: 10px 20px;</span><br><span class="line">  border: none;</span><br><span class="line">  border-radius: 5px;</span><br><span class="line">  cursor: pointer;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.cancel-button &#123;</span><br><span class="line">  background-color: #f0f0f0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.confirm-button &#123;</span><br><span class="line">  background-color: #007bff;</span><br><span class="line">  color: white;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p><code>App.vue</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;DialogPage&gt;</span><br><span class="line">      &lt;template v-slot:header&gt;头部&lt;/template&gt;</span><br><span class="line">      &lt;template v-slot:content&gt;内容部分&lt;/template&gt;</span><br><span class="line">      &lt;template v-slot:cancelBtn&gt;取消按钮&lt;/template&gt;</span><br><span class="line">      &lt;template v-slot:checkBtn&gt;确认按钮&lt;/template&gt;</span><br><span class="line">    &lt;/DialogPage&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import DialogPage from &#x27;./components/DialogPage.vue&#x27;;</span><br><span class="line"></span><br><span class="line">export default &#123;</span><br><span class="line">  components:&#123;</span><br><span class="line">    DialogPage</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line"></span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h3 id="作用域插槽"><a href="#作用域插槽" class="headerlink" title="作用域插槽"></a>作用域插槽</h3><p>定义<code>slot</code>的同时，是可以传值的，给插槽上绑定数据，将来在使用组件时可以直接使用</p><p>比如如下表格，不同形式最后操作一列可能是“删除”或者“查看”,这时候可以用具名插槽赋予不同值，但是删除或者查看时，需要当前项的<code>id</code>来获取对应的数据，</p><p>所以这时候就需要通过作用域插槽绑定对应值，便于后续使用</p><p><img src="/2025/04/27/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9B%B8%E5%85%B3/%E6%A1%86%E6%9E%B6%E8%AF%AD%E8%A8%80%E7%9B%B8%E5%85%B3/%E5%89%8D%E7%AB%AF/vue/05%20vue%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A805/vue05/image-20250417110320087.png" alt="image-20250417110320087" style="zoom:50%;"></p><p>作用域插槽使用步骤：</p><ol><li>给<code>slot</code>加标签，以添加属性值的方式进行传值</li><li>所有添加的属性，都会被集中到一个对象中</li><li>在<code>template</code>中，通过<code>#插槽名=obj</code>来进行接收，默认插槽写成<code>#default=&quot;obj&quot;</code></li><li>后续可以通过<code>obj</code>来对对应属性值进行操作</li></ol><p><code>TablePage.vue</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;body&gt;</span><br><span class="line">      &lt;table&gt;</span><br><span class="line">        &lt;thead&gt;</span><br><span class="line">          &lt;tr&gt;</span><br><span class="line">            &lt;th&gt;序号&lt;/th&gt;</span><br><span class="line">            &lt;th&gt;姓名&lt;/th&gt;</span><br><span class="line">            &lt;th&gt;年纪&lt;/th&gt;</span><br><span class="line">            &lt;th&gt;操作&lt;/th&gt;</span><br><span class="line">          &lt;/tr&gt;</span><br><span class="line">        &lt;/thead&gt;</span><br><span class="line">        &lt;tbody&gt;</span><br><span class="line">          &lt;tr v-for=&quot;(item,index) in data&quot; :key=&quot;item.id&quot;&gt;</span><br><span class="line">            &lt;td&gt;&#123;&#123; index+1 &#125;&#125;&lt;/td&gt;</span><br><span class="line">            &lt;td&gt;&#123;&#123; item.name &#125;&#125;&lt;/td&gt;</span><br><span class="line">            &lt;td&gt;&#123;&#123; item.age &#125;&#125;&lt;/td&gt;</span><br><span class="line">            &lt;td&gt;&lt;slot :row=&quot;item&quot;&gt;&lt;/slot&gt;&lt;/td&gt;</span><br><span class="line">          &lt;/tr&gt;</span><br><span class="line">        &lt;/tbody&gt;</span><br><span class="line">      &lt;/table&gt;</span><br><span class="line">    &lt;/body&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">    props:&#123;</span><br><span class="line">        data:Array</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line">body &#123;</span><br><span class="line">  font-family: Arial, sans-serif;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">table &#123;</span><br><span class="line">  margin:30px auto;</span><br><span class="line">  width: 60%;</span><br><span class="line">  border-collapse: collapse;</span><br><span class="line">  margin-top: 20px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">th,</span><br><span class="line">td &#123;</span><br><span class="line">  border: 1px solid #ddd;</span><br><span class="line">  padding: 8px;</span><br><span class="line">  text-align: center;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">th &#123;</span><br><span class="line">  background-color: #007bff;</span><br><span class="line">  color: white;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">button &#123;</span><br><span class="line">  padding: 5px 10px;</span><br><span class="line">  background-color: #f8f9fa;</span><br><span class="line">  border: 1px solid #ddd;</span><br><span class="line">  cursor: pointer;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">button:hover &#123;</span><br><span class="line">  background-color: #e9ecef;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p><code>App.vue</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;TablePage :data=&quot;list&quot;&gt;</span><br><span class="line">      &lt;template #default=&quot;obj&quot;&gt;</span><br><span class="line">        &lt;button @click=&quot;del(obj.row.id)&quot;&gt;删除&lt;/button&gt;</span><br><span class="line">      &lt;/template&gt;</span><br><span class="line">    &lt;/TablePage&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import TablePage from &#x27;./components/TablePage.vue&#x27;;</span><br><span class="line">export default &#123;</span><br><span class="line">  components:&#123;</span><br><span class="line">    TablePage</span><br><span class="line">  &#125;,</span><br><span class="line">  data()&#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      list:[</span><br><span class="line">        &#123;id:1,name:&quot;赵晓云&quot;,age:18&#125;,</span><br><span class="line">        &#123;id:2,name:&quot;刘蓓蓓&quot;,age:19&#125;,</span><br><span class="line">        &#123;id:3,name:&quot;姜晓瑞泰&quot;,age:17&#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods:&#123;</span><br><span class="line">    del(id)&#123;</span><br><span class="line">      this.list = this.list.filter((item)=&gt;item.id!=id)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line"></span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h2 id="路由"><a href="#路由" class="headerlink" title="路由"></a>路由</h2><h3 id="单页应用程序"><a href="#单页应用程序" class="headerlink" title="单页应用程序"></a>单页应用程序</h3><p>单页应用程序<code>SPA（Single Page Application）</code>，所有的功能都在一个<code>html</code>页面上实现</p><p><strong>单页面应用 vs 多页面应用</strong></p><p> <img src="/2025/04/27/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9B%B8%E5%85%B3/%E6%A1%86%E6%9E%B6%E8%AF%AD%E8%A8%80%E7%9B%B8%E5%85%B3/%E5%89%8D%E7%AB%AF/vue/05%20vue%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A805/vue05/image-20250427092819298.png" alt="image-20250427092819298"> </p><ul><li>单网页应用适用场景<ul><li>系统类网站/内部网站/文档类网站/移动端站点</li></ul></li><li>多网页应用适用场景<ul><li>公司官网/电商类网站（这两类网站需要首屏加载快）</li></ul></li></ul><p>单页应用程序之所以开发效率高、性能高、用户体验好，最大的原因在于：<strong>页面按需更新</strong></p><p>对于按需更新，首先需要明确：<strong>访问路径</strong> 和<strong>组件</strong>的对应关系</p><h3 id="路由-1"><a href="#路由-1" class="headerlink" title="路由"></a>路由</h3><p>路由本质是一种映射关系</p><p><code>Vue</code>中的路由：路径和组件之间的映射关系</p><h3 id="VueRouter"><a href="#VueRouter" class="headerlink" title="VueRouter"></a>VueRouter</h3><h4 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h4><p><code>VueRouter</code>是<code>Vue</code>官方的一个路由插件，是一个第三方包，当修改地址栏路径时，会切换显示匹配的组件</p><p>官网：<a href="https://v3.router.vuejs.org/zh/">VueRouter</a></p><h4 id="VueRouter的使用"><a href="#VueRouter的使用" class="headerlink" title="VueRouter的使用"></a>VueRouter的使用</h4><p>使用步骤：</p><p>以下五部代码在<code>main.js</code>中编写</p><p><strong>①下载</strong></p><p>下载<code>VueRouter</code>模块到当前工程，注意<code>vue2</code>对应的版本是<code>3.x</code>，本实例中我们安装版本<code>3.6.5</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i vue-router@3.6.5</span><br></pre></td></tr></table></figure><p><strong>②引入</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">import VueRouter from &#x27;vue-router&#x27;</span><br></pre></td></tr></table></figure><p><strong>③安装注册</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Vue.use(VueRouter)</span><br></pre></td></tr></table></figure><p><strong>④创建路由对象</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">const router = new VueRouter() //参数为相应的路由规则</span><br><span class="line"></span><br><span class="line">//配置路由规则,组件一般建议放在views目录下</span><br><span class="line">const router = new VueRouter(&#123;</span><br><span class="line">routes:[</span><br><span class="line">&#123;path:路径名称,componet:组件名称&#125;,</span><br><span class="line">...</span><br><span class="line">]</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p><strong>⑤注入</strong></p><p>将路由对象注入到<code>vue</code>实例，建立关联</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">new Vue(&#123;</span><br><span class="line">render:h=&gt;h(App),</span><br><span class="line">router</span><br><span class="line">&#125;).$mount(&#x27;#app&#x27;)</span><br></pre></td></tr></table></figure><p>完成上面五步之后，在页面地址栏就会出现<code>xxxx/#/</code></p><p><strong>⑥配置导航以及路由出口</strong></p><p>路由出口即路径匹配的组件显示的位置，<code>vue</code>提供标签<code>&lt;router-view&gt;&lt;/router-view&gt;</code>，路由匹配到的组件最终将渲染到这个标签所在的位置</p><h4 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h4><p><code>main.js</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">import Vue from &#x27;vue&#x27;</span><br><span class="line">import App from &#x27;./App.vue&#x27;</span><br><span class="line">//1.导包</span><br><span class="line">import VueRouter</span><br><span class="line"> from &#x27;vue-router&#x27;</span><br><span class="line">Vue.config.productionTip = false</span><br><span class="line"></span><br><span class="line">//2.注册</span><br><span class="line">Vue.use(VueRouter)</span><br><span class="line"></span><br><span class="line">//3.创建路由对象</span><br><span class="line">import FindMusic from &#x27;./views/FindMusic.vue&#x27;</span><br><span class="line">import MyMusic from &#x27;./views/MyMusic.vue&#x27;</span><br><span class="line">import MyFriend from &#x27;./views/MyFriend.vue&#x27;</span><br><span class="line">const router = new VueRouter(</span><br><span class="line">  &#123;</span><br><span class="line">    routes:[</span><br><span class="line">      &#123;path:&quot;/find&quot;,component:FindMusic&#125;,</span><br><span class="line">      &#123;path:&quot;/my&quot;,component:MyMusic&#125;,</span><br><span class="line">      &#123;path:&quot;/friend&quot;,component:MyFriend&#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">new Vue(&#123;</span><br><span class="line">  render: h =&gt; h(App),</span><br><span class="line">  router</span><br><span class="line">&#125;).$mount(&#x27;#app&#x27;)</span><br></pre></td></tr></table></figure><p><code>App.vue</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;div class=&quot;tab-container&quot;&gt;</span><br><span class="line">      &lt;div class=&quot;tab active&quot;&gt;&lt;a href=&quot;#/find&quot;&gt;发现音乐&lt;/a&gt;&lt;/div&gt;</span><br><span class="line">      &lt;div class=&quot;tab&quot;&gt;&lt;a href=&quot;#/my&quot;&gt;我的音乐&lt;/a&gt;&lt;/div&gt;</span><br><span class="line">      &lt;div class=&quot;tab&quot;&gt;&lt;a href=&quot;#/friend&quot;&gt;朋友&lt;/a&gt;&lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div class=&quot;tab-content&quot;&gt;</span><br><span class="line">      &lt;router-view&gt;&lt;/router-view&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">  </span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line">    .tab-container &#123;</span><br><span class="line">        display: flex;</span><br><span class="line">        background-color: #333;</span><br><span class="line">        width: 60%;</span><br><span class="line">        margin:30px auto;</span><br><span class="line">    &#125;</span><br><span class="line">    .tab &#123;</span><br><span class="line">        flex: 1;</span><br><span class="line">        padding: 10px;</span><br><span class="line">        text-align: center;</span><br><span class="line">        color: white;</span><br><span class="line">        cursor: pointer;</span><br><span class="line">    &#125;</span><br><span class="line">    .active &#123;</span><br><span class="line">        background-color: #444;</span><br><span class="line">    &#125;</span><br><span class="line">    a &#123;</span><br><span class="line">    all: unset;</span><br><span class="line">    &#125;</span><br><span class="line">    .tab-content &#123;</span><br><span class="line">      width: 60%;</span><br><span class="line">      font-size: 50px;</span><br><span class="line">      font-weight: 700;</span><br><span class="line">      color:red;</span><br><span class="line">      margin: 20px auto;</span><br><span class="line">      text-align: center;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p><code>FindMusic.vue</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;p&gt;发现音乐&lt;/p&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line"></span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p><code>MyMusic.vue</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;p&gt;我的音乐&lt;/p&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line"></span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p><code>MyFriend.vue</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;p&gt;我的朋友列表&lt;/p&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line"></span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p><strong>效果</strong></p><p><img src="/2025/04/27/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9B%B8%E5%85%B3/%E6%A1%86%E6%9E%B6%E8%AF%AD%E8%A8%80%E7%9B%B8%E5%85%B3/%E5%89%8D%E7%AB%AF/vue/05%20vue%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A805/vue05/image-20250427155231632.png" alt="image-20250427155231632"></p><h3 id="组件分类及其存放位置"><a href="#组件分类及其存放位置" class="headerlink" title="组件分类及其存放位置"></a>组件分类及其存放位置</h3><p>在<code>vue</code>项目中，一部分组件放置在<code>src/views</code>目录下，另一部分组件放置在<code>src/components</code>目录下</p><p>其实<code>.vue</code>文件可以分为两类，<strong>页面组件</strong>和<strong>复用组件</strong></p><p>页面组件一般需要配合路由去切换使用的，所以页面组件一般放置在<code>src/views</code>目录下</p><p>复用组件一般在多个不同页面中复用，这类组件一般放置在<code>src/components</code>目录下</p><p>其实本质都是<code>.vue</code>文件，无任何区别，之所以分开位置存放，是为了开发方便以及后续便于维护</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Vue05&quot;&gt;&lt;a href=&quot;#Vue05&quot; class=&quot;headerlink&quot; title=&quot;Vue05&quot;&gt;&lt;/a&gt;Vue05&lt;/h1&gt;&lt;h2 id=&quot;自定义指令&quot;&gt;&lt;a href=&quot;#自定义指令&quot; class=&quot;headerlink&quot; title=&quot;自定义</summary>
      
    
    
    
    <category term="vue" scheme="https://bangwu2001.github.io/categories/vue/"/>
    
    
    <category term="前端" scheme="https://bangwu2001.github.io/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>vue入门04</title>
    <link href="https://bangwu2001.github.io/2025/04/27/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9B%B8%E5%85%B3/%E6%A1%86%E6%9E%B6%E8%AF%AD%E8%A8%80%E7%9B%B8%E5%85%B3/%E5%89%8D%E7%AB%AF/vue/04%20vue%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A804/vue%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A804/"/>
    <id>https://bangwu2001.github.io/2025/04/27/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9B%B8%E5%85%B3/%E6%A1%86%E6%9E%B6%E8%AF%AD%E8%A8%80%E7%9B%B8%E5%85%B3/%E5%89%8D%E7%AB%AF/vue/04%20vue%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A804/vue%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A804/</id>
    <published>2025-04-27T15:18:42.000Z</published>
    <updated>2025-04-27T15:37:23.469Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Vue快速入门04"><a href="#Vue快速入门04" class="headerlink" title="Vue快速入门04"></a>Vue快速入门04</h1><h2 id="组件组成三个部分"><a href="#组件组成三个部分" class="headerlink" title="组件组成三个部分"></a>组件组成三个部分</h2><p>组件的三大组成部分：</p><ul><li><p>结构<code>&lt;template&gt;</code></p><ul><li>只能有一个根元素<code>&lt;div&gt;</code></li></ul></li><li><p>样式<code>&lt;style&gt;</code></p><ul><li>全局样式（默认）：影响所有组件</li><li>局部样式：<code>scoped</code>下样式，只用于当前组件 </li></ul></li><li>逻辑<code>&lt;script&gt;</code><ul><li><code>el</code>根实例独有，<code>data</code>是一个函数，其他配置项与引入核心库开发一样的</li></ul></li></ul><h3 id="样式—scoped"><a href="#样式—scoped" class="headerlink" title="样式—scoped"></a>样式—scoped</h3><p><strong>默认情况：</strong>写在组件中的样式会全局生效，因此很容易造成多个组件之间的样式冲突问题</p><ul><li><p>全局样式：默认组件中的样式会作用到全局</p></li><li><p>局部样式：可以给组件加上<code>scoped</code>属性，可以让样式只作用于当前组件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;style scoped&gt;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure></li></ul><p>为避免不同组件样式冲突，建议给每个组件加上<code>scoped</code></p><p><strong>scoped原理</strong></p><ol><li>给当前组件内所有的标签都会添加<code>data-v-hash值</code>的属性</li><li><code>css</code>选择器都被添加<code>[data-v-hash值]</code>的属性选择器</li></ol><p>最终导致必须是当前组件的元素，最会有这个自定义属性，才会被这个样式作用到</p><p><img src="/2025/04/27/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9B%B8%E5%85%B3/%E6%A1%86%E6%9E%B6%E8%AF%AD%E8%A8%80%E7%9B%B8%E5%85%B3/%E5%89%8D%E7%AB%AF/vue/04%20vue%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A804/vue%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A804/image-20250414222419080.png" alt="image-20250414222419080"></p><h3 id="逻辑—data是一个函数"><a href="#逻辑—data是一个函数" class="headerlink" title="逻辑—data是一个函数"></a>逻辑—data是一个函数</h3><p>一个组件的<code>data</code>选项必须是一个函数，这样的好处是：保证每个组件实例，维护独立的一份数据对象</p><p>每次创建新的组件实例，都会重新执行一次<code>data</code>函数，得到一个新对象</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">export default&#123;</span><br><span class="line">        data()&#123;</span><br><span class="line">            return&#123;</span><br><span class="line">                属性名:属性值</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><strong>实例</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;div class=&quot;button-container&quot;&gt;</span><br><span class="line">      &lt;div class=&quot;button&quot; @click=&quot;number--&quot;&gt;-&lt;/div&gt;</span><br><span class="line">      &lt;div class=&quot;number&quot;&gt;&#123;&#123; number &#125;&#125;&lt;/div&gt;</span><br><span class="line">      &lt;div class=&quot;button&quot; @click=&quot;number++&quot;&gt;+&lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  data()&#123;</span><br><span class="line">    return&#123;</span><br><span class="line">      number:100</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">  .button-container &#123;</span><br><span class="line">    display: flex;</span><br><span class="line">    align-items: center;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .button &#123;</span><br><span class="line">    width: 40px;</span><br><span class="line">    height: 40px;</span><br><span class="line">    border: 1px solid #ccc;</span><br><span class="line">    display: flex;</span><br><span class="line">    justify-content: center;</span><br><span class="line">    align-items: center;</span><br><span class="line">    margin: 0 5px;</span><br><span class="line">    cursor: pointer;</span><br><span class="line">    background-color: #f0f0f0;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .number &#123;</span><br><span class="line">    font-size: 20px;</span><br><span class="line">    margin: 0 10px;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p><img src="/2025/04/27/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9B%B8%E5%85%B3/%E6%A1%86%E6%9E%B6%E8%AF%AD%E8%A8%80%E7%9B%B8%E5%85%B3/%E5%89%8D%E7%AB%AF/vue/04%20vue%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A804/vue%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A804/image-20250414223525856.png" alt="image-20250414223525856"></p><h2 id="组件通信"><a href="#组件通信" class="headerlink" title="组件通信"></a>组件通信</h2><h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><p> 组件通信，指的是 <strong>组件与组件</strong> 之间的<strong>数据传递</strong></p><ul><li>组件的数据是独立的，无法直接访问其他组件的数据</li><li>如果想要使用其他组件的数据，组需要利用组件通信机制</li></ul><h3 id="组件关系及其对应通信方案"><a href="#组件关系及其对应通信方案" class="headerlink" title="组件关系及其对应通信方案"></a>组件关系及其对应通信方案</h3><p>不同组件关系，其组件通信方案也不一样</p><p>组件关系分类：</p><ul><li>父子关系<ul><li>组件间通信方案：<code>props</code>和<code>$emit</code></li></ul></li><li>非父子关系<ul><li>组件间通信方案：<code>provide &amp; inject</code>和<code>eventbus</code></li></ul></li></ul><p>通用的解决方案<code>Vuex</code>，适用于复杂的业务场景</p><h4 id="父子通信"><a href="#父子通信" class="headerlink" title="父子通信"></a>父子通信</h4><p><strong>父组件通过<code>props</code>将数据传递给子组件</strong></p><ol><li>在父组件中给子组件以添加属性的方式传递值</li><li>在子组件中通过<code>props</code>接收数据</li></ol><p><strong>子组件利用<code>$emit</code>通知父组件修改更新</strong></p><ol><li>子组件<code>$emit</code>发送消息·</li><li>父组件中给子组件添加消息监听</li><li>父组件中实现相应的处理函数</li></ol><p><strong>实例</strong></p><p><code>父组件代码</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;div&gt;父组件&lt;/div&gt;</span><br><span class="line">     //父组件对消息监听</span><br><span class="line">    &lt;SonPage :message=&quot;message&quot; @changeMsg=&quot;changeFunc&quot;&gt;&lt;/SonPage&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import SonPage from &#x27;./components/SonPage.vue&#x27;;</span><br><span class="line">export default &#123;</span><br><span class="line">  components:&#123;</span><br><span class="line">    SonPage:SonPage</span><br><span class="line">  &#125;,methods:&#123;</span><br><span class="line">    changeFunc(text)&#123;</span><br><span class="line">      this.message=text</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  data()&#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      message:&quot;该数据来源于父组件&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line"></span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p><code>子组件代码</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;div&gt;子组件接收的数据:&#123;&#123; message &#125;&#125;&lt;/div&gt;</span><br><span class="line">    &lt;button @click=&quot;handleChange&quot;&gt;改变接收数据内容&lt;/button&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  props:[&quot;message&quot;],</span><br><span class="line">  methods:&#123;</span><br><span class="line">    handleChange()&#123;</span><br><span class="line">      //$emit出发事件，会给父组件发送对应的消息通知</span><br><span class="line">      this.$emit(&quot;changeMsg&quot;,&quot;子组件改变后的内容&quot;)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line"></span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h4 id="Prop"><a href="#Prop" class="headerlink" title="Prop"></a>Prop</h4><p><code>Prop</code>定义：组件上注册的一些自定义属性</p><p><code>Prop</code>作用：向子组件传递数据</p><p>特点：</p><ul><li>可以传递任意数量的prop</li><li>可以传递任意类型的prop</li></ul><h5 id="Prop校验"><a href="#Prop校验" class="headerlink" title="Prop校验"></a>Prop校验</h5><p>为保证组件的<code>Prop</code>不乱传，可以为组件的<code>Prop</code>指定验证要求，不符合要求，控制台就会有错误提示</p><p>常见的校验：</p><ul><li>类型校验</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">props:&#123;</span><br><span class="line">校验的属性名:类型//Number String Boolean ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>非空校验</li><li>默认值</li><li>自定义校验</li></ul><p>如果需要满足多个校验的要求，完整的写法如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">props:&#123;</span><br><span class="line">校验的属性名:&#123;</span><br><span class="line">type:类型, //Number String Boolean  类型校验</span><br><span class="line">required: true,//是否是必须的，非空校验</span><br><span class="line">default:默认值,//默认值</span><br><span class="line">validator(value)&#123;</span><br><span class="line">//自定义校验逻辑</span><br><span class="line">return 是否通过校验 //true通过校验,false没通过校验</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="Prop-vs-data"><a href="#Prop-vs-data" class="headerlink" title="Prop vs data"></a>Prop vs data</h5><p>共同点：都可以给组件提供数据</p><p>区别：</p><ul><li>data数据是自己的，可以随便改</li><li>prop数据是外部父组件提供的，不能直接更改，遵循单向数据流</li></ul><h4 id="非父子组件通信"><a href="#非父子组件通信" class="headerlink" title="非父子组件通信"></a>非父子组件通信</h4><h5 id="方式一：event-bus事件总线"><a href="#方式一：event-bus事件总线" class="headerlink" title="方式一：event bus事件总线"></a>方式一：event bus事件总线</h5><p>作用：非父子组件之间，进行简易消息传递，复杂场景简易使用<code>Vuex</code></p><p>使用语法：</p><ol><li><p>创建一个都能访问到的事件总线（空Vue实例）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">import Vue from &#x27;vue&#x27;</span><br><span class="line">const Bus = new Vue()</span><br><span class="line">export default Bus</span><br></pre></td></tr></table></figure></li><li><p>A组件（接收方），监听Bus实例的事件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">created()&#123; //监听事件，出触发对应动作</span><br><span class="line">Bus.$on(&#x27;sendMsg&#x27;,(msg)=&gt;&#123;</span><br><span class="line">this.msg = msg</span><br><span class="line">&#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>B组件（发送方），触发Bus实例的事件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Bus.$emit(&quot;sendMsg&quot;,&quot;传递的消息内容&quot;)</span><br></pre></td></tr></table></figure></li></ol><h5 id="方式二：provide-amp-inject"><a href="#方式二：provide-amp-inject" class="headerlink" title="方式二：provide &amp; inject"></a>方式二：provide &amp; inject</h5><p><code>provide &amp; inject</code>作用：跨层级（爷爷辈组件提供的数据，子孙辈均可直接使用）共享数据</p><ol><li>父组件provide提供数据</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">export default&#123;</span><br><span class="line">    provide()&#123;</span><br><span class="line">        //不同数据类型的数据</span><br><span class="line">        //注意简单数据类型是非响应式的数据，复杂类型是响应式的，所以如果使用这种方式，建议将所有数据封装成对象进行传递</span><br><span class="line">        数据名1:数据值1,</span><br><span class="line">        xxx:xxxx</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol><li>子/孙组件inject取值使用</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">export default&#123;</span><br><span class="line">inject: [&#x27;对应的数据名1&#x27;,&#x27;对应的数据名2&#x27;]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="进阶语法"><a href="#进阶语法" class="headerlink" title="进阶语法"></a>进阶语法</h2><h3 id="v-model原理"><a href="#v-model原理" class="headerlink" title="v-model原理"></a>v-model原理</h3><p>原理：<code>v-model</code>本质是一个语法糖，例如应用在<code>input</code>输入框，其就相当于<code>value</code>属性和<code>input</code>事件的合写</p><p>作用：提供数据的双向绑定</p><ul><li>数据变，视图会跟着变：<code>value</code></li><li>视图变，数据会跟着变：<code>@input</code></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;input v-model=&quot;msg&quot; type=&quot;text&quot;&gt;</span><br><span class="line">等价于</span><br><span class="line">&lt;input :value=&quot;msg&quot; @input=&quot;msg = $event.target.value&quot; type=&quot;text&quot;&gt; //$event用于模板中，获取事件的形参</span><br></pre></td></tr></table></figure><h3 id="表单组件封装-amp-v-model简化代码"><a href="#表单组件封装-amp-v-model简化代码" class="headerlink" title="表单组件封装 &amp; v-model简化代码"></a>表单组件封装 &amp; v-model简化代码</h3><h4 id="表单组件封装"><a href="#表单组件封装" class="headerlink" title="表单组件封装"></a>表单组件封装</h4><ul><li>父传子：数据应该是父组件<code>Props</code>传递过来的，<code>v-model</code>拆解绑定数据</li><li>子传父：监听输入，子传父，传值给父组件修改</li></ul><p><strong>子组件BaseSelect封装的代码示例</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;select :value=&quot;cityId&quot; @change=&quot;handleChange&quot;&gt;</span><br><span class="line">    ...</span><br><span class="line">&lt;/select&gt;</span><br><span class="line"></span><br><span class="line">props:&#123;</span><br><span class="line">cityId: String</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">methods:&#123;</span><br><span class="line">handleChange(e)&#123;</span><br><span class="line">this.$emit(&quot;事件名&quot;,e.target.value)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>父组件代码示例</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;BaseSelect :cityId=&quot;selectId&quot; @事件名=&quot;selectId= $event&quot;&gt;&lt;/BaseSelect&gt;</span><br></pre></td></tr></table></figure><h4 id="父组件v-model简化代码，实现父子组件数据的双向绑定"><a href="#父组件v-model简化代码，实现父子组件数据的双向绑定" class="headerlink" title="父组件v-model简化代码，实现父子组件数据的双向绑定"></a>父组件v-model简化代码，实现父子组件数据的双向绑定</h4><p>在子组件中将数据更改的事件命名为<code>input</code>，传递的数据名改为<code>value</code>，这样父组件代码就可以简写</p><p><strong>子组件封装代码示例</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;select :value=&quot;value&quot; @change=&quot;handleChange&quot;&gt;</span><br><span class="line">    ...</span><br><span class="line">&lt;/select&gt;</span><br><span class="line"></span><br><span class="line">props:&#123;</span><br><span class="line">value:String</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">mehods:&#123;</span><br><span class="line">handleChange(e):&#123;</span><br><span class="line">this.$emit(&quot;input&quot;,e.target.value)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>父组件代码</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;BaseSelect :value=&quot;selectId&quot; @input=&quot;selectId=$event&quot;&gt;&lt;/BaseSelect&gt;</span><br><span class="line">可以简化为</span><br><span class="line">&lt;BaseSelect v-model=&quot;selectId&quot;&gt;&lt;/BaseSelect&gt;</span><br></pre></td></tr></table></figure><h3 id="sync修饰符-了解"><a href="#sync修饰符-了解" class="headerlink" title=".sync修饰符(了解)"></a>.sync修饰符(了解)</h3><p>作用：可以实现父子组件数据的双向绑定，简化代码</p><p>背景：v-model简化的前提是数据传递时<code>props</code>接收用<code>value</code>命名，但是并非所有组件用<code>value</code>都合适，而用<code>.sync</code>可以自定义<code>props</code>属性名</p><h3 id="ref和-refs"><a href="#ref和-refs" class="headerlink" title="ref和$refs"></a>ref和$refs</h3><p>作用：利用<code>ref</code>和<code>$refs</code>可以用于获取<code>dom</code>元素或组件实例</p><p><strong>背景</strong>：</p><ul><li>利用<code>document.queryselector()</code>查找时是整个页面查找</li><li>利用<code>ref</code>和<code>$refs</code> 是在当前组件内查找，会更加精准准确</li></ul><p><strong>语法</strong>：</p><h4 id="获取dom元素"><a href="#获取dom元素" class="headerlink" title="获取dom元素"></a>获取<code>dom</code>元素</h4><ol><li>目标标签添加<code>ref</code>属性，并将属性值设置为<code>xxx</code></li><li>在恰当时机(挂载之后，才可访问<code>dom</code>元素)，通过<code>this.$refs.xxx</code>获取目标标签</li></ol><p><strong>示例代码</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;div ref=&quot;chartRef&quot;&gt;渲染图标容器&lt;/div&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mounted()&#123;</span><br><span class="line">console.log(this.$refs.chartRef)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="获取组件实例"><a href="#获取组件实例" class="headerlink" title="获取组件实例"></a>获取组件实例</h4><ol><li>给目标组件添加<code>ref</code>属性，设置属性值为<code>xxx</code></li><li>在恰当时机，通过<code>$refs.xxx</code>获取目标组件，然后可以调用组件对象里面的方法</li></ol><p><strong>示例代码</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;BaseCom ref=&quot;baseCom&quot;&gt;&lt;/BaseCom&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">this.$refs.baseCom.组件方法()</span><br></pre></td></tr></table></figure><h3 id="Vue异步更新与-nextTick"><a href="#Vue异步更新与-nextTick" class="headerlink" title="Vue异步更新与$nextTick"></a>Vue异步更新与<code>$nextTick</code></h3><p>异步更新：<code>Vue</code>是异步更新<code>DOM</code>，以提升性能</p><p><code>$nextTick</code>：等<code>DOM</code>更新后，才会触发执行此方法里的函数体</p><p>语法：<code>this.$nextTick(函数体)</code></p><p><strong>示例</strong></p><p>比如点击一个按钮，然后会显示一个输入框，然后让这个输入框自动获取焦点</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;div v-if=&quot;isShow&quot;&gt;</span><br><span class="line">      &lt;input type=&quot;text&quot; ref=&quot;inp&quot; /&gt;</span><br><span class="line">      &lt;button&gt;确认&lt;/button&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div v-else&gt;</span><br><span class="line">      &lt;button @click=&quot;show&quot;&gt;编辑&lt;/button&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      isShow: false,</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    show() &#123;</span><br><span class="line">      this.isShow = true;</span><br><span class="line">      this.$refs.inp.focus();</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p>上面这种写法是会报错的，因为<code>vue</code>是<code>dom</code>异步更新，不能立刻获取对应元素</p><p><img src="/2025/04/27/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9B%B8%E5%85%B3/%E6%A1%86%E6%9E%B6%E8%AF%AD%E8%A8%80%E7%9B%B8%E5%85%B3/%E5%89%8D%E7%AB%AF/vue/04%20vue%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A804/vue%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A804/image-20250415153911039.png" alt="image-20250415153911039"></p><p>应当借助<code>$nextTick</code>来实现该功能，等<code>dom</code>更新完，再执行对应的功能</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;div v-if=&quot;isShow&quot;&gt;</span><br><span class="line">      &lt;input type=&quot;text&quot; ref=&quot;inp&quot; /&gt;</span><br><span class="line">      &lt;button&gt;确认&lt;/button&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div v-else&gt;</span><br><span class="line">      &lt;button @click=&quot;show&quot;&gt;编辑&lt;/button&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      isShow: false,</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    show() &#123;</span><br><span class="line">      this.isShow = true;</span><br><span class="line">      this.$nextTick(() =&gt; &#123;</span><br><span class="line">        this.$refs.inp.focus();</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Vue快速入门04&quot;&gt;&lt;a href=&quot;#Vue快速入门04&quot; class=&quot;headerlink&quot; title=&quot;Vue快速入门04&quot;&gt;&lt;/a&gt;Vue快速入门04&lt;/h1&gt;&lt;h2 id=&quot;组件组成三个部分&quot;&gt;&lt;a href=&quot;#组件组成三个部分&quot; class=&quot;</summary>
      
    
    
    
    <category term="vue" scheme="https://bangwu2001.github.io/categories/vue/"/>
    
    
    <category term="前端" scheme="https://bangwu2001.github.io/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>vue入门03</title>
    <link href="https://bangwu2001.github.io/2025/04/10/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9B%B8%E5%85%B3/%E6%A1%86%E6%9E%B6%E8%AF%AD%E8%A8%80%E7%9B%B8%E5%85%B3/%E5%89%8D%E7%AB%AF/vue/03%20Vue%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8-03/vue%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A803/"/>
    <id>https://bangwu2001.github.io/2025/04/10/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9B%B8%E5%85%B3/%E6%A1%86%E6%9E%B6%E8%AF%AD%E8%A8%80%E7%9B%B8%E5%85%B3/%E5%89%8D%E7%AB%AF/vue/03%20Vue%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8-03/vue%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A803/</id>
    <published>2025-04-10T04:18:42.000Z</published>
    <updated>2025-04-10T14:28:50.923Z</updated>
    
    <content type="html"><![CDATA[<h1 id="vue快速入门03"><a href="#vue快速入门03" class="headerlink" title="vue快速入门03"></a><code>vue快速入门03</code></h1><h2 id="生命周期"><a href="#生命周期" class="headerlink" title="生命周期"></a>生命周期</h2><h3 id="vue生命周期的四个阶段"><a href="#vue生命周期的四个阶段" class="headerlink" title="vue生命周期的四个阶段"></a>vue生命周期的四个阶段</h3><p>vue对象从创建到销毁的整个过程</p><p>Vue生命周期的四个阶段：</p><ul><li>创建<ul><li>初始化操作，普通数据转变为响应式数据</li><li>该阶段可以发送初始化渲染请求</li></ul></li><li>挂载<ul><li>渲染模板</li><li>该阶段才可以开始操作dom</li></ul></li><li>更新<ul><li>数据修改，更新视图</li></ul></li><li>销毁<ul><li>销毁实例</li></ul></li></ul><h3 id="vue生命周期函数（钩子函数）"><a href="#vue生命周期函数（钩子函数）" class="headerlink" title="vue生命周期函数（钩子函数）"></a>vue生命周期函数（钩子函数）</h3><p>在vue生命周期过程中，会自动运行一些函数，本称之为<strong>生命周期钩子</strong>，可以让开发者在<strong>特定阶段</strong>运行自己的代码</p><p>在整个生命周期中一共8个钩子函数，如下图所示：</p><p><img src="/2025/04/10/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9B%B8%E5%85%B3/%E6%A1%86%E6%9E%B6%E8%AF%AD%E8%A8%80%E7%9B%B8%E5%85%B3/%E5%89%8D%E7%AB%AF/vue/03%20Vue%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8-03/vue%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A803/image-20250404150439131.png" alt="image-20250404150439131"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;counter&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h1</span>&gt;</span>&#123;&#123;title&#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;buttons&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;button&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;number--&quot;</span>&gt;</span>-<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;value&quot;</span> <span class="attr">id</span>=<span class="string">&quot;value&quot;</span>&gt;</span>&#123;&#123;number&#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;button&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;number++&quot;</span>&gt;</span>+<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> app = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">el</span>: <span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">title</span>: <span class="string">&quot;计数器&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">number</span>: <span class="number">100</span></span></span><br><span class="line"><span class="language-javascript">      &#125;,</span></span><br><span class="line"><span class="language-javascript">      <span class="comment">//1.创建阶段，完成初始化，准备数据</span></span></span><br><span class="line"><span class="language-javascript">      <span class="title function_">beforeCreate</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;响应式数据准备之前&quot;</span>)</span></span><br><span class="line"><span class="language-javascript">      &#125;,</span></span><br><span class="line"><span class="language-javascript">      <span class="title function_">created</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;响应式数据准备之后&quot;</span>)</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//在这个钩子函数里可以执行渲染数据请求</span></span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">this</span>.<span class="property">number</span> = <span class="number">200</span></span></span><br><span class="line"><span class="language-javascript">      &#125;,</span></span><br><span class="line"><span class="language-javascript">      <span class="comment">//2.挂载阶段（渲染模板）</span></span></span><br><span class="line"><span class="language-javascript">      <span class="title function_">beforeMount</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;模板渲染之前&quot;</span>, <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;h1&quot;</span>).<span class="property">innerHTML</span>)</span></span><br><span class="line"><span class="language-javascript">      &#125;,</span></span><br><span class="line"><span class="language-javascript">      <span class="title function_">mounted</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;模板渲染之后&quot;</span>, <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;h1&quot;</span>).<span class="property">innerHTML</span>)</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//这个阶段之后，就可以操作dom</span></span></span><br><span class="line"><span class="language-javascript">      &#125;,</span></span><br><span class="line"><span class="language-javascript">      <span class="comment">//3.更新阶段，改变数据，更新视图</span></span></span><br><span class="line"><span class="language-javascript">      <span class="title function_">beforeUpdate</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//更新之前的视图</span></span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;数据修改了，但视图并未更新&quot;</span>, <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;.value&quot;</span>).<span class="property">innerHTML</span>)</span></span><br><span class="line"><span class="language-javascript">      &#125;,</span></span><br><span class="line"><span class="language-javascript">      <span class="title function_">updated</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//更新之后的视图</span></span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;数据修改了，视图已经更新&quot;</span>, <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;.value&quot;</span>).<span class="property">innerHTML</span>)</span></span><br><span class="line"><span class="language-javascript">      &#125;,</span></span><br><span class="line"><span class="language-javascript">      <span class="comment">//4.销毁阶段</span></span></span><br><span class="line"><span class="language-javascript">      <span class="comment">//执行 实例名.$destroy()，可以手动销毁实例</span></span></span><br><span class="line"><span class="language-javascript">      <span class="title function_">beforeDestroy</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;beforeDestroy&quot;</span>)</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//该阶段一般用于销毁实例之前关闭一些第三方的资源占用</span></span></span><br><span class="line"><span class="language-javascript">      &#125;,</span></span><br><span class="line"><span class="language-javascript">      <span class="title function_">destoyed</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;destroyed&quot;</span>)</span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p>实例：搜索框一进入页面立刻获取焦点</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;zh-CN&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>搜索页面<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">body</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">display</span>: flex;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">justify-content</span>: center;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">align-items</span>: center;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">height</span>: <span class="number">100vh</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">margin</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">background-color</span>: <span class="number">#f0f0f0</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">font-family</span>: Arial, sans-serif;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.search-container</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.logo</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">display</span>: flex;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">align-items</span>: center;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">justify-content</span>: center;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">margin-bottom</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.logo-text</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">font-size</span>: <span class="number">1.5em</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">font-weight</span>: bold;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.search-bar</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">display</span>: flex;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">align-items</span>: center;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#ccc</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">border-radius</span>: <span class="number">5px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">overflow</span>: hidden;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.search-bar</span> <span class="selector-tag">input</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">flex</span>: <span class="number">1</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">padding</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">border</span>: none;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">outline</span>: none;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.search-button</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">padding</span>: <span class="number">10px</span> <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">background-color</span>: <span class="number">#c43c3c</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">color</span>: white;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">border</span>: none;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">cursor</span>: pointer;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">outline</span>: none;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">  </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;search-container&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;logo&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;logo-text&quot;</span>&gt;</span>搜索一下<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;search-bar&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;搜索内容...&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;search-button&quot;</span>&gt;</span>搜索一下<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> app = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">el</span>: <span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">      &#125;,</span></span><br><span class="line"><span class="language-javascript">      <span class="title function_">mounted</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//输入框获取焦点</span></span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;.search-bar input&quot;</span>).<span class="title function_">focus</span>()</span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="工程化开发入门"><a href="#工程化开发入门" class="headerlink" title="工程化开发入门"></a>工程化开发入门</h2><h3 id="开发Vue的两种方式"><a href="#开发Vue的两种方式" class="headerlink" title="开发Vue的两种方式"></a>开发Vue的两种方式</h3><ul><li>核心包传统开发方式：基于<code>html/css/js</code>文件，直接引入核心包,开发Vue</li><li>工程化开发模式：基于构建工具（例如<code>webpack</code>)的环境中开发Vue</li></ul><h3 id="脚手架-Vue-CLI"><a href="#脚手架-Vue-CLI" class="headerlink" title="脚手架 Vue CLI"></a>脚手架 Vue CLI</h3><p><code>Vue CLI</code>是<code>Vue</code>官方提供的一个全局命令工具，可以帮助我们快速创建一个开发<code>Vue</code>项目的标准化基础架子（集成了Webpack配置）</p><p>好处：</p><ul><li>开箱即用，零配置</li><li>内置babel等工具</li><li>标准化</li></ul><p><strong>使用步骤：</strong></p><ol><li>全局安装（初次使用时执行）：<code>npm i @vue/cli -g</code>或者<code>yarn global add @vue/cli</code></li><li>查看<code>vue</code>版本：<code>vue --version</code></li><li>创建项目架子：<code>vue create project-name</code>（注意：项目名不能用中文）</li><li>启动项目：<code>npm run serve</code>或者<code>yarn serve</code>（具体启动的命令参考项目中的<code>package.json</code>）</li></ol><h3 id="文件目录结构"><a href="#文件目录结构" class="headerlink" title="文件目录结构"></a>文件目录结构</h3><p>利用脚手架创建出来的项目的目录结构</p><p><img src="/2025/04/10/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9B%B8%E5%85%B3/%E6%A1%86%E6%9E%B6%E8%AF%AD%E8%A8%80%E7%9B%B8%E5%85%B3/%E5%89%8D%E7%AB%AF/vue/03%20Vue%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8-03/vue%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A803/image-20250404222831849.png" alt="image-20250404222831849" style="zoom:50%;"></p><p>项目运行解析流程</p><p><img src="/2025/04/10/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9B%B8%E5%85%B3/%E6%A1%86%E6%9E%B6%E8%AF%AD%E8%A8%80%E7%9B%B8%E5%85%B3/%E5%89%8D%E7%AB%AF/vue/03%20Vue%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8-03/vue%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A803/image-20250404225557875.png" alt="image-20250404225557875" style="zoom: 33%;"></p><h3 id="组件化开发"><a href="#组件化开发" class="headerlink" title="组件化开发"></a>组件化开发</h3><p><strong>组件化</strong></p><p>一个页面可以拆分成一个个组件，每个组件有着自己独立的结构、样式、行为。</p><p>组件化可以便于维护，利于复用，从而提高开发效率</p><p>组件可以分为两类：</p><ul><li>普通组件</li><li>根组件<ul><li><code>App.vue</code>文件，整个应用最上层的组件，包裹所有普通小组件</li></ul></li></ul><p><strong>App.vue文件</strong></p><p><code>App.vue</code>文件（单个组件文件）包含三个组成部分</p><ul><li><code>template</code>：结构，有且只有一个根元素</li><li><code>script</code>：js逻辑代码</li><li><code>style</code>：样式</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;!--组件的结构代码--&gt;</span><br><span class="line">  &lt;div class=&quot;father&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;son&quot; @click=&quot;show&quot;&gt;大的&lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">//导出当前组件的配置项</span><br><span class="line">//里面可以提供data、methods、computed、watch、生命周期钩子函数等</span><br><span class="line">  export default&#123;</span><br><span class="line">    methods:&#123;</span><br><span class="line">      show()&#123;</span><br><span class="line">        alert(&quot;你点击了son div元素&quot;)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line">  .father&#123;</span><br><span class="line">    width: 300px;</span><br><span class="line">    height: 300px;</span><br><span class="line">    background-color: blue;</span><br><span class="line">  &#125;</span><br><span class="line">  .son&#123;</span><br><span class="line">    width: 100px;</span><br><span class="line">    height: 100px;</span><br><span class="line">    background-color: red;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p>补充：<code>vscode</code>语法高亮插件<code>Vetur</code></p><p><img src="/2025/04/10/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9B%B8%E5%85%B3/%E6%A1%86%E6%9E%B6%E8%AF%AD%E8%A8%80%E7%9B%B8%E5%85%B3/%E5%89%8D%E7%AB%AF/vue/03%20Vue%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8-03/vue%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A803/image-20250404230839527.png" alt="image-20250404230839527"></p><h3 id="普通组件的注册使用"><a href="#普通组件的注册使用" class="headerlink" title="普通组件的注册使用"></a>普通组件的注册使用</h3><h4 id="组件注册的两种方式"><a href="#组件注册的两种方式" class="headerlink" title="组件注册的两种方式"></a>组件注册的两种方式</h4><h5 id="局部注册"><a href="#局部注册" class="headerlink" title="局部注册"></a>局部注册</h5><p>只能在注册的组件内使用</p><ol><li>创建<code>.vue</code>文件</li><li>在使用的组件内导入并注册</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--导入--&gt;</span><br><span class="line">import 组件名 from &#x27;xxx.vue&#x27;</span><br><span class="line">&lt;!--注册--&gt;</span><br><span class="line">export default&#123;</span><br><span class="line">components:&#123;</span><br><span class="line">组件名称</span><br><span class="line">:导入的组件名</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用的时候，直接当成<code>html</code>标签使用，<code>&lt;组件名&gt;&lt;/组件名&gt;</code></p><p>注意组件名的命名规范：大驼峰命名法，比如<code>XxxHhhh</code></p><p><strong>使用实例</strong></p><p><img src="/2025/04/10/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9B%B8%E5%85%B3/%E6%A1%86%E6%9E%B6%E8%AF%AD%E8%A8%80%E7%9B%B8%E5%85%B3/%E5%89%8D%E7%AB%AF/vue/03%20Vue%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8-03/vue%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A803/image-20250410213516845.png" alt="image-20250410213516845" style="zoom:67%;"></p><p>将上图中的页面拆分为三个不同的组件：<code>PageHeader</code>、<code>PageMain</code>、<code>PageFooter</code></p><p><img src="/2025/04/10/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9B%B8%E5%85%B3/%E6%A1%86%E6%9E%B6%E8%AF%AD%E8%A8%80%E7%9B%B8%E5%85%B3/%E5%89%8D%E7%AB%AF/vue/03%20Vue%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8-03/vue%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A803/image-20250410213623378.png" alt="image-20250410213623378"></p><p><code>PageHeader</code>代码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--页面头部组件--&gt;</span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;header&quot;&gt;头部&lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line">  .header&#123;</span><br><span class="line">    height: 100px;</span><br><span class="line">    background-color: blueviolet;</span><br><span class="line">    text-align: center;</span><br><span class="line">    line-height: 100px;</span><br><span class="line">    font-size: 30px;</span><br><span class="line">    color: white;</span><br><span class="line">    font-weight: 700;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p><code>PageMain</code>代码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--页面头部组件--&gt;</span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;main&quot;&gt;页面主体&lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line">  .main&#123;</span><br><span class="line">    margin: 20px 0;</span><br><span class="line">    height: 300px;</span><br><span class="line">    background-color: blue;</span><br><span class="line">    text-align: center;</span><br><span class="line">    line-height: 300px;</span><br><span class="line">    font-size: 30px;</span><br><span class="line">    color: white;</span><br><span class="line">    font-weight: 700;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p><code>PageFooter</code>代码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--页面头部组件--&gt;</span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;footer&quot;&gt;页面底部&lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line">  .footer&#123;</span><br><span class="line">    height: 100px;</span><br><span class="line">    background-color: greenyellow;</span><br><span class="line">    text-align: center;</span><br><span class="line">    line-height: 100px;</span><br><span class="line">    font-size: 30px;</span><br><span class="line">    color: white;</span><br><span class="line">    font-weight: 700;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p><code>App.vue</code>代码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;app&quot;&gt;</span><br><span class="line">    &lt;MyHeader&gt;&lt;/MyHeader&gt;</span><br><span class="line">    &lt;MyMain&gt;&lt;/MyMain&gt;</span><br><span class="line">    &lt;MyFooter&gt;&lt;/MyFooter&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import PageHeader from &#x27;./components/PageHeader.vue&#x27;;</span><br><span class="line">import PageMain from &#x27;./components/PageMain.vue&#x27;;</span><br><span class="line">import PageFooter from &#x27;./components/PageFooter.vue&#x27;;</span><br><span class="line"></span><br><span class="line">export default &#123;</span><br><span class="line">  components:&#123;</span><br><span class="line">    MyHeader:PageHeader,</span><br><span class="line">    MyMain:PageMain,</span><br><span class="line">    MyFooter:PageFooter</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line">  .app&#123;</span><br><span class="line">    margin: 10px auto;</span><br><span class="line">    padding: 50px;</span><br><span class="line">    width: 600px;</span><br><span class="line">    height: 500px;</span><br><span class="line">    background-color: aqua;</span><br><span class="line">    text-align: center;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h5 id="全局注册"><a href="#全局注册" class="headerlink" title="全局注册"></a>全局注册</h5><p>在所有组件内都能使用</p><ol><li>创建<code>.vue</code>文件</li><li>在<code>main.js</code>中进行全局注册</li></ol><p>在各个组件中均使用的通用组件，就可以把它定义为全局组件</p><p>全局注册的语法</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//导入需要注册的组件</span></span><br><span class="line"><span class="keyword">import</span> 组件名 <span class="keyword">from</span> <span class="string">&quot;xxxx.vue&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//调用Vue.component进行全局注册</span></span><br><span class="line"><span class="comment">//Vue.component(&#x27;组件名&#x27;,组件对象)</span></span><br></pre></td></tr></table></figure><p>全局注册之后，任意其他组件中均可直接使用（不用在使用的组件内导入注册该组件），使用的时候，直接当成<code>html</code>标签使用，<code>&lt;组件名&gt;&lt;/组件名&gt;</code></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>项目页面开发的思路</p><ol><li>分析页面，按照模块对页面进行拆分，搭架子（一般局部注册，在多个组件中均使用的组件，可以考虑进行全局注册）</li><li>根据设计图，编写组件<code>html</code>结构和<code>css</code>样式</li><li>拆分封装通用的小组件</li><li>实现完静态结构后，通过<code>js</code>动态渲染，实现页面的相关功能</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;vue快速入门03&quot;&gt;&lt;a href=&quot;#vue快速入门03&quot; class=&quot;headerlink&quot; title=&quot;vue快速入门03&quot;&gt;&lt;/a&gt;&lt;code&gt;vue快速入门03&lt;/code&gt;&lt;/h1&gt;&lt;h2 id=&quot;生命周期&quot;&gt;&lt;a href=&quot;#生命周期&quot; cl</summary>
      
    
    
    
    <category term="vue" scheme="https://bangwu2001.github.io/categories/vue/"/>
    
    
    <category term="前端" scheme="https://bangwu2001.github.io/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>Vue入门02</title>
    <link href="https://bangwu2001.github.io/2025/04/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9B%B8%E5%85%B3/%E6%A1%86%E6%9E%B6%E8%AF%AD%E8%A8%80%E7%9B%B8%E5%85%B3/%E5%89%8D%E7%AB%AF/vue/02%20vue%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8-02/vue%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A802/"/>
    <id>https://bangwu2001.github.io/2025/04/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9B%B8%E5%85%B3/%E6%A1%86%E6%9E%B6%E8%AF%AD%E8%A8%80%E7%9B%B8%E5%85%B3/%E5%89%8D%E7%AB%AF/vue/02%20vue%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8-02/vue%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A802/</id>
    <published>2025-04-02T04:18:42.000Z</published>
    <updated>2025-04-10T14:29:00.024Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Vue入门02"><a href="#Vue入门02" class="headerlink" title="Vue入门02"></a>Vue入门02</h1><h2 id="指令补充"><a href="#指令补充" class="headerlink" title="指令补充"></a>指令补充</h2><h3 id="指令修饰符"><a href="#指令修饰符" class="headerlink" title="指令修饰符"></a>指令修饰符</h3><p>通过<code>&quot;.&quot;</code>指明一些指令后缀，不同后缀封装了不同的处理操作，便于简化代码</p><h4 id="按键修饰符"><a href="#按键修饰符" class="headerlink" title="按键修饰符"></a>按键修饰符</h4><p><code>@keyup.enter</code>：键盘回车监听</p><p>语法：<code>@keyup.enter=事件处理函数</code></p><ul><li><code>@keyup</code>是任何按键时都会触发事件</li></ul><h4 id="v-model修饰符"><a href="#v-model修饰符" class="headerlink" title="v-model修饰符"></a>v-model修饰符</h4><p><code>v-model.trim</code>：去除首尾空格</p><p><code>v-model.number</code>：转数字</p><p>语法：与<code>v-model</code>语法一致，后面接双向绑定的vue数据</p><h4 id="时间修饰符"><a href="#时间修饰符" class="headerlink" title="时间修饰符"></a>时间修饰符</h4><p><code>@事件名.stop</code>：阻止冒泡</p><p><code>@事件名.prevent</code>：阻止默认行为</p><h3 id="v-bind对于样式控制的增强"><a href="#v-bind对于样式控制的增强" class="headerlink" title="v-bind对于样式控制的增强"></a>v-bind对于样式控制的增强</h3><p>为便于开发者进行样式控制，Vue扩展了<code>v-bind</code>语法，可以针对<code>class类名</code>和<code>style行内样式</code>进行控制</p><h4 id="v-bind操作class"><a href="#v-bind操作class" class="headerlink" title="v-bind操作class"></a>v-bind操作class</h4><p>语法：<code>:class=&quot;对象/数组&quot;</code></p><ul><li>对象，键就是类名，值是布尔值，如果值为<code>true</code>，则有这个类，否则没有</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 例如 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span> <span class="attr">:class</span>=<span class="string">&quot;&#123;类名1:布尔值,类名2:布尔值,...&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>数组，数组中所有的类都会添加到盒子上，本质就是一个<code>class列表</code></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span> <span class="attr">:class</span>=<span class="string">&quot;[类名1,类名2,类名3,...]&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这样通过给标签设置不同的类名，便于其根据情况切换不同的样式</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">10px</span> auto;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border</span>: <span class="number">1px</span> solid;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.pink</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: pink;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.big</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">600px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">600px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span> <span class="attr">:class</span>=<span class="string">&quot;&#123;pink:true,big:true&#125;&quot;</span>&gt;</span>样式切换<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">const</span> app = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">el</span>:<span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">data</span>:&#123;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;)</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>实际应用场景：</p><p>网页tab页面高亮，比如不同的栏目模块</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;zh-CN&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>导航栏示例<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">body</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-family</span>: Arial, sans-serif;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.navbar</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">display</span>: flex;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="number">#f8f8f8</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-bottom</span>: <span class="number">1px</span> solid <span class="number">#ddd</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.navbar-item</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding</span>: <span class="number">10px</span> <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">cursor</span>: pointer;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.navbar-item</span><span class="selector-class">.active</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="number">#e2231a</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: white;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-weight</span>: bold;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;navbar&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;navbar-item&quot;</span> <span class="attr">v-for</span>=<span class="string">&quot;item in tabList&quot;</span> <span class="attr">:class</span>=<span class="string">&quot;&#123;active:item.isActive&#125;&quot;</span></span></span><br><span class="line"><span class="tag">            @<span class="attr">click</span>=<span class="string">&quot;add(item.id)&quot;</span>&gt;</span>&#123;&#123;item.name&#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">const</span> app = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">el</span>:<span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">data</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">tabList</span>:[&#123;<span class="string">&quot;id&quot;</span>:<span class="number">1</span>,<span class="string">&quot;name&quot;</span>:<span class="string">&quot;京东秒杀&quot;</span>,<span class="string">&quot;isActive&quot;</span>:<span class="literal">false</span>&#125;</span></span><br><span class="line"><span class="language-javascript">                    ,&#123;<span class="string">&quot;id&quot;</span>:<span class="number">2</span>,<span class="string">&quot;name&quot;</span>:<span class="string">&quot;每日特价&quot;</span>,<span class="string">&quot;isActive&quot;</span>:<span class="literal">false</span>&#125;</span></span><br><span class="line"><span class="language-javascript">                    ,&#123;<span class="string">&quot;id&quot;</span>:<span class="number">3</span>,<span class="string">&quot;name&quot;</span>:<span class="string">&quot;品类秒杀&quot;</span>,<span class="string">&quot;isActive&quot;</span>:<span class="literal">false</span>&#125;</span></span><br><span class="line"><span class="language-javascript">                ]</span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">methods</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="title function_">add</span>(<span class="params">id</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="variable language_">this</span>.<span class="property">tabList</span>.<span class="title function_">forEach</span>(<span class="function"><span class="params">item</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">                        item.<span class="property">isActive</span> = item.<span class="property">id</span>==id</span></span><br><span class="line"><span class="language-javascript">                    &#125;);</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;)</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/2025/04/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9B%B8%E5%85%B3/%E6%A1%86%E6%9E%B6%E8%AF%AD%E8%A8%80%E7%9B%B8%E5%85%B3/%E5%89%8D%E7%AB%AF/vue/02%20vue%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8-02/vue%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A802/tab-change.gif" alt></p><h4 id="v-bind操作style"><a href="#v-bind操作style" class="headerlink" title="v-bind操作style"></a>v-bind操作style</h4><p>语法：<code>:style=&quot;样式对象&quot;</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--示例--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span> <span class="attr">:style</span>=<span class="string">&quot;&#123;ccs属性名1：css属性值,css属性名2：css属性值&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">:style</span>=<span class="string">&#x27;&#123;color:&quot;red&quot;,width:&quot;100px&quot;,height:&quot;30px&quot;,border:&quot;1px solid&quot;&#125;&#x27;</span>&gt;</span>style样式<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">const</span> app = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">el</span>:<span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">data</span>:&#123;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;)</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="v-model应用于其他表单元素"><a href="#v-model应用于其他表单元素" class="headerlink" title="v-model应用于其他表单元素"></a>v-model应用于其他表单元素</h3><p>所有常见的表单元素均可以用<code>v-model</code>绑定关联，进行双向绑定，能够快速获取或者设定表单元素的值</p><p><code>v-model</code>能够根据控件类型，自动选取正确的方法来更新元素</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;用户名&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;inputText&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">textarea</span> <span class="attr">placeholder</span>=<span class="string">&quot;长文本&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;textArea&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span>&gt;</span>篮球<span class="tag">&lt;/<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">value</span>=<span class="string">&quot;篮球&quot;</span> <span class="attr">name</span>=<span class="string">&quot;hobby&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;hobby&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span>&gt;</span>足球<span class="tag">&lt;/<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">value</span>=<span class="string">&quot;足球&quot;</span> <span class="attr">name</span>=<span class="string">&quot;hobby&quot;</span><span class="attr">v-model</span>=<span class="string">&quot;hobby&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span>&gt;</span>乒乓球<span class="tag">&lt;/<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">value</span>=<span class="string">&quot;乒乓球&quot;</span> <span class="attr">name</span>=<span class="string">&quot;hobby&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;hobby&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span>&gt;</span>男<span class="tag">&lt;/<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">value</span>=<span class="string">&quot;男&quot;</span> <span class="attr">name</span>=<span class="string">&quot;gender&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;gender&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span>&gt;</span>女<span class="tag">&lt;/<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">value</span>=<span class="string">&quot;女&quot;</span> <span class="attr">name</span>=<span class="string">&quot;gender&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;gender&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">select</span> <span class="attr">v-model</span>=<span class="string">&quot;nation&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;中国&quot;</span>&gt;</span>中国<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;韩国&quot;</span>&gt;</span>韩国<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;日本&quot;</span>&gt;</span>日本<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">const</span> app = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">el</span>:<span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">data</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">inputText</span>:<span class="string">&quot;啦啦啦啦啦&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">textArea</span>:<span class="string">&quot;好好看看啦啦啦&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">hobby</span>:[<span class="string">&quot;篮球&quot;</span>,<span class="string">&quot;乒乓球&quot;</span>],</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">gender</span>:<span class="string">&quot;女&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">nation</span>:<span class="string">&quot;日本&quot;</span></span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;)</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="computed属性"><a href="#computed属性" class="headerlink" title="computed属性"></a>computed属性</h2><h3 id="计算属性介绍"><a href="#计算属性介绍" class="headerlink" title="计算属性介绍"></a>计算属性介绍</h3><p>计算属性：基于现有的数据，计算出来的新属性，依赖的数据发生变化，会自动重新计算</p><p>语法：</p><ul><li>声明在<code>computed</code>配置项中，一个计算属性对应一个函数</li><li>使用起来和普通属性一样使用<code>&#123;&#123;计算属性名&#125;&#125;</code></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">computed:&#123;</span><br><span class="line">计算属性名()&#123;</span><br><span class="line">基于现有数据，编写求值逻辑</span><br><span class="line">return 结果</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>礼物清单<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span> <span class="attr">v-for</span>=<span class="string">&quot;item in goods&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;item.id&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;item.name&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;item.num&#125;&#125;个<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;count&quot;</span>&gt;</span>礼物总数:&#123;&#123;allCount&#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">const</span> app = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">el</span>: <span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">goods</span>: [&#123; <span class="attr">id</span>: <span class="number">1</span>, <span class="attr">name</span>: <span class="string">&quot;篮球&quot;</span>, <span class="attr">num</span>: <span class="number">1</span> &#125;</span></span><br><span class="line"><span class="language-javascript">                    , &#123; <span class="attr">id</span>: <span class="number">2</span>, <span class="attr">name</span>: <span class="string">&quot;玩具&quot;</span>, <span class="attr">num</span>: <span class="number">2</span> &#125;</span></span><br><span class="line"><span class="language-javascript">                    , &#123; <span class="attr">id</span>: <span class="number">3</span>, <span class="attr">name</span>: <span class="string">&quot;足球&quot;</span>, <span class="attr">num</span>: <span class="number">6</span> &#125;</span></span><br><span class="line"><span class="language-javascript">                ]</span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">computed</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="title function_">allCount</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">goods</span>.<span class="title function_">reduce</span>(<span class="function">(<span class="params">sum,item</span>)=&gt;</span></span></span><br><span class="line"><span class="language-javascript">                        sum+item.<span class="property">num</span>,<span class="number">0</span>)</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;)</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="computed计算属性-vs-methods方法"><a href="#computed计算属性-vs-methods方法" class="headerlink" title="computed计算属性 vs methods方法"></a>computed计算属性 vs methods方法</h3><h4 id="computed计算属性"><a href="#computed计算属性" class="headerlink" title="computed计算属性"></a>computed计算属性</h4><p>功能：封装了一段对于数据的处理，求得一个结果</p><p>语法：</p><ul><li>写在<code>computed</code>配置项中</li><li>作为属性，直接使用<code>this.计算属性</code>或者<code>&#123;&#123;计算属性&#125;&#125;</code></li></ul><p>缓存特性：</p><ul><li>能够一定程度上提升性能，计算属性会对计算出来的结果进行缓存，再次使用时直接读取缓存，如果依赖项发生了变化，会自动计算新的结果并再次缓存</li></ul><h4 id="methods方法"><a href="#methods方法" class="headerlink" title="methods方法"></a>methods方法</h4><p>功能：封装了处理业务逻辑，给实例提供一个方法</p><p>语法：</p><ul><li>写在<code>methods</code>配置项中</li><li>作为方法，需要调用<code>this.方法名()</code>或者<code>@事件名=方法名</code></li></ul><h3 id="计算属性完整写法"><a href="#计算属性完整写法" class="headerlink" title="计算属性完整写法"></a>计算属性完整写法</h3><p>上述是计算属性的简写，这种情况下只能访问，不能修改属性，如果要修改属性，则需要写计算属性的完整写法</p><p><strong>计算属性的完整写法</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">computed:&#123;</span><br><span class="line">计算属性名:&#123;</span><br><span class="line">get()&#123;</span><br><span class="line">代码逻辑（数据计算逻辑）</span><br><span class="line">return 结果</span><br><span class="line">&#125;,</span><br><span class="line">set()&#123;</span><br><span class="line">代码逻辑（数据修改逻辑）</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>实例</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">label</span>&gt;</span>姓:<span class="tag">&lt;/<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;firstName&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">label</span>&gt;</span>名:<span class="tag">&lt;/<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">lastName</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">span</span>&gt;</span>=&#123;&#123;name&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;输入新的名字&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;inputName&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;alertName&quot;</span>&gt;</span>改名<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> app = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">el</span>: <span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">firstName</span>: <span class="string">&quot;李&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">lastName</span>: <span class="string">&quot;白&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">inputName</span>: <span class="string">&quot;&quot;</span></span></span><br><span class="line"><span class="language-javascript">      &#125;,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">alertName</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="variable language_">this</span>.<span class="property">name</span> = <span class="variable language_">this</span>.<span class="property">inputName</span></span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">      &#125;,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">computed</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">name</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="title function_">get</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">firstName</span> + <span class="variable language_">this</span>.<span class="property">lastName</span></span></span><br><span class="line"><span class="language-javascript">          &#125;,</span></span><br><span class="line"><span class="language-javascript">          <span class="comment">//修改赋值时，value极为传入的新赋予的值</span></span></span><br><span class="line"><span class="language-javascript">          <span class="title function_">set</span>(<span class="params">value</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">this</span>.<span class="property">firstName</span> = value.<span class="title function_">substring</span>(<span class="number">0</span>, <span class="number">1</span>)</span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">this</span>.<span class="property">lastName</span> = value.<span class="title function_">substring</span>(<span class="number">1</span>, value.<span class="property">length</span>)</span></span><br><span class="line"><span class="language-javascript">          &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="watch监听器"><a href="#watch监听器" class="headerlink" title="watch监听器"></a>watch监听器</h2><h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><p>功能：监视一些数据变化，执行相应的业务逻辑或者异步操作</p><p>应用场景分析：在线翻译栏，左边用户输入内容，右边会实时显示翻译内容</p><p>语法：</p><ul><li><p>简单写法：监听简单类型数据</p></li><li><p>完整写法：需要添加额外的配置</p></li></ul><h3 id="简单写法"><a href="#简单写法" class="headerlink" title="简单写法"></a>简单写法</h3><p><strong>语法</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--示例--&gt;</span></span><br><span class="line">data:&#123;</span><br><span class="line">words:&quot;苹果&quot;,</span><br><span class="line">obj:&#123;</span><br><span class="line">words:&quot;苹果&quot;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">&lt;!--监视器--&gt;</span></span><br><span class="line">watch:&#123;</span><br><span class="line">//数据变化时会触发对应的操作</span><br><span class="line">//newValue为新值，oldValue为老值</span><br><span class="line">数据属性名(newValue,oldValue)&#123;</span><br><span class="line">对应数据变化的业务逻辑或者异步操作</span><br><span class="line">&#125;,</span><br><span class="line">&#x27;对象.属性名&#x27;(newValue,oldValue)&#123;</span><br><span class="line">对应数据变化的业务逻辑或者一部操作</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>实例</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">label</span>&gt;</span>输入内容<span class="tag">&lt;/<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">textarea</span> <span class="attr">v-model</span>=<span class="string">&quot;words&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">label</span>&gt;</span>翻译内容<span class="tag">&lt;/<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">textarea</span> <span class="attr">v-model</span>=<span class="string">&quot;translateWords&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> app = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">el</span>: <span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">words</span>: <span class="string">&quot;&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">translateWords</span>: <span class="string">&quot;&quot;</span></span></span><br><span class="line"><span class="language-javascript">      &#125;,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">watch</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">words</span>(<span class="params">newValue, oldValue</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="variable language_">this</span>.<span class="property">translateWords</span> = newValue.<span class="title function_">toUpperCase</span>()</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p>如何是调用后端API接口进行相关的操作，这时候要注意性能的影响，采取<strong>防抖</strong>，来避免频繁触发调用</p><h3 id="完整写法"><a href="#完整写法" class="headerlink" title="完整写法"></a>完整写法</h3><p>完整写法需要额外配置项</p><ul><li>deep:true，对复杂数据类型深度监视 ，</li><li>immediate:true，初始化立刻执行一次handler方法</li></ul><p>应用场景分析：仍然是文本翻译场景，但是，不仅用户输入内容，实时显示当前文本翻译结果，当用户切换语言类型时，也需要翻译当前文本内容，这时就需要同时监听一个对象的多个属性</p><p><strong>语法</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">data:&#123;</span><br><span class="line">obj:&#123;</span><br><span class="line">words:&quot;苹果&quot;,</span><br><span class="line">lang:&quot;En&quot;</span><br><span class="line">&#125;</span><br><span class="line">&#125;,</span><br><span class="line">watch:&#123;</span><br><span class="line">数据属性名:&#123;</span><br><span class="line">deep:true,</span><br><span class="line">handler(newValue)&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>实例</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">select</span> <span class="attr">v-model</span>=<span class="string">&quot;transObj.lang&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;大写&quot;</span>&gt;</span>大写<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;小写&quot;</span>&gt;</span>小写<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">label</span>&gt;</span>输入内容<span class="tag">&lt;/<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">textarea</span> <span class="attr">v-model</span>=<span class="string">&quot;transObj.words&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">label</span>&gt;</span>翻译内容<span class="tag">&lt;/<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">textarea</span> <span class="attr">v-model</span>=<span class="string">&quot;translateWords&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> app = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">el</span>: <span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">transObj</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="attr">words</span>: <span class="string">&quot;&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">          <span class="attr">lang</span>: <span class="string">&quot;&quot;</span></span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">translateWords</span>: <span class="string">&quot;&quot;</span></span></span><br><span class="line"><span class="language-javascript">      &#125;,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">watch</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">transObj</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="attr">deep</span>: <span class="literal">true</span>,</span></span><br><span class="line"><span class="language-javascript">          <span class="title function_">handler</span>(<span class="params">newValue</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">if</span> (newValue.<span class="property">lang</span> == <span class="string">&quot;大写&quot;</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">              <span class="variable language_">this</span>.<span class="property">translateWords</span> = newValue.<span class="property">words</span>.<span class="title function_">toUpperCase</span>()</span></span><br><span class="line"><span class="language-javascript">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (newValue.<span class="property">lang</span> == <span class="string">&quot;小写&quot;</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">              <span class="variable language_">this</span>.<span class="property">translateWords</span> = newValue.<span class="property">words</span>.<span class="title function_">toLowerCase</span>()</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">          &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="综合案例：购物车"><a href="#综合案例：购物车" class="headerlink" title="综合案例：购物车"></a>综合案例：购物车</h2><p>实现下图中的购物车功能</p><p><img src="/2025/04/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9B%B8%E5%85%B3/%E6%A1%86%E6%9E%B6%E8%AF%AD%E8%A8%80%E7%9B%B8%E5%85%B3/%E5%89%8D%E7%AB%AF/vue/02%20vue%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8-02/vue%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A802/image-20250403164138551.png" alt="image-20250403164138551" style="zoom:50%;"></p><p>功能分析：</p><ul><li>页面列表渲染：<code>v-for</code></li><li>删除功能</li><li>修改个数</li><li>全选反选</li><li>统计选中商品的数目和总价：<code>computed</code>属性</li><li>持久化到本地：<code>localStorage</code></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;zh-CN&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>购物车<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">body</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">font-family</span>: Arial, sans-serif;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">margin</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">padding</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">background-color</span>: <span class="number">#f4f4f4</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.header</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">background-color</span>: <span class="number">#fff</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">padding</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.header</span> <span class="selector-tag">img</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">border-radius</span>: <span class="number">50%</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.header</span> <span class="selector-tag">h1</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">margin</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">font-size</span>: <span class="number">24px</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.cart</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">background-color</span>: <span class="number">#fff</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">margin</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">padding</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">border-radius</span>: <span class="number">8px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">10px</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.1</span>);</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">table</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">width</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">border-collapse</span>: collapse;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">th</span>,</span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">td</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">padding</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">border-bottom</span>: <span class="number">1px</span> solid <span class="number">#ddd</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">th</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">background-color</span>: <span class="number">#f2f2f2</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.total</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">text-align</span>: right;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">margin-top</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.total</span> <span class="selector-tag">span</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">font-size</span>: <span class="number">24px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">color</span>: red;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.button</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">background-color</span>: <span class="number">#007bff</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">color</span>: white;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">padding</span>: <span class="number">10px</span> <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">border</span>: none;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">border-radius</span>: <span class="number">5px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">cursor</span>: pointer;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.button</span><span class="selector-pseudo">:hover</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">background-color</span>: <span class="number">#0056b3</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.delete</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">background-color</span>: <span class="number">#dc3545</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.delete</span><span class="selector-pseudo">:hover</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">background-color</span>: <span class="number">#c82333</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.footer</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">display</span>: flex;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">justify-content</span>: space-around;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">  </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;header&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://via.placeholder.com/100&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;Logo&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h1</span>&gt;</span>水果<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;cart&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h2</span>&gt;</span>购物车<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">thead</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">tr</span> <span class="attr">v-if</span>=<span class="string">&quot;goods.length&gt;0&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>选中<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>图片<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>单价<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>个数<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>小计<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>操作<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">tr</span> <span class="attr">v-else</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>没有商品，购物车为空<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">tr</span> <span class="attr">v-for</span>=<span class="string">&quot;item in goods&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;item.id&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;item.checked&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://via.placeholder.com/50&quot;</span> <span class="attr">:alt</span>=<span class="string">&quot;item.name&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;item.price&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">button</span> <span class="attr">:disabled</span>=<span class="string">&quot;item.num&lt;0&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;item.num=1&quot;</span>&gt;</span>-<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123;item.num&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;item.num+=1&quot;</span>&gt;</span>+<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;item.price*item.num&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;delete&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;del(item.id)&quot;</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;total&quot;</span>&gt;</span></span><br><span class="line">        总价：<span class="tag">&lt;<span class="name">span</span>&gt;</span>¥&#123;&#123;totalPrice&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;footer&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">label</span>&gt;</span>全选:<span class="tag">&lt;/<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">id</span>=<span class="string">&quot;selectAll&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;isAll&quot;</span> /&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;button&quot;</span>&gt;</span>结算&#123;&#123;totalNum&#125;&#125;<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> defaultArr = []</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> app = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">el</span>: <span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// goods: [&#123; id: 1, name: &quot;火龙果&quot;, price: 6, num: 2, checked: false &#125;,</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// &#123; id: 2, name: &quot;草莓&quot;, price: 7, num: 1, checked: false &#125;</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// ]</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//从本地存储读取，如果为空，则用默认值</span></span></span><br><span class="line"><span class="language-javascript">        <span class="attr">goods</span>: <span class="title class_">JSON</span>.<span class="title function_">parse</span>(<span class="variable language_">localStorage</span>.<span class="title function_">getItem</span>(<span class="string">&quot;goods&quot;</span>)) || defaultArr</span></span><br><span class="line"><span class="language-javascript">      &#125;, <span class="attr">computed</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">totalPrice</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">goods</span>.<span class="title function_">reduce</span>(<span class="function">(<span class="params">sum, item</span>) =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">if</span> (item.<span class="property">checked</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">              <span class="keyword">return</span> sum + item.<span class="property">price</span> * item.<span class="property">num</span></span></span><br><span class="line"><span class="language-javascript">            &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="language-javascript">              <span class="keyword">return</span> sum</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">          &#125;, <span class="number">0</span>)</span></span><br><span class="line"><span class="language-javascript">        &#125;, <span class="title function_">totalNum</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">goods</span>.<span class="title function_">reduce</span>(<span class="function">(<span class="params">sum, item</span>) =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">if</span> (item.<span class="property">checked</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">              <span class="keyword">return</span> sum + item.<span class="property">num</span></span></span><br><span class="line"><span class="language-javascript">            &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="language-javascript">              <span class="keyword">return</span> sum</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">          &#125;, <span class="number">0</span>)</span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">isAll</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="title function_">get</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">for</span> (<span class="keyword">let</span> index = <span class="number">0</span>; index &lt; <span class="variable language_">this</span>.<span class="property">goods</span>.<span class="property">length</span>; index++) &#123;</span></span><br><span class="line"><span class="language-javascript">              <span class="keyword">if</span> (!<span class="variable language_">this</span>.<span class="property">goods</span>[index].<span class="property">checked</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">return</span> <span class="literal">false</span></span></span><br><span class="line"><span class="language-javascript">              &#125;</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">goods</span>.<span class="property">length</span> == <span class="number">0</span>) <span class="keyword">return</span> <span class="literal">false</span></span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">return</span> <span class="literal">true</span></span></span><br><span class="line"><span class="language-javascript">          &#125;, <span class="title function_">set</span>(<span class="params">value</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">this</span>.<span class="property">goods</span>.<span class="title function_">forEach</span>(<span class="function"><span class="params">item</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">              item.<span class="property">checked</span> = value</span></span><br><span class="line"><span class="language-javascript">            &#125;)</span></span><br><span class="line"><span class="language-javascript">          &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">      &#125;,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">del</span>(<span class="params">id</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="variable language_">this</span>.<span class="property">goods</span> = <span class="variable language_">this</span>.<span class="property">goods</span>.<span class="title function_">filter</span>(<span class="function"><span class="params">item</span> =&gt;</span> item.<span class="property">id</span> != id)</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">      &#125;,</span></span><br><span class="line"><span class="language-javascript">      <span class="comment">//数据持久化，localstorage</span></span></span><br><span class="line"><span class="language-javascript">      <span class="attr">watch</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">goods</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="attr">deep</span>: <span class="literal">true</span>,</span></span><br><span class="line"><span class="language-javascript">          <span class="title function_">handler</span>(<span class="params">newValue</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">localStorage</span>.<span class="title function_">setItem</span>(<span class="string">&quot;goods&quot;</span>, <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(newValue))</span></span><br><span class="line"><span class="language-javascript">          &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Vue入门02&quot;&gt;&lt;a href=&quot;#Vue入门02&quot; class=&quot;headerlink&quot; title=&quot;Vue入门02&quot;&gt;&lt;/a&gt;Vue入门02&lt;/h1&gt;&lt;h2 id=&quot;指令补充&quot;&gt;&lt;a href=&quot;#指令补充&quot; class=&quot;headerlink&quot; titl</summary>
      
    
    
    
    <category term="vue" scheme="https://bangwu2001.github.io/categories/vue/"/>
    
    
    <category term="前端" scheme="https://bangwu2001.github.io/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>Vue快速入门</title>
    <link href="https://bangwu2001.github.io/2025/03/30/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9B%B8%E5%85%B3/%E6%A1%86%E6%9E%B6%E8%AF%AD%E8%A8%80%E7%9B%B8%E5%85%B3/%E5%89%8D%E7%AB%AF/vue/01%20vue%E4%BB%8B%E7%BB%8D/01-vue-%E4%BB%8B%E7%BB%8D/"/>
    <id>https://bangwu2001.github.io/2025/03/30/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9B%B8%E5%85%B3/%E6%A1%86%E6%9E%B6%E8%AF%AD%E8%A8%80%E7%9B%B8%E5%85%B3/%E5%89%8D%E7%AB%AF/vue/01%20vue%E4%BB%8B%E7%BB%8D/01-vue-%E4%BB%8B%E7%BB%8D/</id>
    <published>2025-03-30T04:18:42.000Z</published>
    <updated>2025-03-30T03:25:24.195Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Vue快速入门"><a href="#Vue快速入门" class="headerlink" title="Vue快速入门"></a>Vue快速入门</h1><h2 id="vue基本概念"><a href="#vue基本概念" class="headerlink" title="vue基本概念"></a>vue基本概念</h2><p><a href="https://cn.vuejs.org/">vue</a>是一个用于构建用户界面的渐进式<code>JavaScript</code>框架</p><h3 id="创建Vue实例并初始化渲染"><a href="#创建Vue实例并初始化渲染" class="headerlink" title="创建Vue实例并初始化渲染"></a>创建Vue实例并初始化渲染</h3><ol><li>准备容器，即Vue所管理的元素范围</li><li>引包，可以从官方文档找到引用的链接地址（开发版本/生产版本）</li><li>创建实例</li><li>添加配置，完成渲染</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--准备容器--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--这里会编写用于渲染的代码逻辑--&gt;</span></span><br><span class="line">        &#123;&#123;message&#125;&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--导包--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue@2.7.16/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//实例化对象</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">let</span> app = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">el</span>:<span class="string">&quot;#app&quot;</span>,<span class="comment">//通过el配置选择器，指定挂载点，即Vue管理的元素范围</span></span></span><br><span class="line"><span class="language-javascript">            <span class="attr">data</span>:&#123; <span class="comment">//data提供渲染的数据</span></span></span><br><span class="line"><span class="language-javascript">                <span class="attr">message</span>:<span class="string">&quot;hello world!!!&quot;</span></span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;)</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="插值表达式"><a href="#插值表达式" class="headerlink" title="插值表达式"></a>插值表达式</h3><p>插值表达式<code>&#123;&#123;表达式&#125;&#125;</code>是一种<code>Vue</code>的模板语法，利用表达式进行插值，可以把对应的数据渲染到页面，这里面的表达式可以是被求值的代码，<code>JS</code>引擎会将其进行算法得出结果</p><p>使用插值表达式应注意的点：</p><ul><li>使用的数据必须存在，在<code>vue</code>对象的<code>data</code>中能够找的到</li><li>只支持表达式，而非语句，比如<code>if</code>、<code>for</code>等不支持</li><li>不能在标签的属性中使用插值表达式，一般是用于标签的文本位置用于展示</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123;userName&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123;userName.toUpperCase()&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123;age&gt;=18?&quot;成年&quot;:&quot;未成年&quot;&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123;student.name&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123;student.age&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">const</span> app = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">el</span>:<span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">data</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">userName</span>:<span class="string">&quot;bob&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">age</span>:<span class="number">18</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">student</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">name</span>:<span class="string">&quot;李白&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">age</span>:<span class="number">27</span></span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;)</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="Vue核心特性：响应式"><a href="#Vue核心特性：响应式" class="headerlink" title="Vue核心特性：响应式"></a>Vue核心特性：响应式</h3><p>响应式：数据发生变化，视图自动更新</p><p>本质上是数据改变，vue底层会监听到数据修改，然后进行相关的dom操作，来自动更新视图</p><ul><li><p>访问数据里面的属性值：对象.属性名</p></li><li><p>修改数据：对象.属性名=新值</p></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    &#123;&#123;message&#125;&#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">&quot;change&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;change()&quot;</span>&gt;</span>变换<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> app = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">el</span>: <span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">message</span>: <span class="string">&quot;hello word&quot;</span></span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">change</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="comment">//改变message的值</span></span></span><br><span class="line"><span class="language-javascript">      app.<span class="property">message</span> = <span class="string">&quot;we are family&quot;</span></span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="Vue开发者工具"><a href="#Vue开发者工具" class="headerlink" title="Vue开发者工具"></a>Vue开发者工具</h3><p><a href="https://devtools.vuejs.org/">Vue DevTools</a> 是一个插件，能够方便开发者调试Vue应用</p><p>安装：通过谷歌应用商店安装（国内可以在 <a href="https://chrome.zzzmh.cn/index">极简插件</a>上下载）</p><p><img src="/2025/03/30/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9B%B8%E5%85%B3/%E6%A1%86%E6%9E%B6%E8%AF%AD%E8%A8%80%E7%9B%B8%E5%85%B3/%E5%89%8D%E7%AB%AF/vue/01%20vue%E4%BB%8B%E7%BB%8D/01-vue-%E4%BB%8B%E7%BB%8D/image-20250329214623757.png" alt="image-20250329214623757"></p><p>安装之后在浏览器页面右击检查，可以看到对用选项</p><p><img src="/2025/03/30/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9B%B8%E5%85%B3/%E6%A1%86%E6%9E%B6%E8%AF%AD%E8%A8%80%E7%9B%B8%E5%85%B3/%E5%89%8D%E7%AB%AF/vue/01%20vue%E4%BB%8B%E7%BB%8D/01-vue-%E4%BB%8B%E7%BB%8D/image-20250329221240760.png" alt="image-20250329221240760"></p><h2 id="vue指令"><a href="#vue指令" class="headerlink" title="vue指令"></a>vue指令</h2><p><code>Vue</code>会根据不同的指令，针对标签实现不同的功能</p><p>指令：带有<code>v-</code>前缀的特殊标签属性</p><p>常见的指令参照<a href="https://v2.cn.vuejs.org/v2/api/#%E6%8C%87%E4%BB%A4">官方文档</a></p><h3 id="v-html"><a href="#v-html" class="headerlink" title="v-html"></a>v-html</h3><p>相当于<code>innerHtml</code>能够对表达式进行解析</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">v-html</span>=<span class="string">&quot;msg&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> app = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">el</span>: <span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">msg</span>: <span class="string">`</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">        &lt;a href=&quot;https://www.baidu.com&quot;&gt;百度&lt;/&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">        `</span></span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="v-show"><a href="#v-show" class="headerlink" title="v-show"></a>v-show</h3><p>功能：根据表达式真假，控制元素的显示与隐藏</p><p>语法：<code>v-show=&quot;表达式&quot;</code>，表达式值为<code>true</code>显示，<code>false</code>隐藏</p><h3 id="v-if"><a href="#v-if" class="headerlink" title="v-if"></a>v-if</h3><p>功能：根据表达式真假，控制元素的显示与隐藏（条件渲染）</p><p>语法：<code>v-if=&quot;表达式&quot;</code>，表达式值为<code>true</code>显示，<code>false</code>隐藏</p><p><strong>v-show &amp; v-if的区别</strong></p><p><code>v-show</code>是通过<code>display</code>属性来控制元素的显示与隐藏，而<code>v-if</code>是通过条件渲染来实现的</p><p>当表达式值为<code>false</code>时，两者都会使元素不显示，但是存在区别：</p><ul><li><code>v-if</code>此时是通过<code>display=none</code>来不显示元素</li><li><code>v-if</code>此时通过移除元素来实现隐藏</li></ul><p>所以<code>v-show</code>适用于频繁切换隐藏的场景，因为<code>v-if</code>会根据表达式值不断创建和销毁元素，更加耗费性能</p><p>不频繁切换的场景建议使用<code>v-if</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span> <span class="attr">v-show</span>=<span class="string">&quot;flag&quot;</span>&gt;</span>v-show控制的盒子<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span> <span class="attr">v-if</span>=<span class="string">&quot;flag&quot;</span>&gt;</span>v-if控制的盒子<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> app = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">el</span>: <span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">flag</span>: <span class="literal">false</span></span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/2025/03/30/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9B%B8%E5%85%B3/%E6%A1%86%E6%9E%B6%E8%AF%AD%E8%A8%80%E7%9B%B8%E5%85%B3/%E5%89%8D%E7%AB%AF/vue/01%20vue%E4%BB%8B%E7%BB%8D/01-vue-%E4%BB%8B%E7%BB%8D/image-20250329224148152.png" alt="image-20250329224148152"></p><h3 id="v-else和v-else-if"><a href="#v-else和v-else-if" class="headerlink" title="v-else和v-else-if"></a>v-else和v-else-if</h3><p>两者是辅助<code>v-if</code>来进行条件渲染，适用于多条件判断场景</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 根据分数值显示不同的文字--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span> <span class="attr">v-if</span>=<span class="string">&quot;score&gt;=90&quot;</span>&gt;</span>优秀<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span> <span class="attr">v-else-if</span>=<span class="string">&quot;score&gt;=80&quot;</span>&gt;</span>良好<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span> <span class="attr">v-else-if</span>=<span class="string">&quot;score&gt;=60&quot;</span>&gt;</span>合格<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span> <span class="attr">v-else</span>&gt;</span>不合格<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> app = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">el</span>: <span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">score</span>: <span class="number">90</span></span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="v-on"><a href="#v-on" class="headerlink" title="v-on"></a>v-on</h3><p>功能：注册事件，即添加监听+提供处理逻辑</p><p> 语法：</p><ul><li><p>v-on:事件名=”内联语句”</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span>&#123;&#123;score&#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--点击按钮 score值会加一--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">v-on:click</span>=<span class="string">&quot;score++&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> app = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">el</span>: <span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">score</span>: <span class="number">90</span></span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>v-on:事件名=”mehods中的方法名”</p></li><li><p>简写：@事件名=xxx</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span>&#123;&#123;score&#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--点击按钮 score值会加一--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">v-on:click</span>=<span class="string">&quot;add&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> app = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">el</span>: <span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">score</span>: <span class="number">90</span></span></span><br><span class="line"><span class="language-javascript">      &#125;,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">methods</span>: &#123;<span class="comment">//mehods里面提供Vue实例的所有方法</span></span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">add</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">          app.<span class="property">score</span>--</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><p>v-on指令可以调用传参</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">v-on:click=方法名(参数1,参数2)</span><br></pre></td></tr></table></figure><h3 id="v-bind"><a href="#v-bind" class="headerlink" title="v-bind"></a>v-bind</h3><p>功能：动态的设置html标签的属性值，比如<code>src</code>、<code>title</code>、<code>color</code>等</p><p>语法：<code>v-bind:属性名=&quot;表达式&quot;</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">v-bind:style</span>=<span class="string">&quot;&#123; color: color &#125;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span>&#123;&#123;score&#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--按钮改变div文本颜色--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">v-on:click</span>=<span class="string">&quot;red&quot;</span>&gt;</span>红色<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">v-on:click</span>=<span class="string">&quot;green&quot;</span>&gt;</span>绿色<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> app = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">el</span>: <span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">score</span>: <span class="number">90</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">color</span>: <span class="string">&quot;red&quot;</span></span></span><br><span class="line"><span class="language-javascript">      &#125;,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">methods</span>: &#123;<span class="comment">//mehods里面提供Vue实例的所有方法</span></span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">add</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">          app.<span class="property">score</span>--</span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">red</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">          app.<span class="property">color</span> = <span class="string">&quot;red&quot;</span></span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">green</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">          app.<span class="property">color</span> = <span class="string">&quot;green&quot;</span></span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="v-for"><a href="#v-for" class="headerlink" title="v-for"></a>v-for</h3><p>功能：基于数据循环，多次渲染整个元素</p><p> 语法：</p><ul><li>遍历数组<ul><li><code>v-for=&quot;(item,index) in 数组&quot;</code></li><li><code>v-for=&quot;item in 数组&quot;</code></li></ul></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--显示所有图片--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">v-bind:src</span>=<span class="string">&quot;item&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> <span class="attr">v-for</span>=<span class="string">&quot;item in imageList&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> app = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">el</span>: <span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">imageList</span>: [<span class="string">&quot;./imgs/10-01.png&quot;</span>, <span class="string">&quot;./imgs/10-02.png&quot;</span></span></span><br><span class="line"><span class="language-javascript">          , <span class="string">&quot;./imgs/11-00.gif&quot;</span>, <span class="string">&quot;./imgs//11-01.gif&quot;</span>, <span class="string">&quot;./imgs/11-03.gif&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">          <span class="string">&quot;./imgs/11-04.png&quot;</span>, <span class="string">&quot;./imgs/11-05.png&quot;</span></span></span><br><span class="line"><span class="language-javascript">        ],</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">index</span>: <span class="number">0</span></span></span><br><span class="line"><span class="language-javascript">      &#125;,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">methods</span>: &#123;<span class="comment">//mehods里面提供Vue实例的所有方法</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;item in bookList&quot;</span>&gt;</span></span><br><span class="line">        《&#123;&#123;item.name&#125;&#125;》--&#123;&#123;item.author&#125;&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;del(item.id)&quot;</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> app = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">el</span>: <span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">bookList</span>: [&#123; <span class="string">&quot;id&quot;</span>: <span class="number">0</span>, <span class="string">&quot;name&quot;</span>: <span class="string">&quot;红楼梦&quot;</span>, <span class="string">&quot;author&quot;</span>: <span class="string">&quot;曹雪芹&quot;</span> &#125;,</span></span><br><span class="line"><span class="language-javascript">        &#123; <span class="string">&quot;id&quot;</span>: <span class="number">1</span>, <span class="string">&quot;name&quot;</span>: <span class="string">&quot;西游记&quot;</span>, <span class="string">&quot;author&quot;</span>: <span class="string">&quot;吴承恩&quot;</span> &#125;,</span></span><br><span class="line"><span class="language-javascript">        &#123; <span class="string">&quot;id&quot;</span>: <span class="number">2</span>, <span class="string">&quot;name&quot;</span>: <span class="string">&quot;水浒传&quot;</span>, <span class="string">&quot;author&quot;</span>: <span class="string">&quot;施耐庵&quot;</span> &#125;,</span></span><br><span class="line"><span class="language-javascript">        &#123; <span class="string">&quot;id&quot;</span>: <span class="number">3</span>, <span class="string">&quot;name&quot;</span>: <span class="string">&quot;三国演义&quot;</span>, <span class="string">&quot;author&quot;</span>: <span class="string">&quot;罗贯中&quot;</span> &#125;</span></span><br><span class="line"><span class="language-javascript">        ]</span></span><br><span class="line"><span class="language-javascript">      &#125;,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">methods</span>: &#123;<span class="comment">//mehods里面提供Vue实例的所有方法</span></span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">del</span>(<span class="params">id</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="variable language_">this</span>.<span class="property">bookList</span> = <span class="variable language_">this</span>.<span class="property">bookList</span>.<span class="title function_">filter</span>(<span class="function">(<span class="params">item</span>) =&gt;</span> item.<span class="property">id</span> != id)</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/2025/03/30/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9B%B8%E5%85%B3/%E6%A1%86%E6%9E%B6%E8%AF%AD%E8%A8%80%E7%9B%B8%E5%85%B3/%E5%89%8D%E7%AB%AF/vue/01%20vue%E4%BB%8B%E7%BB%8D/01-vue-%E4%BB%8B%E7%BB%8D/v-for.gif" alt="v-for.gif"></p><h4 id="v-for中的key"><a href="#v-for中的key" class="headerlink" title="v-for中的key"></a>v-for中的key</h4><p>key的作用：给元素添加唯一标识，便于Vue进行列表项的正确排序复用</p><p>语法：<code>v-for=xxx :key=xxx</code></p><p>注意：</p><ul><li>key的值只能是字符串或者数字类型</li><li>key的值必须具有唯一性</li><li>推荐使用id作为key，不推荐使用index作为key（因为index可能会发生变化，不对应）</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;item in bookList&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;item.id&quot;</span>&gt;</span></span><br><span class="line">        《&#123;&#123;item.name&#125;&#125;》--&#123;&#123;item.author&#125;&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;del(item.id)&quot;</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> app = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">el</span>: <span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">bookList</span>: [&#123; <span class="string">&quot;id&quot;</span>: <span class="number">0</span>, <span class="string">&quot;name&quot;</span>: <span class="string">&quot;红楼梦&quot;</span>, <span class="string">&quot;author&quot;</span>: <span class="string">&quot;曹雪芹&quot;</span> &#125;,</span></span><br><span class="line"><span class="language-javascript">        &#123; <span class="string">&quot;id&quot;</span>: <span class="number">1</span>, <span class="string">&quot;name&quot;</span>: <span class="string">&quot;西游记&quot;</span>, <span class="string">&quot;author&quot;</span>: <span class="string">&quot;吴承恩&quot;</span> &#125;,</span></span><br><span class="line"><span class="language-javascript">        &#123; <span class="string">&quot;id&quot;</span>: <span class="number">2</span>, <span class="string">&quot;name&quot;</span>: <span class="string">&quot;水浒传&quot;</span>, <span class="string">&quot;author&quot;</span>: <span class="string">&quot;施耐庵&quot;</span> &#125;,</span></span><br><span class="line"><span class="language-javascript">        &#123; <span class="string">&quot;id&quot;</span>: <span class="number">3</span>, <span class="string">&quot;name&quot;</span>: <span class="string">&quot;三国演义&quot;</span>, <span class="string">&quot;author&quot;</span>: <span class="string">&quot;罗贯中&quot;</span> &#125;</span></span><br><span class="line"><span class="language-javascript">        ]</span></span><br><span class="line"><span class="language-javascript">      &#125;,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">methods</span>: &#123;<span class="comment">//mehods里面提供Vue实例的所有方法</span></span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">del</span>(<span class="params">id</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="variable language_">this</span>.<span class="property">bookList</span> = <span class="variable language_">this</span>.<span class="property">bookList</span>.<span class="title function_">filter</span>(<span class="function">(<span class="params">item</span>) =&gt;</span> item.<span class="property">id</span> != id)</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="v-model"><a href="#v-model" class="headerlink" title="v-model"></a>v-model</h3><p>功能：给表单元素使用，双向数据绑定，便于快速获取或设置表单元素内容</p><ul><li>数据变化了，视图自动更新</li><li>视图变化了，数据自动更新</li></ul><p>语法：<code>v-model=变量</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;/&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">label</span>&gt;</span>用户名：<span class="tag">&lt;/<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;user.name&quot;</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">label</span>&gt;</span>密码：<span class="tag">&lt;/<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;user.pwd&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>用户名:&#123;&#123;user.name&#125;&#125;,密码:&#123;&#123;user.pwd&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> app = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">el</span>: <span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">user</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="attr">name</span>: <span class="string">&quot;&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">          <span class="attr">pwd</span>: <span class="string">&quot;&quot;</span></span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="综合案例—记事本"><a href="#综合案例—记事本" class="headerlink" title="综合案例—记事本"></a>综合案例—记事本</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">body</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">font-family</span>: Arial, sans-serif;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">background-color</span>: <span class="number">#f4f4f4</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">display</span>: flex;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">justify-content</span>: center;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">align-items</span>: center;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">height</span>: <span class="number">100vh</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">margin</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.notebook</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">background</span>: white;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">border-radius</span>: <span class="number">8px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">4px</span> <span class="number">8px</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.1</span>);</span></span><br><span class="line"><span class="language-css">      <span class="attribute">padding</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">width</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">h1</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">color</span>: <span class="number">#d9534f</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">margin-bottom</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.task-input</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">width</span>: <span class="built_in">calc</span>(<span class="number">100%</span> - <span class="number">22px</span>);</span></span><br><span class="line"><span class="language-css">      <span class="attribute">padding</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">margin-bottom</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#ccc</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">border-radius</span>: <span class="number">4px</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.add-task</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">width</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">padding</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">background-color</span>: <span class="number">#d9534f</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">color</span>: white;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">border</span>: none;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">border-radius</span>: <span class="number">4px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">cursor</span>: pointer;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.task-list</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">list-style</span>: none;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">padding</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">margin</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.task-list</span> <span class="selector-tag">li</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">display</span>: flex;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">justify-content</span>: space-between;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">align-items</span>: center;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">padding</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">border-bottom</span>: <span class="number">1px</span> solid <span class="number">#eee</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.task-list</span> <span class="selector-tag">li</span> <span class="selector-tag">span</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">flex-grow</span>: <span class="number">1</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.delete-task</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">background</span>: none;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">border</span>: none;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">color</span>: <span class="number">#d9534f</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">font-size</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">cursor</span>: pointer;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.task-count</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">text-align</span>: right;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">margin</span>: <span class="number">10px</span> <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">color</span>: <span class="number">#555</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.clear-tasks</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">width</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">padding</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">background-color</span>: <span class="number">#5bc0de</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">color</span>: white;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">border</span>: none;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">border-radius</span>: <span class="number">4px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">cursor</span>: pointer;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">  </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;notebook&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h1</span>&gt;</span>记事本<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;task-input-container&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入任务&quot;</span> <span class="attr">class</span>=<span class="string">&quot;task-input&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;inputTask&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;add-task&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;add&quot;</span>&gt;</span>添加任务<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;task-list&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;item,index in taskList&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;item.id&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123;index+1&#125;&#125;. &#123;&#123;item.text&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span> <span class="tag">&lt;<span class="name">button</span></span></span><br><span class="line"><span class="tag">            <span class="attr">class</span>=<span class="string">&quot;delete-task&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;del(item.id)&quot;</span>&gt;</span>x<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;task-count&quot;</span>&gt;</span>合计: <span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123;taskList.length&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;clear-tasks&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;clear&quot;</span>&gt;</span>清空任务<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> app = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">el</span>: <span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">inputTask</span>: <span class="string">&quot;&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">taskList</span>: []</span></span><br><span class="line"><span class="language-javascript">      &#125;,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">clear</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="variable language_">this</span>.<span class="property">taskList</span> = []</span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">add</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">inputTask</span>.<span class="property">length</span> &gt; <span class="number">0</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">this</span>.<span class="property">taskList</span>.<span class="title function_">push</span>(&#123; <span class="attr">id</span>: <span class="variable language_">this</span>.<span class="property">taskList</span>.<span class="property">length</span>, <span class="attr">text</span>: <span class="variable language_">this</span>.<span class="property">inputTask</span> &#125;)</span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">this</span>.<span class="property">inputTask</span> = <span class="string">&quot;&quot;</span></span></span><br><span class="line"><span class="language-javascript">          &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">del</span>(<span class="params">id</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="variable language_">this</span>.<span class="property">taskList</span> = <span class="variable language_">this</span>.<span class="property">taskList</span>.<span class="title function_">filter</span>(<span class="function">(<span class="params">item</span>) =&gt;</span> item.<span class="property">id</span> != id)</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>效果：</strong></p><p><img src="/2025/03/30/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9B%B8%E5%85%B3/%E6%A1%86%E6%9E%B6%E8%AF%AD%E8%A8%80%E7%9B%B8%E5%85%B3/%E5%89%8D%E7%AB%AF/vue/01%20vue%E4%BB%8B%E7%BB%8D/01-vue-%E4%BB%8B%E7%BB%8D/记事本.gif" alt="记事本"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Vue快速入门&quot;&gt;&lt;a href=&quot;#Vue快速入门&quot; class=&quot;headerlink&quot; title=&quot;Vue快速入门&quot;&gt;&lt;/a&gt;Vue快速入门&lt;/h1&gt;&lt;h2 id=&quot;vue基本概念&quot;&gt;&lt;a href=&quot;#vue基本概念&quot; class=&quot;headerlink</summary>
      
    
    
    
    <category term="vue" scheme="https://bangwu2001.github.io/categories/vue/"/>
    
    
    <category term="前端" scheme="https://bangwu2001.github.io/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>node.js</title>
    <link href="https://bangwu2001.github.io/2025/03/26/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9B%B8%E5%85%B3/%E6%A1%86%E6%9E%B6%E8%AF%AD%E8%A8%80%E7%9B%B8%E5%85%B3/%E5%89%8D%E7%AB%AF/node%20js/"/>
    <id>https://bangwu2001.github.io/2025/03/26/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9B%B8%E5%85%B3/%E6%A1%86%E6%9E%B6%E8%AF%AD%E8%A8%80%E7%9B%B8%E5%85%B3/%E5%89%8D%E7%AB%AF/node%20js/</id>
    <published>2025-03-26T07:53:42.000Z</published>
    <updated>2025-03-30T03:26:05.266Z</updated>
    
    <content type="html"><![CDATA[<h1 id="node-js"><a href="#node-js" class="headerlink" title="node.js"></a>node.js</h1><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><code>node.js</code>是一个跨平台<code>javascript</code>运行环境，开发者可以搭建服务器端的<code>javascript</code>应用程序；<code>node.js</code>还可以进行前端工程化，对前端代码进行压缩、转译和整合，提高前端开发和运行效率。  </p><p> 所谓的前端工程化是指开发项目到上线，整个过程中集成的所有工具和技术，比如格式化工具、压缩工具、转换工具以及后续框架中用到的脚手架工具等。而<code>node.js</code>是前端工程化的基础（因为<code>node.js</code>可以主动读取前端代码内容）</p><p>浏览器之所以能够执行<code>js</code>代码，依靠的是内核中的<strong>V8引擎</strong>，而<code>node.js</code>是基于<strong>Chrome V8引擎</strong>进行封装的。但是注意<code>node.js</code>环境中没有<code>DOM</code>和<code>BOM</code>等对象</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>直接从<a href="https://nodejs.org/en/download/">官网</a>中选择需要的版本进行下载，下载本地之后按照正常软件安装步骤进行安装即可，最后记得添加环境变量，具体的安装教程可参考<a href="https://blog.csdn.net/WHF__/article/details/129362462">csdn</a>或其他博客。</p><p>最后在<code>cmd</code>中执行<code>node -v</code>可以验证是否成功安装</p><p><img src="/2025/03/26/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9B%B8%E5%85%B3/%E6%A1%86%E6%9E%B6%E8%AF%AD%E8%A8%80%E7%9B%B8%E5%85%B3/%E5%89%8D%E7%AB%AF/node%20js/image-20250319221027028.png" alt="image-20250319221027028"></p><h2 id="快速体验"><a href="#快速体验" class="headerlink" title="快速体验"></a>快速体验</h2><p>在<code>node</code>环境下执行<code>js</code>代码，通过<code>node xxx.js</code>即可</p><p>编写简易<code>js</code>代码，在<code>node</code>环境下执行</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">1</span>; i &lt;= <span class="number">10</span>; i++) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(i)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/2025/03/26/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9B%B8%E5%85%B3/%E6%A1%86%E6%9E%B6%E8%AF%AD%E8%A8%80%E7%9B%B8%E5%85%B3/%E5%89%8D%E7%AB%AF/node%20js/image-20250319221734689.png" alt="image-20250319221734689"></p><h2 id="nodejs常用模块"><a href="#nodejs常用模块" class="headerlink" title="nodejs常用模块"></a>nodejs常用模块</h2><h3 id="fs模块"><a href="#fs模块" class="headerlink" title="fs模块"></a>fs模块</h3><p> <code>fs</code>模块用于读写文件，封装了与本机文件系统进行交互的方法和属性</p><h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><ol><li><p>加载<code>fs</code>模块</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">&quot;fs&quot;</span>) <span class="comment">//fs是模块标识符（模块的名字）</span></span><br></pre></td></tr></table></figure></li><li><p>写入文件内容</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">fs.<span class="title function_">writeFile</span>(<span class="string">&quot;文件路径&quot;</span>,<span class="string">&quot;写入的内容&quot;</span>,<span class="function"><span class="params">err</span>=&gt;</span>&#123;</span><br><span class="line">    <span class="comment">//写入后的回调函数</span></span><br><span class="line">    <span class="comment">//如果写入过程中出现了错误，err参数会有具体的值</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li><li><p>读取文件内容</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">fs.<span class="title function_">readFile</span>(<span class="string">&quot;文件路径&quot;</span>,<span class="function">(<span class="params">err,data</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="comment">//读取后的回调函数</span></span><br><span class="line">    <span class="comment">//data是文件内容的Buffer数据流,err是异常信息</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li></ol><p><strong>实例</strong></p>  <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">&quot;fs&quot;</span>)</span><br><span class="line">fs.<span class="title function_">writeFile</span>(<span class="string">&quot;./fn_write.txt&quot;</span>, <span class="string">&quot;nodejs fs模块写入文件&quot;</span>, <span class="function"><span class="params">err</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;内容已将全部写入文件!!!&quot;</span>)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">fs.<span class="title function_">readFile</span>(<span class="string">&quot;./fn_write.txt&quot;</span>, <span class="function">(<span class="params">err, data</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">if</span> (err) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;读取失败&quot;</span>)</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(data.<span class="title function_">toString</span>())</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p><img src="/2025/03/26/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9B%B8%E5%85%B3/%E6%A1%86%E6%9E%B6%E8%AF%AD%E8%A8%80%E7%9B%B8%E5%85%B3/%E5%89%8D%E7%AB%AF/node%20js/image-20250319225536809.png" alt="image-20250319225536809"></p><h3 id="Path模块"><a href="#Path模块" class="headerlink" title="Path模块"></a>Path模块</h3><p><code>node.js</code>中的<code>Path</code>模块主要用于路径处理</p><p>比如在<code>node.js</code>代码中，相对路径是根据终端所在路径去查找的，可能无法找到你想要的文件，而在代码中编写的相对路径通常是依据当前<code>js</code>文件所在的路径去查找的，所以在编写时尽量实用绝对路径，可以通过<code>__dirname</code>这个内置变量，获取当前<code>js</code>文件所在目录的绝对路径。</p><p><code>path.join()</code>会使用特定于平台的分隔符作为定界符，将所有给定的路径片段连接在一起</p> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&quot;path&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">//获取当前文件的绝对路径</span></span><br><span class="line"><span class="keyword">let</span> filePath = path.<span class="title function_">join</span>(__dirname, <span class="string">&quot;demo01.js&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(filePath)</span><br></pre></td></tr></table></figure><h3 id="http模块"><a href="#http模块" class="headerlink" title="http模块"></a>http模块</h3><p><code>nodejs</code>的<code>http</code>模块可以用于创建web服务，并响应内容给浏览器</p><p><code>http</code>模块创建<code>web</code>服务的步骤：</p><ol><li>加载<code>http</code>模块，创建<code>web</code>服务对象</li><li>监听<code>request</code>请求事件，设置响应头和响应体</li><li>配置端口号，启动服务</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//引入http模块</span></span><br><span class="line"><span class="keyword">const</span> http = <span class="built_in">require</span>(<span class="string">&quot;http&quot;</span>)</span><br><span class="line"><span class="comment">//创建web服务对象</span></span><br><span class="line"><span class="keyword">const</span> server = http.<span class="title function_">createServer</span>()</span><br><span class="line"><span class="comment">//监听request事件</span></span><br><span class="line">server.<span class="title function_">on</span>(<span class="string">&quot;request&quot;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">//设置响应头</span></span><br><span class="line">  res.<span class="title function_">setHeader</span>(<span class="string">&quot;Content-Type&quot;</span>, <span class="string">&quot;text/plain;charset=utf-8&quot;</span>)</span><br><span class="line">  <span class="comment">//设置响应体</span></span><br><span class="line">  res.<span class="title function_">end</span>(<span class="string">&quot;欢迎访问由nodejs创建的web服务&quot;</span>)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">//配置端口号，启动服务</span></span><br><span class="line">server.<span class="title function_">listen</span>(<span class="string">&quot;8000&quot;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;web服务启动...&quot;</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p><img src="/2025/03/26/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9B%B8%E5%85%B3/%E6%A1%86%E6%9E%B6%E8%AF%AD%E8%A8%80%E7%9B%B8%E5%85%B3/%E5%89%8D%E7%AB%AF/node%20js/image-20250325145500987.png" alt="image-20250325145500987"></p><h4 id="案例—基于web服务，开发提供网页资源功能"><a href="#案例—基于web服务，开发提供网页资源功能" class="headerlink" title="案例—基于web服务，开发提供网页资源功能"></a>案例—基于web服务，开发提供网页资源功能</h4><p>浏览器请求资源网页，后端响应指定网页内容，包括html标签、css样式和js等字符串</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//引入模块</span></span><br><span class="line"><span class="keyword">const</span> http = <span class="built_in">require</span>(<span class="string">&quot;http&quot;</span>)</span><br><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">&quot;fs&quot;</span>)</span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&quot;path&quot;</span>)</span><br><span class="line"><span class="comment">//创建web服务对象</span></span><br><span class="line"><span class="keyword">const</span> server = http.<span class="title function_">createServer</span>()</span><br><span class="line"><span class="comment">//监听request事件</span></span><br><span class="line">server.<span class="title function_">on</span>(<span class="string">`request`</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">if</span> (req.<span class="property">url</span> == <span class="string">&quot;/random.html&quot;</span>) &#123;</span><br><span class="line">    <span class="comment">//请求对应的页面</span></span><br><span class="line">    fs.<span class="title function_">readFile</span>(path.<span class="title function_">join</span>(__dirname, <span class="string">&quot;dst/random.html&quot;</span>), <span class="function">(<span class="params">err, data</span>) =&gt;</span> &#123;</span><br><span class="line">      res.<span class="title function_">setHeader</span>(<span class="string">&quot;Content-Type&quot;</span>, <span class="string">&quot;text/html;charset=utf-8&quot;</span>)</span><br><span class="line">      res.<span class="title function_">end</span>(data.<span class="title function_">toString</span>())</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    res.<span class="title function_">setHeader</span>(<span class="string">&quot;Content-Type&quot;</span>, <span class="string">&quot;text/plain;charset=utf-8&quot;</span>)</span><br><span class="line">    res.<span class="title function_">end</span>(<span class="string">&quot;访问的资源不存在&quot;</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">server.<span class="title function_">listen</span>(<span class="string">&quot;8000&quot;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;web服务启动...&quot;</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p><code>dst/random.html</code>的内容</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    * &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">margin</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">padding</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">box-sizing</span>: border-box;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.container</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">margin</span>: <span class="number">10px</span> auto;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">width</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">height</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="comment">/* background-color: antiquewhite; */</span></span></span><br><span class="line"><span class="language-css">      <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.num</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">margin</span>: <span class="number">10px</span> <span class="number">30px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">font-size</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">font-weight</span>: <span class="number">700</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">line-height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">background-color</span>: aquamarine;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.div_button</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">margin</span>: <span class="number">10px</span> auto;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">display</span>: flex;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">justify-content</span>: space-between;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">button</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">width</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">height</span>: <span class="number">30px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">background-color</span>: bisque;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">  </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;num&quot;</span>&gt;</span>0<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;div_button&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;start&quot;</span>&gt;</span>开始<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;end&quot;</span>&gt;</span>结束<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">let</span> numTag = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;.num&quot;</span>)</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">let</span> startButton = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;.start&quot;</span>)</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">let</span> endButton = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;.end&quot;</span>)</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">let</span> intervalId;</span></span><br><span class="line"><span class="language-javascript">    startButton.<span class="title function_">addEventListener</span>(<span class="string">`click`</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">let</span> val = <span class="title class_">Number</span>(numTag.<span class="property">innerText</span>);</span></span><br><span class="line"><span class="language-javascript">      intervalId = <span class="built_in">setInterval</span>(<span class="function">() =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">        val += <span class="number">1</span></span></span><br><span class="line"><span class="language-javascript">        numTag.<span class="property">innerText</span> = val</span></span><br><span class="line"><span class="language-javascript">      &#125;, <span class="number">50</span>)</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    endButton.<span class="title function_">addEventListener</span>(<span class="string">`click`</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">if</span> (intervalId) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="built_in">clearInterval</span>(intervalId)</span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>访问<code>http://localhost:8000/random.html</code>即可看到如下内容</p><p><img src="/2025/03/26/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9B%B8%E5%85%B3/%E6%A1%86%E6%9E%B6%E8%AF%AD%E8%A8%80%E7%9B%B8%E5%85%B3/%E5%89%8D%E7%AB%AF/node%20js/image-20250325152705997.png" alt="image-20250325152705997"></p><h2 id="nodejs模块化"><a href="#nodejs模块化" class="headerlink" title="nodejs模块化"></a>nodejs模块化</h2><p>在<code>node.js</code>中，每个文件都被视为一个单独的模块，一个项目是由多个模块文件组成的</p><p>模块化的好处：提高代码的复用性、按需加载、独立作用域</p><h3 id="commonJS标准—导入和导出"><a href="#commonJS标准—导入和导出" class="headerlink" title="commonJS标准—导入和导出"></a>commonJS标准—导入和导出</h3><p>如何自定义模块供其他模块使用：</p><ul><li><p>需要按照标准语法（CommonJS标准）<strong>导出</strong>和<strong>导入</strong>进行使用</p></li><li><p>导出语法</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span>=&#123;</span><br><span class="line">    对外属性名<span class="number">1</span>:xxx,</span><br><span class="line">    对外属性名<span class="number">2</span>:xxx,</span><br><span class="line">    ......</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>倒入语法</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">require</span>(<span class="string">&quot;模块名或者路径&quot;</span>)</span><br><span class="line"><span class="comment">//如果是nodejs内置模块，直接写名字，比如fs、path、http等</span></span><br><span class="line"><span class="comment">//如果是自定义模块，则写模块文件路径</span></span><br></pre></td></tr></table></figure></li></ul><p><strong>示例</strong></p><p>在<code>dst</code>目录下创建一个<code>utils.js</code>文件</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> url = <span class="string">&quot;https://www.today.com&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">add</span> = (<span class="params">num1, num2</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">return</span> num1 + num2</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  <span class="string">&quot;url&quot;</span>: url,</span><br><span class="line">  <span class="string">&quot;add&quot;</span>: add</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在另一个文件里去导入<code>utils.js</code>模块</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> utils = <span class="built_in">require</span>(<span class="string">&quot;./dst/utils.js&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(utils.<span class="property">url</span>)</span><br><span class="line"><span class="keyword">const</span> res = utils.<span class="title function_">add</span>(<span class="number">10</span>, <span class="number">20</span>)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(res)</span><br></pre></td></tr></table></figure><h3 id="ECMAScript标准—默认导出和导入"><a href="#ECMAScript标准—默认导出和导入" class="headerlink" title="ECMAScript标准—默认导出和导入"></a>ECMAScript标准—默认导出和导入</h3><p> 该标准的默认语法：</p><ul><li><p>导出语法</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span>&#123;</span><br><span class="line">    对外属性名<span class="number">1</span>:xxx,</span><br><span class="line">    对外属性名<span class="number">2</span>:xxx,</span><br><span class="line">    ......</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>导入语法</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> 变量名 <span class="keyword">from</span> <span class="string">&quot;模块名或者路径&quot;</span></span><br></pre></td></tr></table></figure></li></ul><p><strong>注意：</strong></p><p><code>nodejs</code>默认支持<code>commonjs</code>语法，如果需要使用<code>ECMAScript</code>标准语法，则需要在运行模块所在文件夹新建<code>package.json</code>文件，并设置<code>&#123;&quot;type&quot;:&quot;module&quot;&#125;</code></p><p><strong>示例:</strong></p><p><code>utils.js</code>文件</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> url = <span class="string">&quot;https://www.today.com&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">add</span> = (<span class="params">num1, num2</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">return</span> num1 + num2</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="string">&quot;baseurl&quot;</span>: url,</span><br><span class="line">  <span class="string">&quot;add&quot;</span>: add</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>demo01.js</code>文件</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> utils <span class="keyword">from</span> <span class="string">&quot;./dst/utils.js&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(utils.<span class="property">baseurl</span>)</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(utils.<span class="title function_">add</span>(<span class="number">20</span>, <span class="number">40</span>))</span><br></pre></td></tr></table></figure><p><code>package.json</code>文件</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;type&quot;</span>: <span class="string">&quot;module&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="ECMAScript标准—命名导出和导入"><a href="#ECMAScript标准—命名导出和导入" class="headerlink" title="ECMAScript标准—命名导出和导入"></a>ECMAScript标准—命名导出和导入</h3><p>命名标准使用：</p><ul><li>导出：<code>export</code>修饰定义语句</li><li>导入：<code>import &#123;同名变量&#125; from 模块名或路径</code></li></ul><p>如何选择默认导入和导出以及命名导入和导出?</p><ul><li>按需加载，使用命名导入和导出</li><li>全部加载，使用默认导入和导出</li></ul><p><strong>示例:</strong></p><p><code>utils.js</code>文件</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> url = <span class="string">&quot;https://www.today.com&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">add</span> = (<span class="params">num1, num2</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">return</span> num1 + num2</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>demo01.js</code>文件</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; url, add &#125; <span class="keyword">from</span> <span class="string">&quot;./dst/utils.js&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(url)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">add</span>(<span class="number">20</span>, <span class="number">40</span>))</span><br></pre></td></tr></table></figure><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><ul><li>CommonJS标准：一般应用在<code>Node.js</code>项目环境中</li><li>ECMAScript标准：一般应用在前端工程化项目中</li></ul><h2 id="包的概念"><a href="#包的概念" class="headerlink" title="包的概念"></a>包的概念</h2><p>包：将模块、代码以及其他资料聚合成一个文件夹</p><p>包的分类：</p><ul><li>项目包：主要用于编写项目及其业务逻辑</li><li>软件包：封装工具和方法进行使用</li></ul><p>包的要求：在根目录下，必须有<code>package.json</code>文件（包的说明清单文件）</p><p><code>package.json</code>常见的内容：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span>软件包的名称<span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;version&quot;</span><span class="punctuation">:</span>软件包当前的版本<span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span>软件包的简短描述<span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;main&quot;</span><span class="punctuation">:</span>软件包的入口点<span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;author&quot;</span><span class="punctuation">:</span>软件包的作者<span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;license&quot;</span><span class="punctuation">:</span>软件包的许可证（商用后可以用作者名字宣传）</span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>注意：导入软件包时，引入的默认时<code>index.js</code>模块文件/<code>main</code>属性指定的模块文件，该文件是包的唯一出口；该文件的作用是将所有其他模块的方法集中起来，统一向外暴露</p><p><strong>示例</strong></p><p>项目目录如下：</p><p><img src="/2025/03/26/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9B%B8%E5%85%B3/%E6%A1%86%E6%9E%B6%E8%AF%AD%E8%A8%80%E7%9B%B8%E5%85%B3/%E5%89%8D%E7%AB%AF/node%20js/image-20250326005627881.png" alt="image-20250326005627881"></p><p><code>./lib/arr.js</code>文件</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> add = <span class="keyword">function</span> (<span class="params">arr</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> arr.<span class="title function_">reduce</span>(<span class="function">(<span class="params">sum, val</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> sum + val;</span><br><span class="line">  &#125;, <span class="number">0</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  <span class="string">&quot;add&quot;</span>: add</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>./lib/str.js</code>文件</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">len</span> = (<span class="params">str</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">return</span> str.<span class="property">length</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">upp</span> = (<span class="params">str</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">return</span> str.<span class="title function_">toUpperCase</span>()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  <span class="string">&quot;len&quot;</span>: len,</span><br><span class="line">  <span class="string">&quot;upp&quot;</span>: upp</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>index.js</code>文件</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123; add &#125; = <span class="built_in">require</span>(<span class="string">&quot;./lib/arr.js&quot;</span>)</span><br><span class="line"><span class="keyword">const</span> &#123; len, upp &#125; = <span class="built_in">require</span>(<span class="string">&quot;./lib/str.js&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  add,</span><br><span class="line">  len,</span><br><span class="line">  upp</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>test.js</code>文件</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> utils = <span class="built_in">require</span>(<span class="string">&quot;./utils&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(utils.<span class="title function_">add</span>([<span class="number">2</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">9</span>]))</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(utils.<span class="title function_">len</span>(<span class="string">&quot;hjj&quot;</span>))</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(utils.<span class="title function_">upp</span>(<span class="string">&quot;klkljh&quot;</span>))</span><br></pre></td></tr></table></figure><h2 id="npm"><a href="#npm" class="headerlink" title="npm"></a>npm</h2><h3 id="npm-—-软件包管理器"><a href="#npm-—-软件包管理器" class="headerlink" title="npm — 软件包管理器"></a>npm — 软件包管理器</h3><p><code>npm</code>是<code>node.js</code>标准的软件包管理器，安装<code>node.js</code>只会，<code>npm</code>工具也会一同被安装，它能够下载和管理<code>node.js</code>包依赖</p><p><img src="/2025/03/26/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9B%B8%E5%85%B3/%E6%A1%86%E6%9E%B6%E8%AF%AD%E8%A8%80%E7%9B%B8%E5%85%B3/%E5%89%8D%E7%AB%AF/node%20js/image-20250326010255247.png" alt="image-20250326010255247"></p><p>如何使用<code>npm</code>来下载和管理包依赖：</p><ul><li><p>初始化清单文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm init -y</span><br><span class="line">//该命令会自动生成package.json文件，如果当前项目存在该文件，则略过此命令</span><br><span class="line">//package.json里面除了记录前面介绍的那些内容外，还会记录当前项目下载了哪些包</span><br></pre></td></tr></table></figure></li><li><p>下载软件包</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i 软件包名称  #下载对应的软件包</span><br></pre></td></tr></table></figure></li><li><p>使用软件包</p><ul><li>在项目需要的地方导入和使用相关的软件包及其模块</li></ul></li></ul><p><strong>示例：</strong></p><p>新建文件夹<code>npm_demo</code>，在该文件夹下执行<code>npm init -y</code>，会生成<code>package.json</code>文件</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;npm_demo&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;version&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1.0.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;main&quot;</span><span class="punctuation">:</span> <span class="string">&quot;index.js&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;scripts&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;test&quot;</span><span class="punctuation">:</span> <span class="string">&quot;echo \&quot;Error: no test specified\&quot; &amp;&amp; exit 1&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;keywords&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;author&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;license&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ISC&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>下载第三方依赖<code>dayjs</code>，执行<code>npm i dayjs</code></p><p><code>package.json</code>文件中会记录当前项目下载的依赖包的名称和版本</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;npm_demo&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;version&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1.0.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;main&quot;</span><span class="punctuation">:</span> <span class="string">&quot;index.js&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;scripts&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;test&quot;</span><span class="punctuation">:</span> <span class="string">&quot;echo \&quot;Error: no test specified\&quot; &amp;&amp; exit 1&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;keywords&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;author&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;license&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ISC&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;dependencies&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;dayjs&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^1.11.13&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>对应第三方包会下载在该项目下的<code>node_modules</code>文件夹下</p><p><img src="/2025/03/26/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9B%B8%E5%85%B3/%E6%A1%86%E6%9E%B6%E8%AF%AD%E8%A8%80%E7%9B%B8%E5%85%B3/%E5%89%8D%E7%AB%AF/node%20js/image-20250326151732859.png" alt="image-20250326151732859"></p><p>在当前项目中导入第三方包，使用相关工具模块</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> dayjs = <span class="built_in">require</span>(<span class="string">&quot;dayjs&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> date = <span class="title function_">dayjs</span>().<span class="title function_">format</span>(<span class="string">&quot;YYYY-MM-DD&quot;</span>)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(date)</span><br></pre></td></tr></table></figure><h3 id="npm—安装所有的依赖"><a href="#npm—安装所有的依赖" class="headerlink" title="npm—安装所有的依赖"></a>npm—安装所有的依赖</h3><p>场景：从第三方得到的项目文件，里面有<code>package.json</code>文件，但是没有存储第三方依赖包的<code>node_modules</code>文件夹（这是因为用npm下载依赖比用磁盘传递拷贝要快得多），为了能够让项目成功运行起来，需要安装项目涉及到的所有第三方依赖</p><p>此时需要执行<code>npm i</code>命令，其会下载<code>package.json</code>中记录的所有软件包</p><h3 id="npm—全局软件包nodemon"><a href="#npm—全局软件包nodemon" class="headerlink" title="npm—全局软件包nodemon"></a>npm—全局软件包nodemon</h3><ul><li>本地软件包：当前项目内使用，封装了一些属性和方法，存在于项目目录下的<code>node_modules</code>文件夹</li><li>全局软件包：本机所有项目均可使用，封装了一些命令和工具，存在于系统设置的位置</li></ul><p><code>nodemon</code>的作用：替代<code>node</code>命令，检测代码更改，自动重启程序</p><p> <code>nodemon</code>的使用：</p><ul><li>安装：<code>npm i nodemon -g</code>，<code>-g</code>代表安装到全局环境</li><li>运行：<code>nodemon xxx.js</code>来执行目标<code>js</code>文件</li></ul><p>其能感知代码文件变化，自动重启程序</p><p><img src="/2025/03/26/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9B%B8%E5%85%B3/%E6%A1%86%E6%9E%B6%E8%AF%AD%E8%A8%80%E7%9B%B8%E5%85%B3/%E5%89%8D%E7%AB%AF/node%20js/image-20250326153842673.png" alt="image-20250326153842673"></p><h3 id="删除软件包"><a href="#删除软件包" class="headerlink" title="删除软件包"></a>删除软件包</h3><p><code>npm uni 软件包名称</code></p><p>执行该命令后，会从<code>node_modules</code>中删除对应包依赖，并且会从<code>package.json</code>和<code>package-lock.json</code>这两个文件中删除相应的记录</p><p><img src="/2025/03/26/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9B%B8%E5%85%B3/%E6%A1%86%E6%9E%B6%E8%AF%AD%E8%A8%80%E7%9B%B8%E5%85%B3/%E5%89%8D%E7%AB%AF/node%20js/image-20250326154811477.png" alt="image-20250326154811477"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;node-js&quot;&gt;&lt;a href=&quot;#node-js&quot; class=&quot;headerlink&quot; title=&quot;node.js&quot;&gt;&lt;/a&gt;node.js&lt;/h1&gt;&lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简</summary>
      
    
    
    
    <category term="nodeJs" scheme="https://bangwu2001.github.io/categories/nodeJs/"/>
    
    
    <category term="前端" scheme="https://bangwu2001.github.io/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>LLM本地部署流程</title>
    <link href="https://bangwu2001.github.io/2025/03/20/llm/LLM%E6%A8%A1%E5%9E%8B%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2%E5%92%8C%E6%8E%A8%E7%90%86/LLM%E6%A8%A1%E5%9E%8B%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2%E5%92%8C%E6%8E%A8%E7%90%86/"/>
    <id>https://bangwu2001.github.io/2025/03/20/llm/LLM%E6%A8%A1%E5%9E%8B%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2%E5%92%8C%E6%8E%A8%E7%90%86/LLM%E6%A8%A1%E5%9E%8B%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2%E5%92%8C%E6%8E%A8%E7%90%86/</id>
    <published>2025-03-20T13:43:42.000Z</published>
    <updated>2025-03-20T14:42:29.478Z</updated>
    
    <content type="html"><![CDATA[<h1 id="LLM本地部署流程"><a href="#LLM本地部署流程" class="headerlink" title="LLM本地部署流程"></a>LLM本地部署流程</h1><p>下面以本地部署<code>chatglm3-6b</code>模型为例子，展示如何进行本地部署</p><p>本地的环境说明：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">GPU NVIDIA GeForce RTX 3090</span><br><span class="line">CPU 12th Gen Intel(R) Core(TM) i7-12700KF</span><br><span class="line">内存 64.0 GB</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line">accelerate==1.5.1</span><br><span class="line">aiofiles==23.2.1</span><br><span class="line">annotated-types==0.7.0</span><br><span class="line">anyio==4.8.0</span><br><span class="line">certifi==2025.1.31</span><br><span class="line">charset-normalizer==3.4.1</span><br><span class="line">click==8.1.8</span><br><span class="line">colorama==0.4.6</span><br><span class="line">cpm-kernels==1.0.11</span><br><span class="line">exceptiongroup==1.2.2</span><br><span class="line">fastapi==0.115.11</span><br><span class="line">ffmpy==0.5.0</span><br><span class="line">filelock==3.13.1</span><br><span class="line">fsspec==2024.6.1</span><br><span class="line">gradio==5.20.1</span><br><span class="line">gradio_client==1.7.2</span><br><span class="line">groovy==0.1.2</span><br><span class="line">h11==0.14.0</span><br><span class="line">httpcore==1.0.7</span><br><span class="line">httpx==0.28.1</span><br><span class="line">huggingface-hub==0.29.3</span><br><span class="line">idna==3.10</span><br><span class="line">intel-openmp==2021.4.0</span><br><span class="line">Jinja2==3.1.4</span><br><span class="line">latex2mathml==3.77.0</span><br><span class="line">Markdown==3.7</span><br><span class="line">markdown-it-py==3.0.0</span><br><span class="line">MarkupSafe==2.1.5</span><br><span class="line">mdtex2html==1.3.1</span><br><span class="line">mdurl==0.1.2</span><br><span class="line">mkl==2021.4.0</span><br><span class="line">mpmath==1.3.0</span><br><span class="line">networkx==3.3</span><br><span class="line">numpy==2.1.2</span><br><span class="line">orjson==3.10.15</span><br><span class="line">packaging==24.2</span><br><span class="line">pandas==2.2.3</span><br><span class="line">pillow==11.0.0</span><br><span class="line">protobuf==6.30.0</span><br><span class="line">psutil==7.0.0</span><br><span class="line">pydantic==2.10.6</span><br><span class="line">pydantic_core==2.27.2</span><br><span class="line">pydub==0.25.1</span><br><span class="line">Pygments==2.19.1</span><br><span class="line">python-dateutil==2.9.0.post0</span><br><span class="line">python-multipart==0.0.20</span><br><span class="line">pytz==2025.1</span><br><span class="line">PyYAML==6.0.2</span><br><span class="line">regex==2024.11.6</span><br><span class="line">requests==2.32.3</span><br><span class="line">rich==13.9.4</span><br><span class="line">ruff==0.9.10</span><br><span class="line">safehttpx==0.1.6</span><br><span class="line">safetensors==0.5.3</span><br><span class="line">semantic-version==2.10.0</span><br><span class="line">sentencepiece==0.2.0</span><br><span class="line">shellingham==1.5.4</span><br><span class="line">six==1.17.0</span><br><span class="line">sniffio==1.3.1</span><br><span class="line">starlette==0.46.1</span><br><span class="line">sympy==1.13.1</span><br><span class="line">tbb==2021.11.0</span><br><span class="line">tokenizers==0.19.1</span><br><span class="line">tomlkit==0.13.2</span><br><span class="line">torch==2.3.0+cu121</span><br><span class="line">torchaudio==2.3.0+cu121</span><br><span class="line">torchvision==0.18.0+cu121</span><br><span class="line">tqdm==4.67.1</span><br><span class="line">transformers==4.40.1</span><br><span class="line">transformers_modules==0.4.0</span><br><span class="line">typer==0.15.2</span><br><span class="line">typing_extensions==4.12.2</span><br><span class="line">tzdata==2025.1</span><br><span class="line">urllib3==2.3.0</span><br><span class="line">uvicorn==0.34.0</span><br><span class="line">websockets==15.0.1</span><br></pre></td></tr></table></figure><h2 id="模型权重文件下载"><a href="#模型权重文件下载" class="headerlink" title="模型权重文件下载"></a>模型权重文件下载</h2><h3 id="方案一：Hugging-Face"><a href="#方案一：Hugging-Face" class="headerlink" title="方案一：Hugging Face"></a>方案一：Hugging Face</h3><p><a href="https://huggingface.co/">Hugging Face</a></p><ul><li>优点：能找到最新的模型和数据</li><li>缺点：国外网站、不稳定、下载速度慢、可能会失败</li></ul><h4 id="下载方法"><a href="#下载方法" class="headerlink" title="下载方法"></a>下载方法</h4><h5 id="手动下载"><a href="#手动下载" class="headerlink" title="手动下载"></a>手动下载</h5><p>进入官网，查找对应模型，进入页面，逐个点击文件下载，这种方法比较耗时和费力</p><p><img src="/2025/03/20/llm/LLM%E6%A8%A1%E5%9E%8B%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2%E5%92%8C%E6%8E%A8%E7%90%86/LLM%E6%A8%A1%E5%9E%8B%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2%E5%92%8C%E6%8E%A8%E7%90%86/image-20250311171312881.png" alt="image-20250311171312881"></p><h5 id="代码下载"><a href="#代码下载" class="headerlink" title="代码下载"></a>代码下载</h5><p><strong>安装依赖</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">pip install huggingface_hub</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">如果速度比较慢，可以尝试国内镜像</span></span><br><span class="line">pip install huggingface_hub -i https://pypi.tuna.tsinghua.edu.cn/simple  #清华源</span><br><span class="line">pip install huggingface_hub -i http://pypi.douban.com/simple/  #豆瓣源</span><br></pre></td></tr></table></figure><p><strong>下载代码</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&quot;&quot;&quot;</span><br><span class="line">模型下载</span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line">from huggingface_hub import snapshot_download</span><br><span class="line"></span><br><span class="line">if __name__==&quot;__main__&quot;:</span><br><span class="line">    #指定对应模型</span><br><span class="line">    repo_id = &quot;THUDM/chatglm3-6b&quot;</span><br><span class="line">    #本地存储路径</span><br><span class="line">    local_dir = &quot;./modelroot/chatglm-6b&quot;</span><br><span class="line">    #下载</span><br><span class="line">    snapshot_download(repo_id=repo_id,local_dir=local_dir)</span><br></pre></td></tr></table></figure><p><code>repo_id</code>从如下位置复制</p><p><img src="/2025/03/20/llm/LLM%E6%A8%A1%E5%9E%8B%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2%E5%92%8C%E6%8E%A8%E7%90%86/LLM%E6%A8%A1%E5%9E%8B%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2%E5%92%8C%E6%8E%A8%E7%90%86/image-20250311171832319.png" alt="image-20250311171832319"></p><h3 id="方案二：阿里魔塔社区"><a href="#方案二：阿里魔塔社区" class="headerlink" title="方案二：阿里魔塔社区"></a>方案二：阿里魔塔社区</h3><p><a href="https://modelscope.cn/home">ModelScope</a></p><ul><li>优点：国内镜像，速度比国外快一些</li><li>缺点：可能有的模型未及时同步，不是最新版本</li></ul><p>同样可以手动和代码下载，手动下载直接点击对应文件即可，下面介绍代码下载，可参考<a href="https://modelscope.cn/docs/home">官方文档</a></p><p><strong>安装依赖</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install modelscope</span><br></pre></td></tr></table></figure><p><strong>下载代码</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#方式一：命令行的方式下载</span></span><br><span class="line">modelscope download --model=<span class="string">&quot;模型名称&quot;</span> --local_dir=<span class="string">&quot;本地存储路径&quot;</span></span><br><span class="line"><span class="comment">#方式二：SDK方式下载</span></span><br><span class="line"><span class="keyword">from</span> modelscope <span class="keyword">import</span> snapshot_download</span><br><span class="line">model_dir = snapshot_download(<span class="string">&quot;模型名称&quot;</span>)</span><br></pre></td></tr></table></figure><p>模型名称就是对应的仓库名称，查看方法为：</p><p><img src="/2025/03/20/llm/LLM%E6%A8%A1%E5%9E%8B%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2%E5%92%8C%E6%8E%A8%E7%90%86/LLM%E6%A8%A1%E5%9E%8B%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2%E5%92%8C%E6%8E%A8%E7%90%86/image-20250312095837826.png" alt="image-20250312095837826" style="zoom:67%;"></p><p><img src="/2025/03/20/llm/LLM%E6%A8%A1%E5%9E%8B%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2%E5%92%8C%E6%8E%A8%E7%90%86/LLM%E6%A8%A1%E5%9E%8B%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2%E5%92%8C%E6%8E%A8%E7%90%86/image-20250312100413736.png" alt="image-20250312100413736" style="zoom: 67%;"></p><h2 id="模型的加载和推理"><a href="#模型的加载和推理" class="headerlink" title="模型的加载和推理"></a>模型的加载和推理</h2><p>具体步骤可以参照对应模型仓库首页</p><p><a href="https://huggingface.co/THUDM/chatglm3-6b">hugging Face</a>  <a href="https://modelscope.cn/models/ZhipuAI/chatglm3-6b/summary">modelScope</a>，注册阿里魔塔社区，可以免费获得36小时的GPU算力</p><p>安装依赖时，<code>transformers</code>需要指定如下版本，否在会报错，具体问题参考<a href="https://github.com/chatchat-space/Langchain-Chatchat/issues/3915">issue</a></p><p><code>torch</code>版本要与本地的<code>cuda</code>版本要匹配</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">主要依赖安装</span></span><br><span class="line">pip install transformers==4.40.1</span><br><span class="line">pip install torch==2.3.0 torchvision==0.18.0 torchaudio==2.3.0 --index-url https://download.pytorch.org/whl/cu121</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#推理代码</span></span><br><span class="line"><span class="keyword">from</span> transformers <span class="keyword">import</span> AutoTokenizer,AutoModel</span><br><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;start!!!&quot;</span>)</span><br><span class="line">model_path = <span class="string">&quot;D:\software\llm\code\THUDM\chatglm3-6b&quot;</span></span><br><span class="line"></span><br><span class="line">tokenizer = AutoTokenizer.from_pretrained(model_path,trust_remote_code=<span class="literal">True</span>)</span><br><span class="line">model = AutoModel.from_pretrained(model_path,trust_remote_code=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">device = torch.device(<span class="string">&quot;cuda&quot;</span> <span class="keyword">if</span> torch.cuda.is_available() <span class="keyword">else</span> <span class="string">&quot;cpu&quot;</span>)</span><br><span class="line">model.to(device)</span><br><span class="line">model = model.to(<span class="string">&quot;cuda&quot;</span>)</span><br><span class="line"></span><br><span class="line">model = model.<span class="built_in">eval</span>()</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    prompt = <span class="built_in">input</span>(<span class="string">&quot;please input your question,enter q exists:&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> prompt==<span class="string">&quot;q&quot;</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    response,history = model.chat(tokenizer,prompt,history=[])</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;A:&quot;</span>+response)</span><br></pre></td></tr></table></figure><p>测试结果：</p><p><img src="/2025/03/20/llm/LLM%E6%A8%A1%E5%9E%8B%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2%E5%92%8C%E6%8E%A8%E7%90%86/LLM%E6%A8%A1%E5%9E%8B%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2%E5%92%8C%E6%8E%A8%E7%90%86/image-20250313110550843.png" alt="image-20250313110550843"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;LLM本地部署流程&quot;&gt;&lt;a href=&quot;#LLM本地部署流程&quot; class=&quot;headerlink&quot; title=&quot;LLM本地部署流程&quot;&gt;&lt;/a&gt;LLM本地部署流程&lt;/h1&gt;&lt;p&gt;下面以本地部署&lt;code&gt;chatglm3-6b&lt;/code&gt;模型为例子，展示如何进</summary>
      
    
    
    
    <category term="llm" scheme="https://bangwu2001.github.io/categories/llm/"/>
    
    
    <category term="llm" scheme="https://bangwu2001.github.io/tags/llm/"/>
    
  </entry>
  
  <entry>
    <title>LLaMA2安装</title>
    <link href="https://bangwu2001.github.io/2025/03/20/llm/LLaMA2%E5%AE%89%E8%A3%85/LLaMA2%E5%AE%89%E8%A3%85/"/>
    <id>https://bangwu2001.github.io/2025/03/20/llm/LLaMA2%E5%AE%89%E8%A3%85/LLaMA2%E5%AE%89%E8%A3%85/</id>
    <published>2025-03-20T13:43:42.000Z</published>
    <updated>2025-03-20T14:21:25.927Z</updated>
    
    <content type="html"><![CDATA[<h1 id="LLaMA2安装"><a href="#LLaMA2安装" class="headerlink" title="LLaMA2安装"></a><code>LLaMA2</code>安装</h1><p><code>LLaMA2</code>是<code>meta</code>开源的大预言模型，基于<code>transformer</code>架构实现。</p><p><a href="https://huggingface.co/meta-llama/Llama-2-7b-chat/tree/main">hugging Face</a> | <a href="https://modelscope.cn/models/shakechen/Llama-2-7b-chat/summary">modelscope</a></p><p>本文介绍如何利用可视化工具<code>text-generation-webui</code>来装载<code>llama2-7b-chat-hf</code>模型，并进行推理测试</p><h2 id="text-generation-webui"><a href="#text-generation-webui" class="headerlink" title="text-generation-webui"></a>text-generation-webui</h2><p><code>text-generation-webui</code>是一个基于<a href="https://gradio.hugging-face.cn/guides/quickstart">gradio</a>开源的<code>web</code>用户界面工具，旨在为大预言模型提供一个简单易用的交互平台</p><p><a href="https://github.com/oobabooga/text-generation-webui">text-generation-webui Github</a></p><h3 id="本地安装步骤"><a href="#本地安装步骤" class="headerlink" title="本地安装步骤"></a>本地安装步骤</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">step1 拉取github仓库</span></span><br><span class="line">git clone https://github.com/oobabooga/text-generation-webui.git</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">切换代码版本,最新版本的代码本地测试页面ui显示不完全，可能是部分依赖不匹配或者其他原因导致，所以切换到其他版本</span></span><br><span class="line">git checkout 1934cb6</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">step2 进入对应目录，按照要求创建对应的conda虚拟环境（虚拟环境里面应当提前安装了torch等常规依赖）,安装对应依赖</span></span><br><span class="line">pip install -r requirements.txt -i http://mirrors.aliyun.com/pypi/simple/</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">step3 启动服务</span></span><br><span class="line">python server.py</span><br></pre></td></tr></table></figure><p>成功启动的运行结果为：</p><p><img src="/2025/03/20/llm/LLaMA2%E5%AE%89%E8%A3%85/LLaMA2%E5%AE%89%E8%A3%85/image-20250319204728764.png" alt="image-20250319204728764"></p><p>浏览器访问<code>http://127.0.0.1:7861</code>，界面为：</p><p><img src="/2025/03/20/llm/LLaMA2%E5%AE%89%E8%A3%85/LLaMA2%E5%AE%89%E8%A3%85/image-20250319204832941.png" alt="image-20250319204832941" style="zoom: 50%;"></p><h2 id="安装模型llama2-7b-chat-hf"><a href="#安装模型llama2-7b-chat-hf" class="headerlink" title="安装模型llama2-7b-chat-hf"></a>安装模型llama2-7b-chat-hf</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">modelcope download --model shakechen/Llama-2-7b-chat-hf --local_dir &quot;./llama2&quot;</span><br></pre></td></tr></table></figure><p><img src="/2025/03/20/llm/LLaMA2%E5%AE%89%E8%A3%85/LLaMA2%E5%AE%89%E8%A3%85/image-20250319110304902.png" alt="image-20250319110304902"></p><h2 id="装载模型-amp-模型推理"><a href="#装载模型-amp-模型推理" class="headerlink" title="装载模型&amp;模型推理"></a>装载模型&amp;模型推理</h2><p>从<code>Github</code>上拉取的代码里面有一个<code>models</code>文件夹，将从<code>hugging face</code>或者<code>modelscope</code>上下载下来的模型文件复制到该目录下</p><p>然后从<code>web</code>页面选择模型进行加载</p><p><img src="/2025/03/20/llm/LLaMA2%E5%AE%89%E8%A3%85/LLaMA2%E5%AE%89%E8%A3%85/image-20250320093805796.png" alt="image-20250320093805796" style="zoom: 50%;"></p><p>然后点击<code>chat</code>选项卡，注意<code>chat</code>页面的<code>Mode</code>选择<code>instruct</code>，结果可以看出，<code>llama2</code>可以理解中文问题，但是回答都是英文的，效果一般，这是因为<code>LLaMA2</code>的训练语料中仅有<code>0.13%</code>的中文语料</p><p><img src="/2025/03/20/llm/LLaMA2%E5%AE%89%E8%A3%85/LLaMA2%E5%AE%89%E8%A3%85/image-20250320102034914.png" alt="image-20250320102034914"></p><p>利用<code>text-generation-webui</code>装载<code>chatGLM3</code>进行测试，步骤与上述相同，下载模型文件、复制到<code>models</code>目录、从页面选择模型进行装载、测试</p><p><img src="/2025/03/20/llm/LLaMA2%E5%AE%89%E8%A3%85/LLaMA2%E5%AE%89%E8%A3%85/image-20250320101628762.png" alt="image-20250320101628762" style="zoom:67%;"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;LLaMA2安装&quot;&gt;&lt;a href=&quot;#LLaMA2安装&quot; class=&quot;headerlink&quot; title=&quot;LLaMA2安装&quot;&gt;&lt;/a&gt;&lt;code&gt;LLaMA2&lt;/code&gt;安装&lt;/h1&gt;&lt;p&gt;&lt;code&gt;LLaMA2&lt;/code&gt;是&lt;code&gt;meta&lt;/c</summary>
      
    
    
    
    <category term="llm" scheme="https://bangwu2001.github.io/categories/llm/"/>
    
    
    <category term="llm" scheme="https://bangwu2001.github.io/tags/llm/"/>
    
  </entry>
  
  <entry>
    <title>Stable Diffusion模型部署</title>
    <link href="https://bangwu2001.github.io/2025/03/20/llm/Stable%20Diffusion%E6%A8%A1%E5%9E%8B%E9%83%A8%E7%BD%B2/Stable%20Diffusion%E6%A8%A1%E5%9E%8B%E9%83%A8%E7%BD%B2/"/>
    <id>https://bangwu2001.github.io/2025/03/20/llm/Stable%20Diffusion%E6%A8%A1%E5%9E%8B%E9%83%A8%E7%BD%B2/Stable%20Diffusion%E6%A8%A1%E5%9E%8B%E9%83%A8%E7%BD%B2/</id>
    <published>2025-03-20T13:43:42.000Z</published>
    <updated>2025-03-20T14:43:52.128Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Stable-Diffusion模型部署"><a href="#Stable-Diffusion模型部署" class="headerlink" title="Stable Diffusion模型部署"></a>Stable Diffusion模型部署</h1><p>多模态应用能够对文本、图像、音频和视频等不同模态数据进行整合，学习不同模态之间的关联，实现文本、音频和视频之间的相互转换和生成</p><p><a href="https://stabledifffusion.com/">Stable Diffusion</a>是<code>Stability AI</code>开发的开源AI绘画工具，它能够根据文本的描述生成精细图像，也可实现图像反推功能，即输入一张图片，可以提取图像关键信息，转换为一段描述该图的文字，即可实现<code>文生图</code>和<code>图生文</code></p><p>本文主要介绍如何本地借助<a href="https://github.com/AUTOMATIC1111/stable-diffusion-webui">stable-diffusion-webui</a>来部署<code>stable diffusion</code>模型，`s</p><h2 id="安装步骤"><a href="#安装步骤" class="headerlink" title="安装步骤"></a>安装步骤</h2><p>创建<code>python</code>虚拟环境</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">conda create -n stable-diffusion python=3.10.6</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>拉取仓库代码</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/AUTOMATIC1111/stable-diffusion-webui.git</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">切换到历史稳定版本</span></span><br><span class="line">git checkout bef51ae</span><br></pre></td></tr></table></figure><p>安装依赖</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install -r requirements.txt -i https://pypi.tuna.tsinghua.edu.cn/simple</span><br></pre></td></tr></table></figure><p>从魔塔社区下载模型权重文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd &quot;./models/Stable-diffusion&quot;</span><br><span class="line">modelscope download --model AI-ModelScope/stable-diffusion-2-1 --local_dir &quot;./&quot;</span><br></pre></td></tr></table></figure><p>启动服务</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">python launch.py --no-half</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">--no-half 作用是禁用半精度，如果不禁用可能会报错NansException:A tensor with all NaNs was produced <span class="keyword">in</span> Une</span></span><br></pre></td></tr></table></figure><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p>访问<a href="http://127.0.0.1:7861/">http://127.0.0.1:7861/</a> 即可看到对应的<code>webui</code></p><p>可以在页面调整采样步骤、生成的图片宽高等信息，采样步骤越大，图片大小越大，生成的图片会越清晰、质量也会越好</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Stable-Diffusion模型部署&quot;&gt;&lt;a href=&quot;#Stable-Diffusion模型部署&quot; class=&quot;headerlink&quot; title=&quot;Stable Diffusion模型部署&quot;&gt;&lt;/a&gt;Stable Diffusion模型部署&lt;/h1&gt;&lt;</summary>
      
    
    
    
    <category term="llm" scheme="https://bangwu2001.github.io/categories/llm/"/>
    
    
    <category term="llm" scheme="https://bangwu2001.github.io/tags/llm/"/>
    
  </entry>
  
  <entry>
    <title>Qwen-VL模型部署</title>
    <link href="https://bangwu2001.github.io/2025/03/20/llm/Qwen-VL%E6%A8%A1%E5%9E%8B%E9%83%A8%E7%BD%B2/Qwen-VL%E6%A8%A1%E5%9E%8B%E9%83%A8%E7%BD%B2/"/>
    <id>https://bangwu2001.github.io/2025/03/20/llm/Qwen-VL%E6%A8%A1%E5%9E%8B%E9%83%A8%E7%BD%B2/Qwen-VL%E6%A8%A1%E5%9E%8B%E9%83%A8%E7%BD%B2/</id>
    <published>2025-03-20T13:43:42.000Z</published>
    <updated>2025-03-20T14:43:15.632Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Qwen-VL模型部署"><a href="#Qwen-VL模型部署" class="headerlink" title="Qwen-VL模型部署"></a>Qwen-VL模型部署</h1><p><strong>Qwen-VL</strong> 是阿里云研发的大规模视觉语言模型（Large Vision Language Model, LVLM）。Qwen-VL 可以以图像、文本、检测框作为输入，并以文本和检测框作为输出。本文主要介绍本地如何安装部署其量化版本模型<code>Qwen-VL_Chat-Int4</code></p><p>参考资料:</p><p><a href="https://huggingface.co/Qwen/Qwen-VL-Chat-Int4">Hugging Face</a>   |  <a href="https://modelscope.cn/models/Qwen/Qwen-VL-Chat-Int4">modelscope</a></p><h2 id="下载模型"><a href="#下载模型" class="headerlink" title="下载模型"></a>下载模型</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">创建存储目录</span></span><br><span class="line">mkdir &quot;Qwen/Qwen-VL-Chat-Int4&quot;</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">下载模型到指定目录</span></span><br><span class="line">modelscope download --model &quot;Qwen/Qwen-VL-Chat-Int4&quot; --local_dir &quot;./Qwen/Qwen-VL-Chat-Int4&quot;</span><br></pre></td></tr></table></figure><h2 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#本机使用的torch版本为</span><br><span class="line">pip install torch==2.3.0 torchvision==0.18.0 torchaudio==2.3.0 --index-url https://download.pytorch.org/whl/cu121</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#下载的模型文件里面有一个依赖列表 requirements.txt</span><br><span class="line">pip install -r requirements.txt</span><br><span class="line">pip install optimum</span><br><span class="line"></span><br><span class="line">git clone https://github.com/JustinLin610/AutoGPTQ.git &amp; cd AutoGPTQ</span><br><span class="line">pip install -v .</span><br></pre></td></tr></table></figure><p>其中用于大模型量化的工具<a href="https://github.com/JustinLin610/AutoGPTQ">autogptq</a>，可以使用如下方式进行快速安装</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install auto-gptq</span><br></pre></td></tr></table></figure><p>安装之后出现依赖问题：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cannot import name ‘Cache‘ from ‘transformers‘</span><br></pre></td></tr></table></figure><p>原因在于<code>transformers</code>和<code>peft</code>两者版本不匹配</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#解决办法</span><br><span class="line">peft==0.10.0</span><br><span class="line">transformers==4.37.2</span><br></pre></td></tr></table></figure><h2 id="模型推理"><a href="#模型推理" class="headerlink" title="模型推理"></a>模型推理</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> transformers <span class="keyword">import</span> AutoModelForCausalLM, AutoTokenizer</span><br><span class="line"><span class="keyword">import</span> torch</span><br><span class="line">torch.manual_seed(<span class="number">1234</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Note: The default behavior now has injection attack prevention off.</span></span><br><span class="line">tokenizer = AutoTokenizer.from_pretrained(<span class="string">&quot;Qwen/Qwen-VL-Chat-Int4&quot;</span>, trust_remote_code=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># use cuda device</span></span><br><span class="line">model = AutoModelForCausalLM.from_pretrained(<span class="string">&quot;Qwen/Qwen-VL-Chat-Int4&quot;</span>, device_map=<span class="string">&quot;cuda&quot;</span>, trust_remote_code=<span class="literal">True</span>).<span class="built_in">eval</span>()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 1st dialogue turn</span></span><br><span class="line">query = tokenizer.from_list_format([</span><br><span class="line">    &#123;<span class="string">&#x27;image&#x27;</span>: <span class="string">&#x27;https://qianwen-res.oss-cn-beijing.aliyuncs.com/Qwen-VL/assets/demo.jpeg&#x27;</span>&#125;,<span class="comment">#如果想要分析本地图片，直接将这个链接改为本地的路径即可</span></span><br><span class="line">    &#123;<span class="string">&#x27;text&#x27;</span>: <span class="string">&#x27;这是什么&#x27;</span>&#125;,</span><br><span class="line">])</span><br><span class="line">response, history = model.chat(tokenizer, query=query, history=<span class="literal">None</span>)</span><br><span class="line"><span class="built_in">print</span>(response)</span><br><span class="line"><span class="comment"># 图中是一名年轻女子在沙滩上和她的狗玩耍，狗的品种可能是拉布拉多。她们坐在沙滩上，狗的前腿抬起来，似乎在和人类击掌。两人之间充满了信任和爱。</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 2nd dialogue turn</span></span><br><span class="line">response, history = model.chat(tokenizer, <span class="string">&#x27;输出&quot;击掌&quot;的检测框&#x27;</span>, history=history)</span><br><span class="line"><span class="built_in">print</span>(response)</span><br><span class="line"><span class="comment"># &lt;ref&gt;击掌&lt;/ref&gt;&lt;box&gt;(517,508),(589,611)&lt;/box&gt;</span></span><br><span class="line">image = tokenizer.draw_bbox_on_latest_picture(response, history)</span><br><span class="line"><span class="keyword">if</span> image:</span><br><span class="line">  image.save(<span class="string">&#x27;1.jpg&#x27;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">  <span class="built_in">print</span>(<span class="string">&quot;no box&quot;</span>)</span><br></pre></td></tr></table></figure><p><a href="https://modelscope.cn/models/Qwen/Qwen-VL-Chat-Int4/feedback/issueDetail/25169">中间出现问题的解决方法</a></p><p>最终推理的结果：</p><p><img src="/2025/03/20/llm/Qwen-VL%E6%A8%A1%E5%9E%8B%E9%83%A8%E7%BD%B2/Qwen-VL%E6%A8%A1%E5%9E%8B%E9%83%A8%E7%BD%B2/5761433e-b4c5-4d1d-b7d5-cd020d2ee86b.png" alt="img"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Qwen-VL模型部署&quot;&gt;&lt;a href=&quot;#Qwen-VL模型部署&quot; class=&quot;headerlink&quot; title=&quot;Qwen-VL模型部署&quot;&gt;&lt;/a&gt;Qwen-VL模型部署&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;Qwen-VL&lt;/strong&gt; 是阿里云研发的大规</summary>
      
    
    
    
    <category term="llm" scheme="https://bangwu2001.github.io/categories/llm/"/>
    
    
    <category term="llm" scheme="https://bangwu2001.github.io/tags/llm/"/>
    
  </entry>
  
  <entry>
    <title>Gradio入门</title>
    <link href="https://bangwu2001.github.io/2025/03/20/llm/gradio%E5%85%A5%E9%97%A8/gradio%E5%85%A5%E9%97%A8/"/>
    <id>https://bangwu2001.github.io/2025/03/20/llm/gradio%E5%85%A5%E9%97%A8/gradio%E5%85%A5%E9%97%A8/</id>
    <published>2025-03-20T13:43:42.000Z</published>
    <updated>2025-03-20T13:41:40.551Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Gradio入门"><a href="#Gradio入门" class="headerlink" title="Gradio入门"></a>Gradio入门</h1><p><a href="https://gradio.hugging-face.cn/guides/quickstart">官方文档</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Gradio入门&quot;&gt;&lt;a href=&quot;#Gradio入门&quot; class=&quot;headerlink&quot; title=&quot;Gradio入门&quot;&gt;&lt;/a&gt;Gradio入门&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://gradio.hugging-face.cn/guides</summary>
      
    
    
    
    <category term="llm" scheme="https://bangwu2001.github.io/categories/llm/"/>
    
    
    <category term="llm" scheme="https://bangwu2001.github.io/tags/llm/"/>
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://bangwu2001.github.io/2024/09/12/NDSS/"/>
    <id>https://bangwu2001.github.io/2024/09/12/NDSS/</id>
    <published>2024-09-12T15:04:15.961Z</published>
    <updated>2024-09-12T15:08:53.654Z</updated>
    
    <content type="html"><![CDATA[<iframe src="_Response_NDSS_2025.pdf" style="width:100%; height:600px;" frameborder="0"></iframe>]]></content>
    
    
      
      
    <summary type="html">&lt;iframe src=&quot;_Response_NDSS_2025.pdf&quot; style=&quot;width:100%; height:600px;&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;

</summary>
      
    
    
    
    
  </entry>
  
</feed>
